<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Toha</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Toha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 06 Feb 2024 06:20:34 +0600</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Configuring Featured Posts Section</title>
      <link>http://localhost:1313/posts/configuration/sections/featured-posts/</link>
      <pubDate>Tue, 06 Feb 2024 06:20:34 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/featured-posts/</guid>
      <description>The Fetured Posts section is used to showcase any post you like. To enable this section, create a featured-posts.yaml file in the data/en/sections directory and include the following content:
# section information section: name: Featured Posts # Title of section (default: &amp;#34;&amp;#34;) id: featured-posts # url id/slug of section *Required* enable: true # Boolean to determine if this section is enabled (default: false) weight: 6 # Order to display section in (default: alphabetical followed by weight) showOnNavbar: true # Boolean to determine if a link should be shown for this section on the navbar hideTitle: true # Can optionally hide the title in sections (default: false) # posts to feature posts: - quickstart - update-v3-to-v4 - prepare-site </description>
    </item>
    
    <item>
      <title>How to Contribute?</title>
      <link>http://localhost:1313/posts/contributing/</link>
      <pubDate>Fri, 19 Jan 2024 02:30:00 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/contributing/</guid>
      <description>Ways to Contribute You can contribute to this theme in various ways.
Code Pull requests are most welcome and I will be happy to review. Just follow the following principles:
Keep it simple. Keep it consistent with the design of the UI. Use as few dependencies as possible. Be patient. Testing and reporting issues You can report a bug File a feature request share your thoughts Documentation You can also contribute to the theme documentation by:</description>
    </item>
    
    <item>
      <title>How to add an unsupported language</title>
      <link>http://localhost:1313/posts/translation/new-language/</link>
      <pubDate>Mon, 15 Jan 2024 06:20:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/translation/new-language/</guid>
      <description>If you want to translate to an unsupported language, you can translate the UI elements.
Create an i18n file To do so, you have to create the i18n diretory inside the root of the site, the directory where you can find the config.yaml file, and directories like data, content, etc.
Afterwards, you can create the file &amp;lt;language_code&amp;gt;.toml into the i18n directory. In this directory, you can find all language codes with the flag that will appear with that code.</description>
    </item>
    
    <item>
      <title>How to Translate Posts</title>
      <link>http://localhost:1313/posts/translation/content/</link>
      <pubDate>Mon, 15 Jan 2024 06:20:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/translation/content/</guid>
      <description>This theme has built-in support for multiple language.
Before starting the post translation, make sure that you have enabled the language to your site. If that&amp;rsquo;s not the case, you can follow the section Add the language to the site from the guide How to Translate Site Data.
Creating the post Once you have your desired language added to your website, know you can translate posts to that language. We&amp;rsquo;re going to assume that you want to translate an existing post.</description>
    </item>
    
    <item>
      <title>How to Translate Site Data</title>
      <link>http://localhost:1313/posts/translation/site-data/</link>
      <pubDate>Mon, 15 Jan 2024 06:20:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/translation/site-data/</guid>
      <description>This theme has built-in support for multiple language.
Add the language to the site Adding the language to your site will translate the UI to that language (e.g. the buttons, the nav bars, etc.).
Get language code In order to translate your site, you will need the code from your language. The following table contains the supported languages algonside its codes:
Languages Code English en / none বাংলা bn Français fr Indonesian id Deutsch de Español es 简体中文 zh-cn / zh-tw हिन्दी hi Italiano it 日本語 jp 한국어 ko русский ru suomi fi Tiếng Việt vn Turkish tr Arabic (العربية) ar Português Europeu pt-pt Català ad Português Brasileiro pt-br Dutch nl For a complete list of the supported languages, please check the README file from the toha repository.</description>
    </item>
    
    <item>
      <title>Adding a new section</title>
      <link>http://localhost:1313/posts/customizing/new-section/</link>
      <pubDate>Sat, 13 Jan 2024 22:30:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/customizing/new-section/</guid>
      <description>If the default sections, templates, and components do not meet your needs, you can easily add new sections, templates, and components to your site. This guide will demonstrate how to add a new section to your site.
Step 1 : Add Layout File To add a new section to your site, you need to create a layout file in the layouts/partials/sections directory. The file should be named after the section&amp;rsquo;s name.</description>
    </item>
    
    <item>
      <title>Customizing CSS</title>
      <link>http://localhost:1313/posts/customizing/customize-css/</link>
      <pubDate>Sat, 13 Jan 2024 22:00:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/customizing/customize-css/</guid>
      <description>This theme allows you to customize the appearance of your site and its components by overriding the default CSS. This guide will demonstrate how to override the theme&amp;rsquo;s color scheme and customize the CSS of individual components.
This theme uses Sass to generate CSS. If you are not familiar with Sass, you can learn more about it from here.
Override Theme Colors Variables If you want to change the default color scheme of the theme, you can override the theme color variables.</description>
    </item>
    
    <item>
      <title>Migrate from V3 to V4 version</title>
      <link>http://localhost:1313/posts/update-v3-to-v4/</link>
      <pubDate>Fri, 05 Jan 2024 02:30:00 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/update-v3-to-v4/</guid>
      <description>Toha V4 has introduced a lots of breaking changes in terms of how the theme is used and how it is configured. This guide will help you to migrate from v3 to v4 version of the theme. Please, check this release notes for complete changelog.
In this guide, I will walk you through the steps to migrate from version 3 to version 4 of the Toha theme. This guide is based on the migration guide written by Alexandre Neto in this issue.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>http://localhost:1313/posts/quickstart/</link>
      <pubDate>Tue, 09 Aug 2022 00:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/quickstart/</guid>
      <description>Greeting! Thank you for deciding to use this theme. In this guide, I will show you how you can get started with this theme very quickly.
Here, I am going to assume that you want to start a fresh Hugo site using this theme. If you are already using Hugo for your site, then you must know how to use a theme. In that case, please follow this sample repo for further reference.</description>
    </item>
    
    <item>
      <title>Enable Dark Theme</title>
      <link>http://localhost:1313/posts/customizing/dark-theme/</link>
      <pubDate>Sun, 12 Jun 2022 01:30:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/customizing/dark-theme/</guid>
      <description>To enable the dark mode in Toha v4.0.0, simply set the darkMode.enable field to true under the params.features section in your config.yaml file. For example:
params: features: darkMode: enable: true Congratulations! You are all set. You can now enjoy the dark mode in your site. The dark mode will obey user&amp;rsquo;s system preference.</description>
    </item>
    
    <item>
      <title>Mermaid Support</title>
      <link>http://localhost:1313/posts/writing-posts/mermaid/</link>
      <pubDate>Mon, 14 Mar 2022 06:15:35 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/mermaid/</guid>
      <description>This theme comes with built in mermaid support powered by mermaid-js. To enable mermaid for a page, you have to put mermaid: true in your page front-matter. For example, this page has the following front-matter:
title: &amp;#34;Mermaid Support&amp;#34; date: 2022-03-14T06:15:35+06:00 menu: sidebar: name: Mermaid identifier: writing-post-mermaid parent: writing-post weight: 60 mermaid: true Then, you can use mermaid short code to add your mermaid content. For example:
{{&amp;lt; mermaid align=&amp;#34;center&amp;#34;&amp;gt;}} # your mermaid content here {{&amp;lt; /mermaid &amp;gt;}} The mermaid short code accept the following parameters:</description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>http://localhost:1313/posts/comments/</link>
      <pubDate>Mon, 14 Mar 2022 06:00:23 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/comments/</guid>
      <description>Comments This theme has built-in support for comment on the posts. Currently, it support the following comment plugins:
Disqus Valine Utterances Giscus For a complete list of supported comments, please refer the sample config.yaml file.
Disqus Disqus is a popular comment plug-in. After signing up to Disqus you will need to provide your shortname under params.features section of your config.yaml file as below:
comment: enable: true services: disqus: shortName: toha-example-site Valine Valine appears to be a Chinese comments comments plugin.</description>
    </item>
    
    <item>
      <title>External Link on Sidebar</title>
      <link>http://localhost:1313/posts/external-link/</link>
      <pubDate>Mon, 14 Mar 2022 06:00:23 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/external-link/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Supports Links</title>
      <link>http://localhost:1313/posts/supports/</link>
      <pubDate>Mon, 14 Mar 2022 06:00:23 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/supports/</guid>
      <description>This theme supports adding various support/donation links in your site. Currently, supported support links are:
Ko-fi Buy Me a Coffee For a complete list of supported support links, please refer the sample config.yaml file.
Ko-fi You can add your Ko-fi floating button in your website. To add the floating button, add the support section under params.features section of your sites config.yaml file:
support: enable: true services: kofi: user: &amp;lt;your ko-fi user id&amp;gt; text: Tip Me textColor: &amp;#39;#f9fafc&amp;#39; backgroundColor: &amp;#39;#248aaa&amp;#39; Buy Me a Coffee You can add your &amp;ldquo;Buy Me a Coffee&amp;rdquo; floating button in your website.</description>
    </item>
    
    <item>
      <title>Customizing the layout</title>
      <link>http://localhost:1313/posts/customizing/customize-layout/</link>
      <pubDate>Sat, 07 Aug 2021 06:20:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/customizing/customize-layout/</guid>
      <description>If you customize the layout of an existing component, you will not receive any future updates for that component when the theme is updated. You will need to manually update the component in your repository. In this tutorial, I will guide you on how to customize the layout of a theme. I have personally gone through the process and will share my insights to make it easier for you.</description>
    </item>
    
    <item>
      <title>Prepare Your Site</title>
      <link>http://localhost:1313/posts/getting-started/prepare-site/</link>
      <pubDate>Mon, 08 Jun 2020 23:00:20 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/prepare-site/</guid>
      <description>In this post, we are going to create a hugo site from scratch. Then, we will configure it with Toha theme, make it multilingual, add some example posts. At the end of this post, you should be able to run a fully functional hugo site with Toha theme locally.
If you want a head start, you can just fork hugo-toha/hugo-toha.github.io repo, rename it and update with your own data. This repo has already been configured to deploy in Github Pages and Netlify.</description>
    </item>
    
    <item>
      <title>Deploy site in Github Pages</title>
      <link>http://localhost:1313/posts/getting-started/github-pages/</link>
      <pubDate>Mon, 08 Jun 2020 22:00:20 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/github-pages/</guid>
      <description>In this post, we are going to deploy the site we have created in previous post in Github Pages. At first, make sure that your repository name is &amp;lt;your username&amp;gt;.github.io. Then, commit any local uncommitted changes and push into Github.
Create gh-pages Branch At first, create a new branch named gh-pages. Github will automatically set respective configurations for Github Pages when it see a branch with this name.
# create the gh-pages branch $ git checkout -b gh-pages # push the source branch into Github $ git push gh-pages gh-pages Enable Github Action We are going to automate the deploying process using Github Actions.</description>
    </item>
    
    <item>
      <title>Deploy site in Netlify</title>
      <link>http://localhost:1313/posts/getting-started/netlify/</link>
      <pubDate>Mon, 08 Jun 2020 21:00:15 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/netlify/</guid>
      <description>Netlify offers an excellent and easy process for deploying hugo static site. You can deploy your site in matter of few clicks. Unlike Github Pages, you can name your repository whatever you want. You can also customize the site URL.
In this post, we will show the step-by-step process of deploying a hugo site with netlify.
Add Netlify Configuration At first, create a netlify.toml file at the root of your repository and add the following configuration there:</description>
    </item>
    
    <item>
      <title>Automate Theme Update</title>
      <link>http://localhost:1313/posts/getting-started/theme-update/</link>
      <pubDate>Mon, 08 Jun 2020 20:00:15 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/theme-update/</guid>
      <description>To ensure your site benefits from the most recent features and corrections, it&amp;rsquo;s crucial to keep it updated with the latest theme version. This article will guide you through the process of establishing a GitHub workflow that will automatically update the theme version. This action will perform daily checks for any updates to the theme. If an update is detected, it will generate a PR to update your site to the most recent theme version.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>http://localhost:1313/posts/features/</link>
      <pubDate>Mon, 08 Jun 2020 08:59:13 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/features/</guid>
      <description>Test Link
This theme has been designed from a personal point of preference. As a developer, I want to organize my portfolio in a way that will reflect my skills best. So, this theme may or may not meet your needs but I will be happy to have your feedback.
This post will give you an overview of the features that this theme incorporates.
Minimalist Design This theme has been designed to be minimalist and beautiful.</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>http://localhost:1313/posts/shortcodes/</link>
      <pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/shortcodes/</guid>
      <description>This is a sample post intended to test the followings:
Default hero image. Different shortcodes. Alert The following alerts are available in this theme.
Success Code:
{{&amp;lt; alert type=&amp;#34;success&amp;#34; &amp;gt;}} This is sample alert with `type=&amp;#34;success&amp;#34;`. {{&amp;lt; /alert &amp;gt;}} Result:
This is sample alert with type=&amp;quot;success&amp;quot;. Danger Code:
{{&amp;lt; alert type=&amp;#34;danger&amp;#34; &amp;gt;}} This is sample alert with `type=&amp;#34;danger&amp;#34;`. {{&amp;lt; /alert &amp;gt;}} Result:
This is sample alert with type=&amp;quot;danger&amp;quot;. Warning Code:</description>
    </item>
    
    <item>
      <title>Configuring Site Parameters</title>
      <link>http://localhost:1313/posts/configuration/site-parameters/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:55 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/site-parameters/</guid>
      <description>After installing this theme, when you first run your site, it will start with the default parameters. It should look similar to this example site, but it won&amp;rsquo;t have any sections on the homepage. Don&amp;rsquo;t worry, you can easily add those sections by providing the necessary data files.
In the upcoming posts, I&amp;rsquo;ll guide you on how to add those sections and customize your site. But first, let&amp;rsquo;s start with changing the site parameters.</description>
    </item>
    
    <item>
      <title>Configuring About Section</title>
      <link>http://localhost:1313/posts/configuration/sections/about/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/about/</guid>
      <description>The purpose of the About section is to provide a brief introduction about yourself on your website. In this post, we will guide you on how to configure the About section. For a complete reference, please check out the sample about.yaml file.
To get started, create an about.yaml file in the data/en/sections directory of your website. Then, follow the instructions below.
Add Section information section: name: About # Title of section (default: &amp;#34;&amp;#34;) id: about # url id/slug of section *Required* enable: true # Boolean to determine if this section is enabled (default: false) weight: 1 # Order to display section in (default: alphabetical followed by weight) showOnNavbar: true # Boolean to determine if a link should be shown for this section on the navbar template: sections/about.</description>
    </item>
    
    <item>
      <title>Configuring Skills Section</title>
      <link>http://localhost:1313/posts/configuration/sections/skills/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:45 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/skills/</guid>
      <description>The Skills section is designed to showcase your skills and provide insights into your expertise in each skill. In this post, we will guide you on how to configure the Skills section of your site. For a complete reference, please check out the sample skills.yaml file.
To begin, create a skills.yaml file in the data/en/sections directory of your site. Then, follow the instructions below.
Add Section Information Add the following section metadata to your skills.</description>
    </item>
    
    <item>
      <title>Configuring Education Section</title>
      <link>http://localhost:1313/posts/configuration/sections/education/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:40 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/education/</guid>
      <description>The Education section is designed to showcase your academic background. In this post, we will guide you on how to configure the Education section of your site. For a complete reference, you can refer to the sample education.yaml file.
To begin, create a new file named education.yaml in the data/en/sections directory of your site. Then, follow the instructions below.
Add Section Information Add the following section metadata to your education.yaml file:</description>
    </item>
    
    <item>
      <title>Configuring Experiences Section</title>
      <link>http://localhost:1313/posts/configuration/sections/experiences/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:40 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/experiences/</guid>
      <description>The Experiences section is designed to showcase your career background and highlight the responsibilities you have handled throughout your professional journey. In this post, we will guide you on how to configure the Experiences section of your site. For a complete reference, you can refer to the sample experiences.yaml file.
To begin, create a new file named experiences.yaml in the data/en/sections directory of your site. Then, follow the instructions below.</description>
    </item>
    
    <item>
      <title>Configuring Projects Section</title>
      <link>http://localhost:1313/posts/configuration/sections/projects/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:35 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/projects/</guid>
      <description>The purpose of the Projects section is to effectively showcase your projects. In this post, we will guide you on how to configure the Projects section on your site. For a complete reference, please refer to the sample projects.yaml file.
To begin, create a new file named projects.yaml in the data/en/sections directory of your website. Then, follow the instructions below.
Add Section Information Add the following section metadata to your projects.</description>
    </item>
    
    <item>
      <title>Configuring Recent Posts Section</title>
      <link>http://localhost:1313/posts/configuration/sections/recent-posts/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:34 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/recent-posts/</guid>
      <description>The Recent Posts section is used to showcase the latest posts from your content. To enable this section, create a recent-posts.yaml file in the data/en/sections directory and include the following content:
# section information section: name: Recent Posts # Title of section (default: &amp;#34;&amp;#34;) id: recent-posts # url id/slug of section *Required* enable: true # Boolean to determine if this section is enabled (default: false) weight: 6 # Order to display section in (default: alphabetical followed by weight) showOnNavbar: true # Boolean to determine if a link should be shown for this section on the navbar hideTitle: true # Can optionally hide the title in sections (default: false) numShow: 4 # Can optionally increase the number of posts to display (default: 3) showMoreButton: false #Can optionally show &amp;#39;More Posts&amp;#39; button (default: false) </description>
    </item>
    
    <item>
      <title>Configuring Achievements Section</title>
      <link>http://localhost:1313/posts/configuration/sections/achievements/</link>
      <pubDate>Mon, 08 Jun 2020 06:20:30 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/configuration/sections/achievements/</guid>
      <description>The Achievements section is designed to display your accomplishments in a visually appealing gallery format. This guide will walk you through the process of configuring the Achievements section on your website. For a complete reference, you can refer to the sample achievements.yaml file.
To begin, create a new file named achievements.yaml in the data/en/sections directory of your website. Then, follow the instructions below.
Add Section Information Add the following section metadata to your achievements.</description>
    </item>
    
    <item>
      <title>Creating Category</title>
      <link>http://localhost:1313/posts/writing-posts/organizing/category/</link>
      <pubDate>Mon, 08 Jun 2020 06:15:55 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/organizing/category/</guid>
      <description>First, we need to understand how to create a post then we will be able to create categories.
Post Creation To create a post in your blog first you need to go to the folder named posts. Here, create a file _index.md(The file name has to be exactly the same as it is mentioned). Then open the file and add below lines: --- title: Posts --- now, save and close the file.</description>
    </item>
    
    <item>
      <title>Creating Sub Category</title>
      <link>http://localhost:1313/posts/writing-posts/organizing/sub-category/example/</link>
      <pubDate>Mon, 08 Jun 2020 06:15:50 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/organizing/sub-category/example/</guid>
      <description>Complete Post Coming Soon&amp;hellip; </description>
    </item>
    
    <item>
      <title>Front Matter</title>
      <link>http://localhost:1313/posts/writing-posts/front-matter/</link>
      <pubDate>Mon, 08 Jun 2020 06:15:45 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/front-matter/</guid>
      <description>Complete Post Coming Soon&amp;hellip; </description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>http://localhost:1313/posts/writing-posts/markdown-syntax/</link>
      <pubDate>Mon, 08 Jun 2020 06:15:40 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Type Settings</title>
      <link>http://localhost:1313/posts/writing-posts/math/</link>
      <pubDate>Mon, 08 Jun 2020 06:15:35 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/math/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>http://localhost:1313/posts/writing-posts/rich-content/</link>
      <pubDate>Mon, 08 Jun 2020 06:15:30 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Emoji</title>
      <link>http://localhost:1313/posts/writing-posts/using-emoji/</link>
      <pubDate>Mon, 08 Jun 2020 06:15:25 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/writing-posts/using-emoji/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Analytics</title>
      <link>http://localhost:1313/posts/analytics/</link>
      <pubDate>Mon, 08 Jun 2020 06:00:23 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/analytics/</guid>
      <description>Analytics This theme has built in support for various analytic tools. Currently, it supports the following analytics:
GoatCounter counter.dev Google Analytics Matomo For a complete list of supported analytics, please refer the sample config.yaml file.
Warning: When adding analytics, you should consider local legislation to see if a privacy banner is required to inform users of the tracking in personal data. In general (not legal advice), privacy-friendly, anonymous methods such as counter.</description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  </channel>
</rss>
