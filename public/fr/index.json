[{"categories":null,"contents":"Les manières de contribuer Vous pouvez contribuer à ce thème de différentes manières.\nCode Les Pull Requests sont les bienvenues et je serai heureux de les examiner. Suivez simplement les principes suivants:\nGardez les simple. Gardez les cohérentes avec le design de l\u0026rsquo;UI. Utilisez le moins de dépendances possibles. Soyez patient. Tests et rapport des problèmes Vous pouvez signaler un bug Vous pouvez aussi faire une demande de fonctionnalité Partager vos réflexions Documentation Vous pouvez aussi contribuer à la documentation du thème par :\nL\u0026rsquo;ajout d\u0026rsquo;informations et de sections. Des corrections d\u0026rsquo;erreurs et de frappes. Des mises à jour de la documentation obsolète. La traduction de la documentation dans une nouvelle langue, ce guide pourrait être utile. Traduction Enfin, vous pouvez contribuer à la traduction du thème dans plusieurs langues, en complétant les mots manquants, ou par l\u0026rsquo;ajout d\u0026rsquo;une nouvelle langue. Vous pouvez suivre le guide Comment ajouter un langage non supporté ? pour plus d\u0026rsquo;informations.\nComment contribuer ? Pour le développement local, vous pouvez apporter des changements dans le sous-module du thème et tester les changements sur votre propre site ou ce site d\u0026rsquo;exemple local.\nCloner D\u0026rsquo;abord, clonez ce dépôt. Ensuite, suivre les étapes suivantes pour utiliser le thème cloné pour un développement local.\nLancer le thème cloné par rapport au site d\u0026rsquo;exemple Si vous voulez vous lancer dans votre développement local par rapport au site d\u0026rsquo;exemple, suivre les étapes suivantes:\n# Se rendre dans le répertoire exampleSite $ cd exampleSite # installer les modules hugo $ hugo mod tidy # installer les dépendances $ hugo mod npm pack $ npm install # Lancer le site exemple localement $ hugo server -w Maintenant, vous pouvez faire des changements dans le thème et ils seront immédiatement restitués sur le site en cours d\u0026rsquo;exécution. Si vous avez besoin de changer n\u0026rsquo;importe quelle configuration, vous pouvez faire cela dans le fichier config.yaml à l\u0026rsquo;intérieur du répertoire exampleSite. Si vous avez besoin d\u0026rsquo;ajouter n\u0026rsquo;importe quel contenu ou donnée, vous pouvez créer le dossier correspondant à l\u0026rsquo;intérieur du répertoire exampleSite et ajouter votre contenu ou donnée désirés.\nLancer le thème cloné par rapport à votre propre site Si vous voulez exécuter votre développement local par rapport à votre propore site, suivez les étapes suivantes:\nRemplacer le module du thème:\nOuvrez le fichier go.mod de votre site et remplacez le chemin github.com/hugo-toha/toha/v4 par le chemin de votre dépôt cloné. Par exemple, si votre dépôt cloné est github.com/\u0026lt;your-github-user\u0026gt;/toha, alors remplacez le chemin github.com/hugo-toha/toha/v4 par github.com/\u0026lt;your-github-user\u0026gt;/toha/v4.\nmodule github.com/hugo-toha/hugo-toha.github.io go 1.19 require github.com/hugo-toha/toha/v4 v4.0.1-0.20231229170427-d3968ca711ef // indirect replace( github.com/hugo-toha/toha/v4 =\u0026gt; github.com/\u0026lt;your-github-user\u0026gt;/toha/v4 \u0026lt;git branch\u0026gt; ) Pour un développement intéractif, vous pouvez remplacer le thème par votre dépôt cloné. Par exemple, si vous avez cloné votre dépôt dans /home/my-projects/toha, alors remplacez le github.com/hugo-toha/toha/v4 par /home/my-projects/toha.\nmodule github.com/hugo-toha/hugo-toha.github.io go 1.19 require github.com/hugo-toha/toha/v4 v4.0.1-0.20231229170427-d3968ca711ef // indirect replace( github.com/hugo-toha/toha/v4 =\u0026gt; /home/my-projects/toha ) Mise à jour des dépendances:\n# Mettre à jour les modules hugo $ hugo mod tidy # Installer les dépendances $ hugo mod npm pack $ npm install Lancez votre site en local:\n$ hugo server -w A partir d\u0026rsquo;ici vous pouvez faire des changements au code source du thème tout en testant votre site Hugo en cours d\u0026rsquo;exécution ou le site d\u0026rsquo;exemple.\nOuvrir une Pull Request Lorsque les changements semblent corrects, validez et poussez-les vers votre dépôt cloné.\n# Indexez tous les changements $ git add . # Validez vos changements avec un message complet sur ce que ça apporte $ git commit -m \u0026#34;A meaningful commit message\u0026#34; # Poussez le commit de votre branche $ git push my-fork my-feature-branch Ensuite, ouvrez une PR vers la branche main d\u0026rsquo;hugo-toha/toha depuis la branche ma_branche_de_fonctionnalité de votre dépôt cloné.\n","date":"January 19, 2024","hero":"/posts/contributing/hero.png","permalink":"http://localhost:1313/fr/posts/contributing/","summary":"Les manières de contribuer Vous pouvez contribuer à ce thème de différentes manières.\nCode Les Pull Requests sont les bienvenues et je serai heureux de les examiner. Suivez simplement les principes suivants:\nGardez les simple. Gardez les cohérentes avec le design de l\u0026rsquo;UI. Utilisez le moins de dépendances possibles. Soyez patient. Tests et rapport des problèmes Vous pouvez signaler un bug Vous pouvez aussi faire une demande de fonctionnalité Partager vos réflexions Documentation Vous pouvez aussi contribuer à la documentation du thème par :","tags":null,"title":"Comment contribuer ?"},{"categories":null,"contents":"Si vous voulez traduire vers une langue non supportée, vous pouvez traduire les éléments de l\u0026rsquo;UI.\nCréer un fichier i18n Pour ce faire, vous avez à créer un répertoire i18n à l\u0026rsquo;intérieur de la racine de votre site, le répertoire où vous pouvez trouver le fichier config.yaml, et les répertoires tel que data, content, etc.\nAprès cela, vous pouvez créer le fichier \u0026lt;langage code\u0026gt;.toml dans le répertoire i18n. Dans ce répertoire, vous pouvez trouver tous les codes de langue avec le drapeau qui apparaît avec ce code.\nTraduire les éléments de l\u0026rsquo;UI A l\u0026rsquo;intérieur d\u0026rsquo;un nouveau fichier, copiez simplement le contenu suivant, et remplacez le contenu entre guillemets avec le nom de la langue désirée.\nSi le contenu ci-dessous devient obsolète, vous pouvez copier les contenus depuis le fichier en. # More documentation here: https://github.com/nicksnyder/go-i18n [home] other = \u0026#34;Home\u0026#34; [posts] other = \u0026#34;Posts\u0026#34; [toc_heading] other = \u0026#34;Table of Contents\u0026#34; [tags] other = \u0026#34;Tags\u0026#34; [categories] other = \u0026#34;Categories\u0026#34; [at] other = \u0026#34;at\u0026#34; [resume] other = \u0026#34;My resume\u0026#34; [navigation] other = \u0026#34;Navigation\u0026#34; [contact_me] other = \u0026#34;Contact me:\u0026#34; [email] other = \u0026#34;Email\u0026#34; [phone] other = \u0026#34;Phone\u0026#34; [newsletter_text] other = \u0026#34;Stay up to date with email notification\u0026#34; [newsletter_input_placeholder] other = \u0026#34;Enter email\u0026#34; [newsletter_warning] other = \u0026#34;By entering your email address, you agree to receive the newsletter of this website.\u0026#34; [submit] other = \u0026#34;Submit\u0026#34; [hugoAttributionText] other = \u0026#34;Powered by\u0026#34; [prev] other = \u0026#34;Prev\u0026#34; [next] other = \u0026#34;Next\u0026#34; [share_on] other = \u0026#34;Share on\u0026#34; [improve_this_page] other = \u0026#34;Improve this page\u0026#34; [out_of] other = \u0026#34;out of\u0026#34; [publications] other = \u0026#34;Publications\u0026#34; [taken_courses] other = \u0026#34;Taken Courses\u0026#34; [course_name] other = \u0026#34;Course Name\u0026#34; [total_credit] other = \u0026#34;Total Credit\u0026#34; [obtained_credit] other = \u0026#34;Obtained Credit\u0026#34; [extracurricular_activities] other = \u0026#34;Extracurricular Activities\u0026#34; [show_more] other = \u0026#34;Show More\u0026#34; [show_less] other = \u0026#34;Show Less\u0026#34; [responsibilities] other = \u0026#34;Responsibilities:\u0026#34; [present] other = \u0026#34;Present\u0026#34; [comments_javascript] other = \u0026#34;Please enable JavaScript to view the\u0026#34; [comments_by] other = \u0026#34;comments powered by\u0026#34; [read] other = \u0026#34;Read\u0026#34; [project_star] other = \u0026#34;Star\u0026#34; [project_details] other = \u0026#34;Details\u0026#34; [err_404] other = \u0026#34;The page you are looking for is not there yet.\u0026#34; [more] other = \u0026#34;More\u0026#34; [view_certificate] other = \u0026#34;View Certificate\u0026#34; [notes] other = \u0026#34;Notes\u0026#34; [disclaimer_text] other = \u0026#34;Liability Notice\u0026#34; [search] other = \u0026#34;Search\u0026#34; [minute] one = \u0026#34;minute\u0026#34; other = \u0026#34;minutes\u0026#34; ","date":"January 15, 2024","hero":"/posts/translation/new-language/hero.jpg","permalink":"http://localhost:1313/fr/posts/translation/new-language/","summary":"Si vous voulez traduire vers une langue non supportée, vous pouvez traduire les éléments de l\u0026rsquo;UI.\nCréer un fichier i18n Pour ce faire, vous avez à créer un répertoire i18n à l\u0026rsquo;intérieur de la racine de votre site, le répertoire où vous pouvez trouver le fichier config.yaml, et les répertoires tel que data, content, etc.\nAprès cela, vous pouvez créer le fichier \u0026lt;langage code\u0026gt;.toml dans le répertoire i18n. Dans ce répertoire, vous pouvez trouver tous les codes de langue avec le drapeau qui apparaît avec ce code.","tags":null,"title":"Comment ajouter un langage non supporté ?"},{"categories":null,"contents":"Ce thème prend en charge plusieurs langues.\nAvant de commencer la traduction d\u0026rsquo;un billet, assurez-vous que vous avez activé la langue sur votre site. Si ce n\u0026rsquo;est pas le cas, vous pouvez suivre la section Ajout d'une langue à votre site du guide Comment traduire les données du site ?\nCréation du billet Lorsque vous avez ajouté la langue désirée à votre site web, sachez que vous pouvez traduire un billet dans cette langue. Nous allons supposer que vous voulez traduire un billet existant.\nCréation du fichier index La première étape est de localiser le fichier index.md du billet que vous voulez traduire. Puis vous allez créer un fichier dans le même répertoire (ou bien vous pouvez juste dupliquer le fichier index.md), et le nommer index.\u0026lt;code_langue\u0026gt;.md, où \u0026lt;code_langue\u0026gt; est le code du langage que vous pouvez retrouver dans le tableau des langages sur Comment traduire les données du site ?\nTraduction du billet Maintenant, vous pouvez démarrer la traduction du billet, de la même façon que vous écrivez un nouveau billet.\nINFO : Si vous avez affaire à des références internes, vous devez ajouter le prefix /\u0026lt;code_langue\u0026gt; devant votre chemin relatif. Par exemple, si vous voulez créer un lien pointant vers /posts/translation/site-data/, le lien vers le billet traduit sera /\u0026lt;code_langue\u0026gt;/posts/translation/site-data/.\n","date":"January 15, 2024","hero":"/posts/translation/content/hero.jpg","permalink":"http://localhost:1313/fr/posts/translation/content/","summary":"Ce thème prend en charge plusieurs langues.\nAvant de commencer la traduction d\u0026rsquo;un billet, assurez-vous que vous avez activé la langue sur votre site. Si ce n\u0026rsquo;est pas le cas, vous pouvez suivre la section Ajout d'une langue à votre site du guide Comment traduire les données du site ?\nCréation du billet Lorsque vous avez ajouté la langue désirée à votre site web, sachez que vous pouvez traduire un billet dans cette langue.","tags":null,"title":"Comment traduire des billets ?"},{"categories":null,"contents":"Ce thème prend en charge plusieurs langues.\nAjouter une langue à votre site L\u0026rsquo;ajout d\u0026rsquo;une langue à votre site traduira l\u0026rsquo;interface dans cette langue (incluant les boutons, la barre de navigation, etc.).\nObtenir le code de la langue Pour traduire votre site, vous aurez besoin du code de la langue. Le tableau suivant contient les langues supportées ainsi que leurs codes:\nLanguages Code English en / none বাংলা bn Français fr Indonesian id Deutsch de Español es 简体中文 zh-cn / zh-tw हिन्दी hi Italiano it 日本語 jp 한국어 ko русский ru suomi fi Tiếng Việt vn Turkish tr Arabic (العربية) ar Português Europeu pt-pt Català ad Português Brasileiro pt-br Dutch nl Pour la liste complète des langages supportées, consultez s\u0026rsquo;il vous plaît le fichier README du dépôt Toha.\nSi la langue désirée pour la traduction du votre contenu n\u0026rsquo;est pas disponible, consultez s\u0026rsquo;il vous plaît le guide Comment ajouter un langage non supporté ?\nAjouter la langue dans config.yaml Après avoir identifié le code de la langue pour laquelle vous voulez traduire votre site, ouvrez le fichier config.yaml, et sous la section languages ajoutez ce qui suit:\nlanguages: en: languageName: English weight: 1 \u0026lt;code_langue\u0026gt;: languageName: \u0026lt;Nom de la langue\u0026gt; weight: 2 # Vous pouvez paramètrer l\u0026#39;ordre des langues avec cette valeur Par exemple, si vous voulez configurer le Français comme nouvelle langue, la section devrait ressembler à ça:\nlanguages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 # Vous pouvez paramètrer l\u0026#39;ordre des langues avec cette valeur Traduire la page principale Vous pouvez traduire la page principale en créant un nouveau répertoire dans le répertoire data. Le nom de ce nouveau répertoire devra être le \u0026lt;code_langue\u0026gt;. Par exemple, si nous voulons traduire vers le français, nous devrons créer le répertoire fr dans le répertoire data.\nEnsuite, vous pouvez créer votre fichier de données habituel tel que about.yaml ou education.yaml, en conservant la même structure et le même nom de fichier. Dans ces fichiers, vous pouvez simplement traduire le contenu des champs dans la langue désirée.\nEt ensuite ? Vous pouvez consulter le guide suivant Comment traduire des billets ?\n","date":"January 15, 2024","hero":"/posts/translation/site-data/hero.jpg","permalink":"http://localhost:1313/fr/posts/translation/site-data/","summary":"Ce thème prend en charge plusieurs langues.\nAjouter une langue à votre site L\u0026rsquo;ajout d\u0026rsquo;une langue à votre site traduira l\u0026rsquo;interface dans cette langue (incluant les boutons, la barre de navigation, etc.).\nObtenir le code de la langue Pour traduire votre site, vous aurez besoin du code de la langue. Le tableau suivant contient les langues supportées ainsi que leurs codes:\nLanguages Code English en / none বাংলা bn Français fr Indonesian id Deutsch de Español es 简体中文 zh-cn / zh-tw हिन्दी hi Italiano it 日本語 jp 한국어 ko русский ru suomi fi Tiếng Việt vn Turkish tr Arabic (العربية) ar Português Europeu pt-pt Català ad Português Brasileiro pt-br Dutch nl Pour la liste complète des langages supportées, consultez s\u0026rsquo;il vous plaît le fichier README du dépôt Toha.","tags":null,"title":"Comment traduire les données du site ?"},{"categories":null,"contents":"Si les sections par défaut, modèles, et composants ne satisfont pas vos besoins, vous pouvez facilemement ajouter de nouvelles sections, modèles, et composants à votre site. Ce guide montrera comment ajouter une nouvelle section à votre site.\nEtape 1 : Ajouter du fichier de mise en page Pour ajouter une nouvelle section à votre site, vous devez créer un fichier de mise en page dans le répertoire layout/partials/sections. Le fichier doit être nommé d\u0026rsquo;après le nom de la section. Par exemple, si vous voulez ajouter une section contact avec le formulaire de contact, créez un fichier nommé contact.html. Utilisez le modèle suivants pour le fichier contact.html.\n{{ $sectionID := replace (lower .section.name) \u0026#34; \u0026#34; \u0026#34;-\u0026#34; }} {{ if .section.id }} {{ $sectionID = .section.id }} {{ end }} \u0026lt;div class=\u0026#34;container anchor p-lg-5 about-section\u0026#34; id=\u0026#34;{{ $sectionID }}\u0026#34;\u0026gt; // Your custom HTML code here \u0026lt;/div\u0026gt; Etape 2: Ajouter des styles CSS Si vous voulez ajouter un CSS personnalisé pour votre nouvelle section, vous pouvez le faire en ajouter le code CSS au fichier assets/styles/overrides.scss dans votre site. Ce fichier est automatiquement chargé par le thème et appliquera les styles personnalisés. Alternativement, vous pouvez créer un fichier SCSS séparé dans le répertoire assets/styles de votre dépôt et l\u0026rsquo;inclure dans le fichier assets/styles/overrides.scss en utilisant la syntaxe suivante:\n@import \u0026#34;your-style-file-name\u0026#34;; Etape 3: Ajouter JavaScript De façon similaire, si votre nouvelle section requiert un JavaScript supplémentaire, la méthode recommandée est d\u0026rsquo;ajouter le JavaScript dans le fichier de mise en page lui-même avec le tag \u0026lt;script\u0026gt;. Si vous voulez ajouter le JavaScript dans un fichier séparé, alors placez le fichier JavaScript dans le répertoire assets/scripts de votre dépôt et l\u0026rsquo;inclure dans le fichier de mise en page comme suit:\n{{ $script := resources.Get \u0026#34;scripts/your-script.js\u0026#34; }} \u0026lt;script src=\u0026#34;{{ $script.RelPermalink }}\u0026#34; integrity=\u0026#34;{{ $script.Data.Integrity }}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; ","date":"January 13, 2024","hero":"/posts/customizing/new-section/hero.png","permalink":"http://localhost:1313/fr/posts/customizing/new-section/","summary":"Si les sections par défaut, modèles, et composants ne satisfont pas vos besoins, vous pouvez facilemement ajouter de nouvelles sections, modèles, et composants à votre site. Ce guide montrera comment ajouter une nouvelle section à votre site.\nEtape 1 : Ajouter du fichier de mise en page Pour ajouter une nouvelle section à votre site, vous devez créer un fichier de mise en page dans le répertoire layout/partials/sections. Le fichier doit être nommé d\u0026rsquo;après le nom de la section.","tags":null,"title":"Ajouter une nouvelle section"},{"categories":null,"contents":"Ce thème vous permet de personnaliser l\u0026rsquo;apparence de votre site et ses composants par une surcharge du CSS par defaut. Ce guide vous montrera comment surcharger le schéma de couleurs et personnaliser les CSS des composants individuels.\nLe thème utilise Sass pour générer du CSS. Si vous n\u0026rsquo;êtes pas familier avec Sass, vous pouvez en apprendre plus à son sujet ici.\nSurcharger les variables des couleurs du thème Si vous voulez changer le schéma de couleurs par défaut de votre thème, vous pouvez surcharger les variables de couleur du thème. Pour surcharger les variables de couleur du thème, vous devrez créer un fichier nommé variables.scss dans le répertoire assets/styles de votre site. Puis copiez le contenu du fichier variables.scss par défaut et collez le dans votre fichier de personnalisation variables.scss. Ici, seule la section $theme du fichier variables.scss par defaut est montré ci-dessous:\n// themes $themes: ( \u0026#39;light\u0026#39;: ( // cyan 600 \u0026#39;accent-color\u0026#39;: #0891b2, // cyan 500 \u0026#39;hover-over-accent-color\u0026#39;: #06b6d4, // zinc 200 \u0026#39;text-over-accent-color\u0026#39;: #e4e4e7, // slate 50 \u0026#39;bg-primary\u0026#39;: #f8fafc, // slate 900 \u0026#39;bg-primary-inverse\u0026#39;: #0f172a, // slate 200 \u0026#39;bg-secondary\u0026#39;: #e2e8f0, \u0026#39;bg-card\u0026#39;: #fff, // slate 800 \u0026#39;heading-color\u0026#39;: #1e293b, // slate 700 \u0026#39;text-color\u0026#39;: #334155, // slate 300 \u0026#39;inverse-text-color\u0026#39;: #cbd5e1, // slate 500 \u0026#39;muted-text-color\u0026#39;: #64748b, // red 600 \u0026#39;inline-code-color\u0026#39;: #dc2626, // amber 200 \u0026#39;highlight-color\u0026#39;: #fde68a, // slate 900 \u0026#39;footer-color\u0026#39;: #0f172a, ), \u0026#39;dark\u0026#39;: ( // cyan 600 \u0026#39;accent-color\u0026#39;: #0891b2, // cyan 500 \u0026#39;hover-over-accent-color\u0026#39;: #06b6d4, // zinc 200 \u0026#39;text-over-accent-color\u0026#39;: #e4e4e7, // gray-800 \u0026#39;bg-primary\u0026#39;: #1f2937, // slate 900 \u0026#39;bg-primary-inverse\u0026#39;: #0f172a, // gray 900 \u0026#39;bg-secondary\u0026#39;: #111827, // slate 800 \u0026#39;bg-card\u0026#39;: #1e293b, // slate 100 \u0026#39;heading-color\u0026#39;: #f1f5f9, // slate 300 \u0026#39;text-color\u0026#39;: #cbd5e1, // slate 900 \u0026#39;inverse-text-color\u0026#39;: #0f172a, // slate 500 \u0026#39;muted-text-color\u0026#39;: #64748b, // red 600 \u0026#39;inline-code-color\u0026#39;: #dc2626, // amber 200 \u0026#39;highlight-color\u0026#39;: #fde68a, // slate 900 \u0026#39;footer-color\u0026#39;: #0f172a, ), ); Les champs light et dark dans la cartopgraphie de couleur représentent respectivement les schémas de couleur pour le mode lumière et le mode sombre. En modifiant les codes couleurs dans ces champs, vous pouvez personnaliser l\u0026rsquo;apparence de votre site.\nSurcharger un composant CSS Pour surcharger le CSS d\u0026rsquo;un composant, créez un fichier override.scss dans le répertoire assets/styles de votre site. Puis, placez le nouveau CSS pour ce composant ici. Vous n\u0026rsquo;avez pas besoin de réécrire l\u0026rsquo;ensemble du CSS du composant. Vous pouvez juste mettre les champs modifiés.\nPar exemple, pour désactiver l\u0026rsquo;effet flou de l\u0026rsquo;image d\u0026rsquo;arrière plan sur la page d\u0026rsquo;accueil, vous pouvez ajouter le code SCSS suivant dans votre fichier override.scss:\n.home{ .background{ filter: none; } } ","date":"January 13, 2024","hero":"/posts/customizing/customize-css/hero.png","permalink":"http://localhost:1313/fr/posts/customizing/customize-css/","summary":"Ce thème vous permet de personnaliser l\u0026rsquo;apparence de votre site et ses composants par une surcharge du CSS par defaut. Ce guide vous montrera comment surcharger le schéma de couleurs et personnaliser les CSS des composants individuels.\nLe thème utilise Sass pour générer du CSS. Si vous n\u0026rsquo;êtes pas familier avec Sass, vous pouvez en apprendre plus à son sujet ici.\nSurcharger les variables des couleurs du thème Si vous voulez changer le schéma de couleurs par défaut de votre thème, vous pouvez surcharger les variables de couleur du thème.","tags":null,"title":"Personnalisation CSS"},{"categories":null,"contents":"Toha V4 a introduit de nombreux changements structurant en terme d\u0026rsquo;utilisation et de configuration du thème. Ce guide vous aidera à passer de la version v3 à la version v4 du thème. S\u0026rsquo;il vous plaît, veuillez vérifier cette note de publication pour compléter le changelog.\nDans ce guide, je vais vous guider à travers les étapes pour migrer de la version 3 à la version 4 du thème Toha. Ce guide est basé sur le guide de migration écrit par Alexandre Neto dans cette issue. Commençons !\n1. Supprimer le sous-module git toha Toha V4 apporte quelques changements dans le processus d\u0026rsquo;installation. L\u0026rsquo;un des changements est que le thème n\u0026rsquo;utilise plus de sous-module git. Par conséquent, nous avons besoin de supprimer le sous-module git toha. Ne vous inquiétez pas, cette étape ne supprimera pas votre contenu.\ngit rm themes/toha/ git commit -m \u0026#34;Remove v3 theme\u0026#34; 2. Supprimer le theme du config.yaml Dans cette nouvelle version, nous n\u0026rsquo;avons pas besoin de spécifier le theme dans le fichier config.yaml. A la place, nous ajouterons le thème comme un module. D\u0026rsquo;abord, supprimez la ligne suivante de votre fichier config.yaml:\ntheme: toha 3. Compléter les prérequis Pour la construction du site localement nous aurons besoin de mettre à jour/installer les prérequis suivants:\nVersion d\u0026rsquo;Hugo v0.118.x (extended) ou plus. Langage Go version v1.18.x ou plus. Node version v18.x et npm version 8.x ou plus. Assurez-vous d\u0026rsquo;avoir installé tous les outils nécessaires.\n4. Initialiser le module Hugo Toha V4 utilise maintenant le Module Hugo pour gérer le thème.Pour commencer, nous devons initialiser le module.\nhugo mod init github.com/\u0026lt;votre username\u0026gt;/\u0026lt;votre nom de dépôt\u0026gt; Cela créera un fichier go.mod à la racine de votre site. Vous pouvez vérifier le fichier pour voir s\u0026rsquo;il a été correctement créé.\n5. Ajouter le thème en tant que module Maintenant, ajoutez la section module suivante dans votre fichier config.yaml. Cela ajoutera le thème comme un module et montera aussi les fichiers statiques à partir du thème.\n# Utilise les modules Hugo pour ajouter le thème module: imports: - path: github.com/hugo-toha/toha/v4 mounts: - source: static/files target: static/files - source: ./node_modules/flag-icon-css/flags target: static/flags - source: ./node_modules/@fontsource/mulish/files target: static/files - source: ./node_modules/katex/dist/fonts target: static/fonts 6. Actualiser le fichier config.yaml Dans la nouvelle version, la structure de configuration pour la gestion des fonctionnalités a été refondue. Donc, il est nécessaire d\u0026rsquo;actualiser le fichier config.yaml . Pour référence, vous pouvez vérifier l\u0026rsquo;extrait du config.yaml. Ici, nous mettrons en évidence les configurations les plus couramment utilisées qui ont besoin d\u0026rsquo;être changé.\nMode sombre:\nNous avons introduit un nouveau support intégré du mode sombre. En conséquence, il n\u0026rsquo;est plus nécessaire d\u0026rsquo;utiliser un service tiers tel que darkreader. Pour activer le nouveau mode sombre, s\u0026rsquo;il vous plaît supprimez les lignes suivantes de votre config.yaml.\ndarkMode: provider: darkreader enable: true default: system Ensuite, ajoutez les lignes suivantes sous la section params.features:\ndarkMode: enable: true Analytics:\nNous avons restructuré la configuration pour l\u0026rsquo;analytique, les commentaires, et les fournisseurs de service supportés. Ils sont maintenant placés sous le champs services dans la section respective.\nPar conséquent, votre configuration analytique d\u0026rsquo;avant sera mise à jour de:\nanalytics: enabled: true google: id: UA-XXXXXXXXX-X à:\nanalytics: enable: true services: google: id: UA-XXXXXXXXX-X Commentaire:\nPareil, votre configuration de commentaire d\u0026rsquo;avant sera modifiée comme suit:\ncomment: enable: true disqus: shortName: \u0026lt;your-disqus-shortname\u0026gt; à:\ncomment: enable: true services: disqus: shortName: \u0026lt;your-disqus-shortname\u0026gt; Support:\nEt, votre configuration de support des services tiers changera de:\nsupport: enabled: true kofi: user: \u0026lt;your ko-fi user id\u0026gt; text: Tip Me textColor: \u0026#39;#f9fafc\u0026#39; backgroundColor: \u0026#39;#248aaa\u0026#39; à:\nsupport: enable: false services: kofi: user: hossainemruz text: Tip Me textColor: \u0026#39;#f9fafc\u0026#39; backgroundColor: \u0026#39;#248aaa\u0026#39; Autres changements:\nIl y a quelques autres options qui ont été changée. Par exemple:\nenableToc: true remplacé par:\ntoc: enable: true De la même manière:\nenableTags: true remplacé par:\ntags: enable: true on_card: true Enfin,\nshowFlags: true remplacé par:\n# Spécifier s\u0026#39;il faut afficher le flag dans le sélecteur de langue. La valeur par défaut est True. flags: enable: true # Si vous voulez utiliser un drapeau de pays différent pour une langue, spécifiez le ici. # flagOverwrites: # - languageCode: en # countryCode: us Il y a eu quelques autres changements. Référez-vous s\u0026rsquo;il vous plaît à au fichier extrait de configuration pour plus de détails.\n7. Construire le site Finalement, vous êtes prêt à construire le thème. S\u0026rsquo;il vous plaît, exécutez les étapes suivantes pour construire le site:\na. Charger les modules Hugo\nhugo mod tidy b. Installez les modules Node\nhugo mod npm pack npm install c. Exécuter le site\nhugo server -w J\u0026rsquo;espère que ce guide a été utile dans la migration de votre thème depuis la V3 à la V4. Si vous rencontrez des problèmes, n\u0026rsquo;hésitez pas à ouvrir une issue dans le dépôt Github.\n","date":"January 5, 2024","hero":"/posts/update-v3-to-v4/hero.png","permalink":"http://localhost:1313/fr/posts/update-v3-to-v4/","summary":"Toha V4 a introduit de nombreux changements structurant en terme d\u0026rsquo;utilisation et de configuration du thème. Ce guide vous aidera à passer de la version v3 à la version v4 du thème. S\u0026rsquo;il vous plaît, veuillez vérifier cette note de publication pour compléter le changelog.\nDans ce guide, je vais vous guider à travers les étapes pour migrer de la version 3 à la version 4 du thème Toha. Ce guide est basé sur le guide de migration écrit par Alexandre Neto dans cette issue.","tags":null,"title":"Migrer de la V3 à la V4"},{"categories":null,"contents":"Ce billet d\u0026rsquo;échantillon est destiné à tester les éléments suivants :\nDifférents blocs d\u0026rsquo;alerte. Manipulation d\u0026rsquo;une image. Différents shortcodes. Alerte Les alertes suivantes sont disponibles dans ce thème.\nSuccès code\n{{\u0026lt; alert type=\u0026#34;success\u0026#34; \u0026gt;}} This is sample alert with `type=\u0026#34;success\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Résultat:\nThis is sample alert with type=\u0026quot;success\u0026quot;. Danger Code:\n{{\u0026lt; alert type=\u0026#34;danger\u0026#34; \u0026gt;}} This is sample alert with `type=\u0026#34;danger\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Résultat:\nThis is sample alert with type=\u0026quot;danger\u0026quot;. Warning Code:\n{{\u0026lt; alert type=\u0026#34;warning\u0026#34; \u0026gt;}} This is sample alert with `type=\u0026#34;warning\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Résultat:\nThis is sample alert with type=\u0026quot;warning\u0026quot;. Info Code:\n{{\u0026lt; alert type=\u0026#34;info\u0026#34; \u0026gt;}} This is sample alert with `type=\u0026#34;info\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Résultat:\nThis is sample alert with type=\u0026quot;info\u0026quot;. Image Une image sans attributs. Code:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; title=\u0026#34;A boat at the sea\u0026#34; \u0026gt;}} Résultat:\nUne image avec les attributs height et width. Code:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; height=\u0026#34;400\u0026#34; width=\u0026#34;600\u0026#34; title=\u0026#34;A boat at the sea\u0026#34; \u0026gt;}} Résultat:\nUne image centrée avec les attributs height et width. Code:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; height=\u0026#34;400\u0026#34; width=\u0026#34;600\u0026#34; align=\u0026#34;center\u0026#34; title=\u0026#34;A boat at the sea\u0026#34; \u0026gt;}} Résultat:\nUne image avec l\u0026rsquo;attribut float. Code:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; height=\u0026#34;200\u0026#34; width=\u0026#34;500\u0026#34; float=\u0026#34;right\u0026#34; title=\u0026#34;A boat at the sea\u0026#34; \u0026gt;}} Résultat:\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nDiviser Ce thème supporte le découpage de la page en autant de colonnes que vous le souhaitez.\nDiviser en 2 colonnes Code:\n{{\u0026lt; split 6 6 \u0026gt;}} ##### Colonne de gauche Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. --- ##### Colonne de droite Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. {{\u0026lt; /split \u0026gt;}} Résultat:\nColonne de gauche Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nColonne de droite Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nDiviser en 3 colonnes Code:\n{{\u0026lt; split 4 4 4 \u0026gt;}} ##### Colonne de gauche Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. --- ##### Colonne du milieu Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum. --- ##### Colonne de droite Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. {{\u0026lt; /split \u0026gt;}} Résultat:\nColonne de gauche Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nColonne du milieu Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.\nColonne de droite Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nEspace vertical Donner un espace vertical entre deux lignes.\nCode:\nVoici la ligne 1. Voici la ligne 2. Il devrait y avoir un espace vertical de `4rem` avec la ligne précédente. Résultat:\nVoici la ligne 1. Voici la ligne 2. Il devrait y avoir un espace vertical de 4rem avec la ligne précédente.\nVidéo Code:\n{{\u0026lt; video src=\u0026#34;/videos/sample.mp4\u0026#34; \u0026gt;}} Résultat:\nVidéo de Rahul Sharma sur Pexels.\n","date":"November 5, 2023","hero":"/posts/shortcodes/boat.jpg","permalink":"http://localhost:1313/fr/posts/shortcodes/","summary":"Ce billet d\u0026rsquo;échantillon est destiné à tester les éléments suivants :\nDifférents blocs d\u0026rsquo;alerte. Manipulation d\u0026rsquo;une image. Différents shortcodes. Alerte Les alertes suivantes sont disponibles dans ce thème.\nSuccès code\n{{\u0026lt; alert type=\u0026#34;success\u0026#34; \u0026gt;}} This is sample alert with `type=\u0026#34;success\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Résultat:\nThis is sample alert with type=\u0026quot;success\u0026quot;. Danger Code:\n{{\u0026lt; alert type=\u0026#34;danger\u0026#34; \u0026gt;}} This is sample alert with `type=\u0026#34;danger\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Résultat:\nThis is sample alert with type=\u0026quot;danger\u0026quot;.","tags":null,"title":"Les Shortcodes"},{"categories":null,"contents":"Ce thème a été conçu à partir d\u0026rsquo;un point de préférence personnel. En tant que développeur, je veux organiser mon portfolio de façon à ce qu\u0026rsquo;il reflète au mieux mes compétences. Donc, ce thème peut ou non répondre à vos besoins, mais je serai heureux d\u0026rsquo;avoir vos commentaires.\nCe billet vous donnera un aperçu des fonctionnalités intégrées à ce thème.\nDesign minimaliste Ce thème a été conçu pour être minimaliste et beau. Le schéma de couleur a été choisi pour être simple et puissant également. La page billet a été conçue pour être aussi distraillante que possible. Merci à Anup Deb pour ses conseils en design.\nResponsable Ce thème est totalement responsable. Il est beau et cohérent sur les ordinateurs de bureau, ordinateurs portables, Tablettes, et appareils Mobile.\nDes cartes au design soigné Les cartes de compétence et de projet ont été soigneusement conçue pour donner les informations les plus utiles. Elle donne également au visiteur une idée de l\u0026rsquo;étendu des connaissances sur une compétence particulière. Les cartes de projets donnent une idée de la popularité de vos projets s\u0026rsquo;il s\u0026rsquo;agit de projets open source sur Github.\nUne chronologie de l\u0026rsquo;expérience qui représente vraiment vos expériences La chronologie de l\u0026rsquo;expérience a été conçue pour refléter votre parcours professionnel. Elle montre les responsabilités que vous avez assumées aux différentes étapes de votre carrière.\nUne galerie pour montrer vos réalisations La section galerie vous permet de montrer vos réalisations auprès du public.\nUne barre latérale qui a du sens Vous êtes-vous déjà retrouvé à passer beaucoup de temps à retrouver un billet particulier sur un blog ? Je l\u0026rsquo;ai fait aussi. Ce thème comprend un menu en barre latérale qui classe vos billets dans différentes catégories et sous-catégories.\nPersonnalisable \u0026amp; Extensible Il est facile de personnaliser ce thème sans changer ses codes. Il a été conçu pour être extensible et personnalisable. Vous pouvez facilement ajouter une nouvelle section ou remplacer le CSS de n\u0026rsquo;importe quelle section sans modifier le thème.\nCa ne répond toujours pas à vos besoins ? Déposez une demande de fonctionnalité ici.\nSupport multilingue Ce thème intègre le support de multiples langues. Vous pouvez traduire votre contenu dans de multiples langues facilement pour une meilleure accessibilité.\n","date":"November 5, 2023","hero":"/posts/features/hero.png","permalink":"http://localhost:1313/fr/posts/features/","summary":"Ce thème a été conçu à partir d\u0026rsquo;un point de préférence personnel. En tant que développeur, je veux organiser mon portfolio de façon à ce qu\u0026rsquo;il reflète au mieux mes compétences. Donc, ce thème peut ou non répondre à vos besoins, mais je serai heureux d\u0026rsquo;avoir vos commentaires.\nCe billet vous donnera un aperçu des fonctionnalités intégrées à ce thème.\nDesign minimaliste Ce thème a été conçu pour être minimaliste et beau.","tags":null,"title":"Caractéristiques"},{"categories":null,"contents":"Salutation ! Merci d\u0026rsquo;avoir décidé d\u0026rsquo;utiliser ce thème. Dans ce guide, Je vais vous montrer comment commencer rapidement avec ce thème.\nIci, je vais supposer que vous voulez commencer un nouveau site Hugo en utilisant ce thème. Si vous utilisez déjà Hugo pour votre site, alors vous devez savoir comment utiliser un thème. Dans ce cas, veuillez suivre ce dépôt échantillon pour plus de détails.\nLe nécessaire Pour exécuter ce thème localement, vous devez avoir les outils suivants installés.\nHugo version v0.118.x (extended) ou plus. Langage Go version v1.18.x or plus. Node version v18.x et npm version 8.x ou plus. Assurez-vous d\u0026rsquo;avoir les outils nécessaires dans les versions appropriées en utilisant les commandes suivantes.\n# Contrôle de la version de Hugo ➜ hugo version hugo v0.118.2+extended linux/amd64 BuildDate=unknown # Contrôle de la version de Go ➜ go version go version go1.19.4 linux/amd64 # Contrôle de la version de Node ➜ node -v v18.12.1 # Contrôle de la version de NPM ➜ npm -v 8.19.2 Commencer Maintenant, revenons à notre mission. Suivez simplement les 5 étapes pour commencer avec votre site.\nEtape 1: Forker le dépôt d\u0026rsquo;exemple et renommer D\u0026rsquo;abord, forkez ce dépôt échantillon sur votre compte. Ensuite, renommez ce dépôt commme vous voulez. Si vous voulez utiliser les Github Pages pour déployer votre site, alors renommez le en \u0026lt;your username\u0026gt;.github.io. Ce dépôt échantillon fourni des Github Actions pré-configurés pour publier le site dans Github Pages et Netlify.\nEtape 2: Cloner le dépôt forké localement Lorsque vous avez forké et renommé votre dépôt d\u0026rsquo;échantillon, vous pouvez maintenant cloner le dépôt forké sur votre machine locale pour d\u0026rsquo;autres changements.\ngit clone git@github.com:\u0026lt;votre username\u0026gt;/\u0026lt;nom du dépôt forké\u0026gt; Etape 3: Mettre à jour le fichier du module Vous devriez voir les fichiers go.mod et go.sum à la racine du dépôt. Mettez à jour la première ligne du fichier go.mod comme suit:\nmodule github.com/\u0026lt;votre username\u0026gt;/\u0026lt;nom du dépôt forké\u0026gt; Etape 4: Modifier le fichier config.yaml Maintenant, ouvrez le dépôt dans un éditeur et modifiez les configurations dans votre fichier config.yaml situé à la racine de votre dépôt.\nModifier le baseURL D\u0026rsquo;abord, modifiez le baseURL avec l\u0026rsquo;URL de votre site. Si vous voulez utilisez Github Pages pour héberger votre site, alors paramètrez comme suit:\nbaseURL: https://\u0026lt;votre username\u0026gt;.github.io Modifier le gitRepo Maintenant, modifiez le gitRepo sous la section params pour pointer sur votre dépôt forké. Exemple,\ngitRepo: https://github.com/\u0026lt;votre username\u0026gt;/\u0026lt;votre nom de dépôt forké\u0026gt; Désactiver l\u0026rsquo;analytique ou la configurer correctement Le dépôt d\u0026rsquo;échantillon fournit le service Google Analytics pré-configuré. L\u0026rsquo;identifiant analytics indique le site d\u0026rsquo;origine. Donc, soit vous désactivez les analyses, soit vous les configurez correctement selon ce guide.\nVous pouvez désactiver les analyses en paramètrant le champ suivant sous la section params.features :\nanalytics: enabled: false Désactiver la fonctionnalité de lettre d\u0026rsquo;information Le dépôt d\u0026rsquo;échantillon fournit un service de lettre d\u0026rsquo;information mailchimp pré-configuré. Désactivez-le en paramètrant le champ suivant sous la section params.footer.\nnewsletter: enable: false Step 5: Exécuter le site localement Maintenant, exécutez les commandes suivantes pour lancer votre site localement:\na. Charger les modules Hugo\nhugo mod tidy b. Installer les modules Node\nhugo mod npm pack npm install c. Exécuter le site\nhugo server -w Si tout se passe bien, vous devriez voir une sortie similaire à ceci. Maintenant, allez sur localhost:1313 dans votre navigateur et vous devriez voir vous site en cours d\u0026rsquo;exécution.\nEtape 6: Pousser les modifications sur Github Si vous êtes arrivé aussi loin, cela signifie que votre site s\u0026rsquo;exécute localement sans aucuns problèmes. Poussons ces modifications sur Github.\n# stage all the changes git add . # commit the changes git commit -m \u0026#34;Initial site setup\u0026#34; -s # push the changes to Github git push origin HEAD Et ensuite ? Personnaliser l\u0026rsquo;arrière-plan, le logo, et quelques autres choses de votre site en suivant ce guide. Ajouter des informations sur vous en suivant ce guide. Ajouter les informations sur vos compétences en suivant ce guide. Ajouter les informations sur vos expériences en suivant ce guide. Déployer votre site sur Github Page en suivant le guide par ici. Déployer votre site sur Netlify en suivant le guide par ici. ","date":"August 9, 2022","hero":"/posts/quickstart/hero.png","permalink":"http://localhost:1313/fr/posts/quickstart/","summary":"Salutation ! Merci d\u0026rsquo;avoir décidé d\u0026rsquo;utiliser ce thème. Dans ce guide, Je vais vous montrer comment commencer rapidement avec ce thème.\nIci, je vais supposer que vous voulez commencer un nouveau site Hugo en utilisant ce thème. Si vous utilisez déjà Hugo pour votre site, alors vous devez savoir comment utiliser un thème. Dans ce cas, veuillez suivre ce dépôt échantillon pour plus de détails.\nLe nécessaire Pour exécuter ce thème localement, vous devez avoir les outils suivants installés.","tags":null,"title":"Démarrage rapide"},{"categories":null,"contents":"Activation du mode sombre Toha v3.6.0 a introduit un thème sombre. Un grand merci à @donfiguerres. Ce guide vous montrera comment l\u0026rsquo;activer.\nTout d\u0026rsquo;abord, assurez-vous d\u0026rsquo;avoir mis à jour la version du thème en v3.6.0 ou plus. Ensuite, ajoutez la section suivante sous la section params de votre fichier config.yaml.\ndarkMode: enable: true provider: darkreader default: system Ici,\nenable: Spécifie ou non l\u0026rsquo;activation du mode sombre. provider: Spécifie le fournisseur sous-jacent qui sera utilisé pour fournir la fonctionnalité du mode sombre. Actuellement, il ne supporte que darkreader. Nous pourrions soutenir d\u0026rsquo;autres fournisseurs dans le futur. default: Spécifie quel thème utiliser par défaut. Ca supporte les valeurs system, light et dark. ","date":"June 12, 2022","hero":"/posts/customizing/dark-theme/hero.png","permalink":"http://localhost:1313/fr/posts/customizing/dark-theme/","summary":"Activation du mode sombre Toha v3.6.0 a introduit un thème sombre. Un grand merci à @donfiguerres. Ce guide vous montrera comment l\u0026rsquo;activer.\nTout d\u0026rsquo;abord, assurez-vous d\u0026rsquo;avoir mis à jour la version du thème en v3.6.0 ou plus. Ensuite, ajoutez la section suivante sous la section params de votre fichier config.yaml.\ndarkMode: enable: true provider: darkreader default: system Ici,\nenable: Spécifie ou non l\u0026rsquo;activation du mode sombre. provider: Spécifie le fournisseur sous-jacent qui sera utilisé pour fournir la fonctionnalité du mode sombre.","tags":null,"title":"Activer le mode sombre"},{"categories":null,"contents":"Ce thème est construit avec le support de Mermaid propulsé par mermaid-js. Pour activer mermaid pour une page, vous devez mettre mermaid: true dans le front matter de votre page. Par exemple, cette page a le front matter suivant:\ntitle: \u0026#34;Support de Mermaid\u0026#34; date: 2022-03-14T06:15:35+06:00 menu: sidebar: name: Mermaid identifier: writing-post-mermaid parent: writing-post weight: 60 mermaid: true Ensuite, vous pouvez utiliser le shortcode mermaid pour ajouter du contenu mermaid. Par exemple:\n{{\u0026lt; mermaid align=\u0026#34;center\u0026#34;\u0026gt;}} # Votre contenu mermaid ici {{\u0026lt; /mermaid \u0026gt;}} Le shortcode mermaid accepte les paramètres suivants:\nalign: aligne votre diagramme à gauche, à droite, ou au centre. L\u0026rsquo;alignement par défaut est le centre. background: change la couleur d\u0026rsquo;arrière plan de votre diagramme. De plus, vous pouvez également personnaliser le thème de vos diagrammes, par exemple:\n{{\u0026lt; mermaid align=\u0026#34;center\u0026#34; \u0026gt;}} %%{init: {\u0026#39;theme\u0026#39;:\u0026#39;default\u0026#39;}}%% # your mermaid content here {{\u0026lt; mermaid \u0026gt;}} Le paramètre theme accepte les valeurs suivantes:\ndefault neutral dark forest base Exemples Voici quelques exemples de différents diagrammes utilisant mermaid.\nGraphique {{\u0026lt; mermaid align=\u0026#34;left\u0026#34; \u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Diagramme de séquence {{\u0026lt; mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! diagramme de Gantt {{\u0026lt; mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d {{\u0026lt; /mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d Diagramme de classes {{\u0026lt; mermaid \u0026gt;}} classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label {{\u0026lt; /mermaid \u0026gt;}} classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label Graphique de Git gitGraph: commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch \u0026lt;hr\u0026gt; #### Diagramme ER ```bash {{\u0026lt; mermaid \u0026gt;}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses {{\u0026lt; /mermaid \u0026gt;}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ","date":"March 14, 2022","hero":"/posts/writing-posts/mermaid/hero.svg","permalink":"http://localhost:1313/fr/posts/writing-posts/mermaid/","summary":"Ce thème est construit avec le support de Mermaid propulsé par mermaid-js. Pour activer mermaid pour une page, vous devez mettre mermaid: true dans le front matter de votre page. Par exemple, cette page a le front matter suivant:\ntitle: \u0026#34;Support de Mermaid\u0026#34; date: 2022-03-14T06:15:35+06:00 menu: sidebar: name: Mermaid identifier: writing-post-mermaid parent: writing-post weight: 60 mermaid: true Ensuite, vous pouvez utiliser le shortcode mermaid pour ajouter du contenu mermaid. Par exemple:","tags":null,"title":"Support de Mermaid"},{"categories":null,"contents":"Commentaires Ce thème supporte les commentaires dans les billets. Actuellement, il supporte les plugins de commentaires suivants:\nDisqus Valine Utterances Giscus Disqus Disqus est un plugin de commentaires très populaire. Après vous êtes inscrit sur Disqus vous aurez besoin de fournir votre pseudonyme sous la section params.features.comment de votre fichier config.yaml comme ci-après:\nparams: features: comment: enable: true disqus: shortName: \u0026lt;your-disqus-shortname\u0026gt; Valine Valine semble être un plugin de commentaires chinois. Vous pouvez activer le plugin de commentaires valine en ajoutant une section valine sous params.features.comments de votre fichier config.yaml comme ci-après:\nparams: features: comment: enable: true valine: appId: app-id appKey: app-key avatar: avatar placeholder: placeholder lang: lang recordIP: recordIP enableQQ: enableQQ Utterances Utterances utilise GitHub Issues pour stocker les commentaires de vos billets. Cela nécessite que vous ayez un dépôt publique, et l\u0026rsquo;applications Utterances utilise votre dépôt. Les instructions de configuration peuvent être trouvées sur la page d\u0026rsquo;accueil d\u0026rsquo;Utterances\nparams: features: comment: enable: true utteranc: repo: your-repo/name issueTerm: url theme: light Giscus Giscus est basé sur Utterances, mais utilise GitHub Discussions comme backend. Cela nécessite que vous ayez un dépôt public, et que l\u0026rsquo;application Giscus utilise votre dépôt. Les instructions de configuration peuvent être trouvées sur la page d\u0026rsquo;accueil de Giscus.\nPour activer le plugin de commentaires de Giscus, allez d\u0026rsquo;abord sur giscus.app. Dans la section configuration, fournissez les informations nécessaires. Il vous donnera un script à inclure dans votre site. Vous avez juste besoin d\u0026rsquo;extraire les informations respectives du script et de les fournir sous la section params.features.comment.giscus ci-après:\nparams: features: comment: enable: true giscus: repo: your-repo/name repoID: your-repo-id category: your-category categoryID: your-category-id # theme: light # map: url # reaction: 1 # metadata: 0 # inputPosition: bottom # crossOrigin: anonymous Les options commentées sont facultatives. Vous pouvez les utiliser pour personnaliser davantage l\u0026rsquo;expérience des commentaires.\n","date":"March 14, 2022","hero":"/posts/comments/hero.svg","permalink":"http://localhost:1313/fr/posts/comments/","summary":"Commentaires Ce thème supporte les commentaires dans les billets. Actuellement, il supporte les plugins de commentaires suivants:\nDisqus Valine Utterances Giscus Disqus Disqus est un plugin de commentaires très populaire. Après vous êtes inscrit sur Disqus vous aurez besoin de fournir votre pseudonyme sous la section params.features.comment de votre fichier config.yaml comme ci-après:\nparams: features: comment: enable: true disqus: shortName: \u0026lt;your-disqus-shortname\u0026gt; Valine Valine semble être un plugin de commentaires chinois. Vous pouvez activer le plugin de commentaires valine en ajoutant une section valine sous params.","tags":null,"title":"Commentaires"},{"categories":null,"contents":"Ce thème supporte l\u0026rsquo;ajout de liens de soutien/donation sur votre site. Actuellement, les liens de soutien supportés sont:\nKo-fi Buy Me a Coffee Ko-fi Vous pouvez ajouter votre button flottant ko-fi sur votre site web. Pour ajouter le button flottant, ajoutez une section support sous la section params.features dans votre fichier config.yaml:\nparams: features: support: enabled: true kofi: user: \u0026lt;your ko-fi user id\u0026gt; text: Tip Me textColor: \u0026#39;#f9fafc\u0026#39; backgroundColor: \u0026#39;#248aaa\u0026#39; Buy Me a Coffee Vous pouvez ajouter votre bouton flottant \u0026ldquo;Buy Me a Coffee\u0026rdquo; sur votre site web. Pour ajoutez une section support sous la section params.features dans votre fichier config.yaml:\nparams: features: support: enabled: true buymeacoffee: user: \u0026lt;your buymeacoffee.com user\u0026gt; text: Support me on Buy me a coffee! info: Buy me a coffee! color: \u0026#39;#FFDD00\u0026#39; ","date":"March 14, 2022","hero":"/posts/supports/hero.svg","permalink":"http://localhost:1313/fr/posts/supports/","summary":"Ce thème supporte l\u0026rsquo;ajout de liens de soutien/donation sur votre site. Actuellement, les liens de soutien supportés sont:\nKo-fi Buy Me a Coffee Ko-fi Vous pouvez ajouter votre button flottant ko-fi sur votre site web. Pour ajouter le button flottant, ajoutez une section support sous la section params.features dans votre fichier config.yaml:\nparams: features: support: enabled: true kofi: user: \u0026lt;your ko-fi user id\u0026gt; text: Tip Me textColor: \u0026#39;#f9fafc\u0026#39; backgroundColor: \u0026#39;#248aaa\u0026#39; Buy Me a Coffee Vous pouvez ajouter votre bouton flottant \u0026ldquo;Buy Me a Coffee\u0026rdquo; sur votre site web.","tags":null,"title":"Les liens de soutien/donation"},{"categories":null,"contents":"","date":"March 14, 2022","hero":"/posts/external-link/hero.svg","permalink":"http://localhost:1313/fr/posts/external-link/","summary":"","tags":null,"title":"Lien externe sur barre latérale"},{"categories":null,"contents":"Dans ce billet, nous allons créer un site hugo de zéro. Nous le configurerons avec le thème toha, le rendrons multilingue, et ajouterons quelques exemples de billets. A la fin de ce billet, vous devriez être capable d\u0026rsquo;exécuter pleinement un site Hugo avec le thème Toha localement.\nSi vous voulez démarrer d\u0026rsquo;une base, vous pouvez juste cloner le dépôt hugo-toha/hugo-toha.github.io, renommez-le et mettez-le à jour avec vos propres données. Ce dépôt a déjà été configuré pour déployer sur Github Pages et Netlify.\nSi vous avez déjà un site hugo, sautez à la section Ajouter un thème\nCréer un dépôt D\u0026rsquo;abord, créez un dépôt sur Github. Si vous voulez déployer ce site dans Github Pages, votre dépôt devrait être nommé \u0026lt;votre username\u0026gt;.github.io. Clonez le dépôt dans votre machine locale et naviguez dedans.\nCréer un site Maintenant, assurez-vous d\u0026rsquo;avoir Hugo installé. Ce thème devrait fonctionner avec hugo version v0.118.0 et plus. Maintenant, lancez la commande suivante depuis la racine de votre dépôt pour initier un site web hugo.\n$ hugo new site ./ --format=yaml --force Cette commande créera une structure de base d\u0026rsquo;un site hugo. Ici, le flag --format yaml indique à hugo de créer un fichier de configuration au format YAML et le flag --force force hugo à créer un site même si le répertoire cible n\u0026rsquo;est pas vide. Cela va créer un fichier hugo.yaml qui conservera toutes les configurations nécessaires à votre site.\nAjouter un thème Nous allons utiliser un module hugo pour ajouter le thème Toha dans votre site. D\u0026rsquo;abord, initialisez les modules hugo en utilisant la commande suivante:\n$ hugo mod init github.com/\u0026lt;votre compte utilisateur\u0026gt;/\u0026lt;votre nom de dépôt\u0026gt; Cette commande va créer un fichier go.mod à la racine de votre dépôt.\nPuis, ajoutez la section module suivante dans votre fichier hugo.yaml:\nmodule: imports: - path: github.com/hugo-toha/toha/v4 mounts: - source: ./node_modules/flag-icon-css/flags target: static/flags - source: ./node_modules/@fontsource/mulish/files target: static/files - source: ./node_modules/katex/dist/fonts target: static/fonts Finalement, exécutez les commandes suivantes pour télécharger le thème et ses dépendances:\n# Télécharge le theme hugo mod get -u # Télécharge les dépendances du thème hugo mod tidy # Génère les dépendances node hugo mod npm pack # Installe les dépendances install npm install Lancer le site localement Maintenant, vous pouvez déjà exécuter votre site localement. Lançons le site en mode observation en utilisant la commande suivante:\n$ hugo server -w Si vous naviguez sur http://localhost:1313, vous devriez voir un site basique avec le thème Toha. Dans la prochaine section, nous allons configurer le site pour qu\u0026rsquo;il ressemble à hugo-toha.github.io. Comme nous avons lancé le serveur en mode observation, n\u0026rsquo;importe quels changements que nous faisons sur le site sera instantanément visible dans votre navigateur.\nConfigurer le site Maintenant, nous sommes prêt à configurer notre site. Dans cette section, nous allons ajouter les informations de l\u0026rsquo;auteur, différentes sections, et des échantillons de billets etc.\nMise à jour hugo.yaml Quand vous avez créé le site en utilisant la commande hugo new site, cela a créé un fichier hugo.yaml à la racine de votre dépôt. Remplacer le contenu par défaut du fichier hugo.yaml avec ce qui suit:\nbaseURL: https://hugo-toha.github.io languageCode: en-us title: \u0026#34;John\u0026#39;s Blog\u0026#34; # Use Hugo modules to add theme module: imports: - path: github.com/hugo-toha/toha/v4 mounts: - source: static/files target: static/files - source: ./node_modules/flag-icon-css/flags target: static/flags - source: ./node_modules/@fontsource/mulish/files target: static/files - source: ./node_modules/katex/dist/fonts target: static/fonts # Manage languages # For any more details, you can check the official documentation: https://gohugo.io/content-management/multilingual/ languages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 # Force a locale to be use, really useful to develop the application ! Should be commented in production, the \u0026#34;weight\u0026#34; should rocks. # DefaultContentLanguage: bn # Allow raw html in markdown file markup: goldmark: renderer: unsafe: true tableOfContents: startLevel: 2 endLevel: 6 ordered: false # At least HTML and JSON are required for the main HTML content and # client-side JavaScript search outputs: home: - HTML - RSS - JSON # Enable global emoji support enableEmoji: true # Site parameters params: # GitHub repo URL of your site gitRepo: https://github.com/hugo-toha/hugo-toha.github.io features: # Enable portfolio section portfolio: enable: true # Enable blog posts blog: enable: true # Enable Table of contents in reading page toc: enable: true # Configure footer footer: enable: true Ici, vous voyez une configuration de base pour le thème Toha. Vous pouvez voir le fichier de configuration utilisé dans le site d\u0026rsquo;exemple ici. Pour des options de configurations plus détaillées, s\u0026rsquo;il vous plaît consultez ce billet.\nAjouter des données La plupart des contenus de ce thème sont pilotés par quelques fichiers YAML dans le répertoire data. Dans cette section, nous allons ajouter quelques échantillons de données. Puisque nous sommes en train de bâtir un site multilingue, nous allons garder les données de chaque langue dans leur propre répertoire local.\nD\u0026rsquo;abord, créez le répertoire en dans votre répertoire data. Ici, nous sommes en train d\u0026rsquo;ajouter des données pour la langue anglaise.\nInformations du site Maintenant, créez un fichier site.yaml dans le répertoire /data/en/ de votre dépôt. Ajoutez-y le contenu suivant:\n# Copyright Notice copyright: © 2020 Copyright. # Meta description de votre site. Cela peut aider les moteurs de recherche à trouver votre site. description: Portfolio and personal blog of John Doe. Pour voir toutes les options disponibles pour les informations du site, consultez cet extrait de fichier.\nInformations de l\u0026rsquo;auteur Maintenant, créez un fichier author.yaml dans le répertoire data/en et ajoutez vos informations comme suit:\n# Quelques informations à propos de vous. name: \u0026#34;John Doe\u0026#34; nickname: \u0026#34;John\u0026#34; # Le message de salutation avant votre nom. Par défaut, ce sera \u0026#34;Hi, I am\u0026#34; s\u0026#39;il n\u0026#39;est pas fournit. greeting: \u0026#34;Hi, I am\u0026#34; image: \u0026#34;images/author/john.png\u0026#34; # Donner vos informations de contact. Elles seront affichées dans le pied de page. contactInfo: email: \u0026#34;johndoe@example.com\u0026#34; phone: \u0026#34;+0123456789\u0026#34; stack-overflow: icon: stack-overflow url: \u0026#34;https://stackoverflow.com/users/1/exampleUser\u0026#34; text: \u0026#34;ExampleUser\u0026#34; # Un résumé de ce que vous faites summary: - I am a Developer - I am a Devops - I love servers - I work on open-source projects - I love to work with some fun projects Ajouter des sections Maintenant, nous allons ajouter différentes sections dans notre page d\u0026rsquo;accueil. D\u0026rsquo;abord, créons un répertoire sections à l\u0026rsquo;intérieur de votre répertoire data/en. Ici, nous allons ajouter quelques sections avec des configurations minimales. Pour voir les options détaillées de configuration pour les sections, veuillez consulter ici.\nLa section A propos Créez un fichier about.yaml à l\u0026rsquo;intérieur de votre répertoire /data/en/sections. Puis ajoutez le contenu suivant:\n# Information de section section: name: About id: about enable: true weight: 1 showOnNavbar: true template: sections/about.html # votre designation designation: Software Engineer # Les informations de votre société company: name: Example Co. url: \u0026#34;https://www.example.com\u0026#34; # Votre Curriculum Vitae. Le chemin de ce fichier doit être relatif vers le répertoire \u0026#34;static\u0026#34; resume: \u0026#34;files/resume.pdf\u0026#34; # Un résumé sur vous summary: \u0026#39;I am a passionate software engineer with x years of working experience. I built OSS tools for [Kubernetes](https://kubernetes.io/) using GO. My tools help people to deploy their workloads in Kubernetes. Sometimes, I work on some fun projects such as writing a theme, etc.\u0026#39; # Vos liens sur les réseaux sociaux # Mettez-en autant que vous voulez. Utilisez font-awesome pour les icônes. socialLinks: - name: Email icon: \u0026#34;fas fa-envelope\u0026#34; url: \u0026#34;example@gmail.com\u0026#34; - name: Github icon: \u0026#34;fab fa-github\u0026#34; url: \u0026#34;https://www.github.com/example\u0026#34; - name: Stackoverflow icon: \u0026#34;fab fa-stack-overflow\u0026#34; url: \u0026#34;#\u0026#34; - name: LinkedIn icon: \u0026#34;fab fa-linkedin\u0026#34; url: \u0026#34;#\u0026#34; - name: Twitter icon: \u0026#34;fab fa-twitter\u0026#34; url: \u0026#34;#\u0026#34; - name: Facebook icon: \u0026#34;fab fa-facebook\u0026#34; url: \u0026#34;#\u0026#34; # Affiche vos badges # Vous pouvez montrer vos certifications depuis https://www.credly.com # Vous pouvez aussi afficher des barres circulaire indiquant le niveau d\u0026#39;expertise de certaines compétences badges: - type: certification name: Certified Kubernetes Security Specialist url: \u0026#34;https://www.credly.com/org/the-linux-foundation/badge/exam-developer-certified-kubernetes-security-specialist\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/f4bf92ed-8985-40b2-bc07-2f9308780854/kubernetes-security-specialist-logo-examdev.png\u0026#34; - type: certification name: Istio and IBM Cloud Kubernetes Service url: \u0026#34;https://www.credly.com/org/the-linux-foundation/badge/exam-developer-certified-kubernetes-security-specialist\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/8d34d489-84bf-4861-a4a0-9e9d68318c5c/Beyond_basics_of_Istio_on_Cloud_v2.png\u0026#34; - type: certification name: Artificial Intelligence and Machine Learning url: \u0026#34;https://www.credly.com/org/grupo-bancolombia/badge/artificial-intelligence-and-machine-learning\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/e027514f-9d07-4b29-862f-fe21a8aaebf1/ae.png\u0026#34; - type: soft-skill-indicator name: Leadership percentage: 85 color: blue - type: soft-skill-indicator name: Team Work percentage: 90 color: yellow - type: soft-skill-indicator name: Hard Working percentage: 85 color: orange # Vous pouvez aussi fournir un code couleur à la place d\u0026#39;un nom de couleur # - type: soft-skill-indicator # name: Example 1 # percentage: 75 # color: \u0026#34;#00adb5\u0026#34; Mettre le fichier resume.pdf dans le répertoire /static/files de votre dépôt. Vous pouvez trouver le fichier about.yaml utilisé dans le site exemple depuis ici.\nAjouter d\u0026rsquo;autres sections Pour conserver le caractère court de ce billet, nous l\u0026rsquo;avons divisé en différents billets. Ci-dessous, il y a la liste des billets qui vous montrera comment configurer les autres sections:\nConfiguration de la section A propos. Configuration de la section des études. Configuration de la section des expériences. Configuration de la section des projets. Configuration de la section des billets récents. Configuration de la section des réalisations. Configuration de la section des compétences. Ajout de billets Maintenant, nous sommes prêts à ajouter notre premier billet sur notre site. Ici, nous allons ajouter ce billet d\u0026rsquo;introduction.\nD\u0026rsquo;abord, créez un répertoire posts à l\u0026rsquo;intérieur du répertoire content de votre site. Ensuite, créez un fichier _index.md à l\u0026rsquo;intérieur du répertoire posts. Copiez le contenu de ce fichier et collez-le dans le nouveau fichier _index.md récemment créé. Créez un répertoire introduction à l\u0026rsquo;intérieur du répertoire posts. Ajoutez le hero.svg suivant à l\u0026rsquo;intérieur de votre répertoire introduction. Maintenant, créez un fichier index.md à l\u0026rsquo;intérieur du répertoire introduction. Ce fichier index.md contiendra les contenus du billet. Ajoutez l\u0026rsquo;extrait de contenus suivant dans le fichier index.md récemment créé. Désormais, votre billet devrait apparaître à http://localhost:1313/posts et votre section Billets Récents devrait également afficher votre billet comme une carte. Pour traduire ce billet, créez simplement un nouveau fichier index.\u0026lt;code langage\u0026gt;.md dans le même répertoire. Puis, ajoutez le contenu traduit dedans.\nPour plus de billets d\u0026rsquo;échantillon, regardez par ici s\u0026rsquo;il vous plaît.\nEt ensuite ? A ce stade, votre site doit avoir une apparence similaire au site d\u0026rsquo;exemple. Maintenant, il est temps de déployer votre site. Vous pouvez suivre les guides de déploiement ci-dessous:\nDéployer dans Github Pages Déployer dans Netlify ","date":"June 8, 2020","hero":"/posts/getting-started/prepare-site/hero.jpg","permalink":"http://localhost:1313/fr/posts/getting-started/prepare-site/","summary":"Dans ce billet, nous allons créer un site hugo de zéro. Nous le configurerons avec le thème toha, le rendrons multilingue, et ajouterons quelques exemples de billets. A la fin de ce billet, vous devriez être capable d\u0026rsquo;exécuter pleinement un site Hugo avec le thème Toha localement.\nSi vous voulez démarrer d\u0026rsquo;une base, vous pouvez juste cloner le dépôt hugo-toha/hugo-toha.github.io, renommez-le et mettez-le à jour avec vos propres données. Ce dépôt a déjà été configuré pour déployer sur Github Pages et Netlify.","tags":null,"title":"Préparer Votre Site"},{"categories":null,"contents":"Dans ce billet, nous allons déployer le site que nous avons créé dans le précédent billet dans Github Pages. D\u0026rsquo;abord, assurez-vous que le nom de votre dépôt soit \u0026lt;your username\u0026gt;.github.io. Ensuite, commitez n\u0026rsquo;importe quelles modifications locales et poussez dans Github.\nCréer une branche gh-pages D\u0026rsquo;abord, créez une nouvelle branche nommée gh-pages. Github définira automatiquement les configurations pour Github Pages quand il verra une branche avec ce nom.\n# Création de la branche the gh-pages $ git checkout -b gh-pages # push de la branche source sur Github $ git push gh-pages gh-pages Activer Github Action Nous allons automatiser le processus de déploiement en utilisant Github Actions. D\u0026rsquo;abord, assurez-vous que Github Action soit activé dans votre dépôt. Allez dans Settings \u0026gt; Actions de votre dépôt assurez-vous que Action permissions est configuré sur Allow all actions. Ici, une capture d\u0026rsquo;écran du paramètre décrit.\nAjouter le flux de travail Nous allons utiliser l\u0026rsquo;action peaceiris/actions-hugo pour configurer hugo et peaceiris/actions-gh-pages pour déployer le site. Créez un répertoire .github à la racine de votre dépôt. Ensuite, créez un répertoire workflows à l\u0026rsquo;intérieur du répertoire .github. Enfin, créez un fichier deploy-site.yaml à l\u0026rsquo;intérieur du répertoire workflows et ajoutez-y le contenu suivant:\nname: Deploy to Github Pages # run when a commit is pushed to \u0026#34;source\u0026#34; branch on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: # checkout to the commit that has been pushed - uses: actions/checkout@v3 - name: Setup Hugo uses: peaceiris/actions-hugo@v2.6.0 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Update Hugo Modules run: hugo mod tidy - name: Setup Node uses: actions/setup-node@v3 with: node-version: 18 - name: Install node modules run: | hugo mod npm pack npm install - name: Build run: hugo --minify # push the generated content into the `gh-pages` branch. - name: Deploy uses: peaceiris/actions-gh-pages@v3.9.0 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-pages publish_dir: ./public Cette action s\u0026rsquo;exécutera à chaque push dans la branche main. Ca construira le site et commit le contenu généré dans la branche gh-pages.\nDéployer Si vous avez correctement suivi le guide, votre site devrait être prêt à être déployé dans Github Pages. Désormais, si vous poussez n\u0026rsquo;importe quel commit dans votre branche main, une Github Action démarrera et déploiera votre site automatiquement.\nPoussez un commit dans la branche main et allez dans l\u0026rsquo;onglet Actions de votre dépôt pour vérifier que l\u0026rsquo;action a démarré.\nMaintenant, attendez la fin des actions. Si elles se terminent avec succès, vous devriez voir une encoche verte indiquant que l\u0026rsquo;exécution réussie.\nUne fois la Github Action terminée avec succès, vous pouvez parcourir votre site à https://\u0026lt;your username\u0026gt;.github.io.\nAjout d\u0026rsquo;un nom de domaine personnalisé Si vous possédez un nom de domaine et que vous souhaitez l\u0026rsquo;utiliser pour ce site, rendez-vous sur le site de votre fournisseur de nom de domaine. Ajoutez les enregistrements de ressources suivants:\n@ 3600 IN A 185.199.108.153 @ 3600 IN A 185.199.109.153 @ 3600 IN A 185.199.110.153 @ 3600 IN A 185.199.111.153 WWW 3600 IN A 185.199.108.153 WWW 3600 IN A 185.199.109.153 WWW 3600 IN A 185.199.110.153 WWW 3600 IN A 185.199.111.153 Pour vérifier votre domaine pour vous assurer que personne de Github ne puisse le réclamer à l\u0026rsquo;exception de vous, vous pouvez suivre les étapes contenues dans ce guide.\nEnfin, créez un fichier CNAME à l\u0026rsquo;intérieur du répertoire /static de votre dépôt. Ajoutez votre nom de domaine là:\nexample.com Une fois la Github Action terminée avec succès, vous pouvez parcourir votre site à https://\u0026lt;your domain name\u0026gt;.\nNotez qu\u0026rsquo;en naviguant sur https://\u0026lt;your username\u0026gt;.github.io, il redirigera automatiquement sur https://\u0026lt;your domain name\u0026gt;.\n","date":"June 8, 2020","hero":"/posts/getting-started/github-pages/hero.jpg","permalink":"http://localhost:1313/fr/posts/getting-started/github-pages/","summary":"Dans ce billet, nous allons déployer le site que nous avons créé dans le précédent billet dans Github Pages. D\u0026rsquo;abord, assurez-vous que le nom de votre dépôt soit \u0026lt;your username\u0026gt;.github.io. Ensuite, commitez n\u0026rsquo;importe quelles modifications locales et poussez dans Github.\nCréer une branche gh-pages D\u0026rsquo;abord, créez une nouvelle branche nommée gh-pages. Github définira automatiquement les configurations pour Github Pages quand il verra une branche avec ce nom.\n# Création de la branche the gh-pages $ git checkout -b gh-pages # push de la branche source sur Github $ git push gh-pages gh-pages Activer Github Action Nous allons automatiser le processus de déploiement en utilisant Github Actions.","tags":null,"title":"Déployer dans Github Pages"},{"categories":null,"contents":"Netlify offre un facile et excellent processus pour le déploiement d\u0026rsquo;un site statique hugo. Vous pouvez déployer votre site en quelques clics. Contrairement à Github Pages, vous pouvez nommer votre dépôt comme vous le souhaitez. Vous pouvez également personnaliser l\u0026rsquo;URL du site.\nDans ce billet, nous montrerons le processus pas-à-pas d\u0026rsquo;un déploiement de site hugo avec Netlify.\nAjouter une configuration de Netlify D\u0026rsquo;abord, créons un ficher netlify.toml à la racine de votre dépôt et ajoutez-y la configuration suivante:\n[build] command = \u0026#34;hugo --gc --minify\u0026#34; publish = \u0026#34;public\u0026#34; [context.production.environment] HUGO_ENABLEGITINFO = \u0026#34;true\u0026#34; HUGO_ENV = \u0026#34;production\u0026#34; HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.split1] command = \u0026#34;hugo mod tidy \u0026amp;\u0026amp; hugo mod npm pack \u0026amp;\u0026amp; npm install \u0026amp;\u0026amp; hugo --gc --minify --enableGitInfo\u0026#34; [context.split1.environment] HUGO_ENV = \u0026#34;production\u0026#34; HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.deploy-preview] command = \u0026#34;hugo mod tidy \u0026amp;\u0026amp; hugo mod npm pack \u0026amp;\u0026amp; npm install \u0026amp;\u0026amp; hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL\u0026#34; [context.deploy-preview.environment] HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.branch-deploy] command = \u0026#34;hugo mod tidy \u0026amp;\u0026amp; hugo mod npm pack \u0026amp;\u0026amp; npm install \u0026amp;\u0026amp; hugo --gc --minify -b $DEPLOY_PRIME_URL\u0026#34; [context.branch-deploy.environment] HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.next.environment] HUGO_ENABLEGITINFO = \u0026#34;true\u0026#34; Commit et pousser le fichier netlify.toml dans Github. Maintenant, vous être prêt à déployer votre site sur Netlify.\nDéploiement du site Maintenant, connectez-vous sur netlify. Ensuite, rendez-vous dans l\u0026rsquo;onglet Sites de votre tableau de bord et cliquez sur le bouton New site form Git.\nUne nouvelle pop-up s\u0026rsquo;ouvrira. Sélectionnez Github et authentifiez-vous, avec votre compte Github.\nAprès l\u0026rsquo;authentification, on vous demandera de sélectionnez le dépôt désiré. Sélectionnez le dépôt que vous utilisez pour votre site.\nMaintenant, Netlify vous mènera à la page de déploiement. Sélectionnez la branche que vous voulez déployer. Netlify devrait remplir automatiquement les champs requis à partir du fichier netlify.toml que vous avez créé un peu plus tôt dans ce billet. Quand vous êtes satisfait des configurations, appuyez sur le bouton Deploy\nMaintenant, netlify va commencer à publier votre site immédiatement. Attendez que le processus de publication soit achevé. Une fois le site publié, vous pouvez parcourir votre site à l\u0026rsquo;URL générée automatiquement par netlify. L\u0026rsquo;URL générée automatiquement a été indiqué par le rectangle rouge sur la capture d\u0026rsquo;écran ci-dessous.\nPersonnalisation de l\u0026rsquo;URL Vous pouvez facilement personnaliser l\u0026rsquo;URL de votre site en quelques clics seulement comme indiqué ci-dessous.\nCliquez sur le bouton Domain Setting sous l\u0026rsquo;onglet Site Overview. Maintenant, soit vous ajoutez votre propre domaine en cliquant sur le bouton Add custom domain ou bien vous pouvez juste utiliser le domaine \u0026lt;your custom prefix\u0026gt;.netlify.app. Ici, c\u0026rsquo;est ce que nous feront après. Cliquez sur le bouton options et sélectionnez Edit site name. Ensuite, donnez à votre site le nom que vous voulez. Une fois que vous avez sauvegardé le nouveau nom, vous verrez que l\u0026rsquo;URL de votre site a été mise à jour instantanément. Maintenant, vous pouvez parcourir votre site à la nouvelle URL. ","date":"June 8, 2020","hero":"/posts/getting-started/netlify/hero.png","permalink":"http://localhost:1313/fr/posts/getting-started/netlify/","summary":"Netlify offre un facile et excellent processus pour le déploiement d\u0026rsquo;un site statique hugo. Vous pouvez déployer votre site en quelques clics. Contrairement à Github Pages, vous pouvez nommer votre dépôt comme vous le souhaitez. Vous pouvez également personnaliser l\u0026rsquo;URL du site.\nDans ce billet, nous montrerons le processus pas-à-pas d\u0026rsquo;un déploiement de site hugo avec Netlify.\nAjouter une configuration de Netlify D\u0026rsquo;abord, créons un ficher netlify.toml à la racine de votre dépôt et ajoutez-y la configuration suivante:","tags":null,"title":"Déployer dans Netlify"},{"categories":null,"contents":"Pour garantir que votre site bénéfie des fonctionnalités et correctifs les plus récents, il est crucial de le maintenir à jour avec la dernière version du thème. Cet article vous guidera tout au long du processus de mise en place du workflow Github qui mettra à jour automatiquement la version du thème. Cette action réalisera quotidiennement une vérification d\u0026rsquo;une mise à jour du thème. Si une mise à jour est détectée, cela va générer une PR qui mettra à jour votre site avec la version du thème la plus récente.\nConfigurer Github Workflow Maintenant, créez un fichier theme-update.yml dans le répertoire .github/workflows de votre dépôt avec le contenu suivant:\nname: \u0026#34;Theme Update\u0026#34; on: schedule: - cron: \u0026#34;0 0 * * *\u0026#34; jobs: update-theme: runs-on: ubuntu-latest steps: - uses: actions/checkout@v4.1.1 with: ref: main - name: Setup Node uses: actions/setup-node@v4 with: node-version: 18 - name: Setup Hugo uses: peaceiris/actions-hugo@v2.6.0 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Update hugo modules run: | # update to latest version of all modules hugo mod get -u # update the npm dependencies hugo mod npm pack # cleanup go.sum file hugo mod tidy - name: Install node modules run: npm install - name: Build run: | # build the site hugo --minify # remove file generated by the build rm -rf public/ - name: Create Pull Request uses: peter-evans/create-pull-request@v5 with: base: main title: Update theme labels: automerge Vous êtes bien pour vous lancer. A partir de maintenant, cette action s\u0026rsquo;exécutera quotidiennement et génèrera une Pull Request si des mises à jour du thème sont détectées.\nFrom now on, this action will execute on a daily basis and generate a Pull Request if any updates to the theme are detected.\n","date":"June 8, 2020","hero":"/posts/getting-started/theme-update/hero.svg","permalink":"http://localhost:1313/fr/posts/getting-started/theme-update/","summary":"Pour garantir que votre site bénéfie des fonctionnalités et correctifs les plus récents, il est crucial de le maintenir à jour avec la dernière version du thème. Cet article vous guidera tout au long du processus de mise en place du workflow Github qui mettra à jour automatiquement la version du thème. Cette action réalisera quotidiennement une vérification d\u0026rsquo;une mise à jour du thème. Si une mise à jour est détectée, cela va générer une PR qui mettra à jour votre site avec la version du thème la plus récente.","tags":null,"title":"Automatiser la mise à jour du thème"},{"categories":null,"contents":"Après l\u0026rsquo;installation du thème, quand vous lancez le site pour la première fois, cela démarrera avec les paramètres par défaut. Cela devrait avoir l\u0026rsquo;apparence du site d\u0026rsquo;exemple excepté qu\u0026rsquo;il n\u0026rsquo;a pas de sections sur la page d\u0026rsquo;accueil. Ces sections sont ajoutées via quelques fichiers de données. Dans les prochains billets, je vais vous montrer comment vous pouvez ajouter ces sections en fournissant des fichiers de données.\nDans ce billet, je vais vous montrer comment vous pouvez changer les paramètres du site pour modifier l\u0026rsquo;arrière plan, le logo, les informations de l\u0026rsquo;auteur, et activer/désactiver différentes fonctionnalités.\nPour une liste compréhensive des paramètres de configuration disponibles, consultez s\u0026rsquo;il vous plaît le site d\u0026rsquo;exemple.\nAjouter une image d\u0026rsquo;arrière plan D\u0026rsquo;abord, on va paramètrer un arrière plan sur votre site. Mettez l\u0026rsquo;image d\u0026rsquo;arrière plan désirée dans le répertoire assets/images. Ensuite, ajoutez ce qui suit dans la section params de votre fichier config.yaml.\nbackground: \u0026#34;images/\u0026lt;nom-de-votre-image-arrière-plan.jpg\u0026#34; Ajouter le logo du site Pour ajouter des logos pour votre site, vous devez fournir deux logos différents. Un pour la barre de navigation transparente et un autre pour la barre de navigation non transparente. Placez vos logos dans le répertoire assets/images et ajoutez le code sous la section params du fichier config.yaml.\n# The inverted logo will be used in the initial transparent navbar and # the main logo will be used in the non-transparent navbar. logo: main: images/main-logo.png inverted: images/inverted-logo.png favicon: images/favicon.png Activer les billets de blog Pour activer les billets de blog sur votre site, vous aurez besoin de faire quelques changements dans votre fichier config.yaml. Localisez la section params.features et ajoutez le code suivant:\n# Active et configure la publication de billets blog: enable: true showAuthor: true Activer la Table des Matières Maintenant, si vous voulez afficher la section Table des Matières dans votre billet de blog, vous devez d\u0026rsquo;abord l\u0026rsquo;activer dans la section params.features de votre fichier config.yaml.\ntoc: enable: true Vous pouvez également contrôler le niveau de votre table des matières par l\u0026rsquo;ajout de la configuration suivante dans la section markup de votre fichier config.yaml.\nmarkup: tableOfContents: startLevel: 2 endLevel: 6 ordered: false Ici, nous avons configuré notre table des matières pour afficher tous les titres à partir de h2 jusqu\u0026rsquo;à h6.\nActiver le bouton \u0026lt;Améliorer cette page\u0026gt; Si vous voulez fournir à vos visiteurs un moyen facile d\u0026rsquo;améliorer un article (par exemple une faute de frappe, un correctif d\u0026rsquo;indentation, etc.), vous pouvez activer le bouton \u0026lt;Améliorer cette page\u0026gt; en ajoutant l\u0026rsquo;URL de votre dépôt Git dans la section params de votre fichier config.yaml.\ngitRepo: \u0026lt;L\u0026#39;URL du dépôt Github de votre site\u0026gt; Cela ajoutera un bouton labelisé Améliorer cette page au pied de chaque billet. Le bouton redirigera l\u0026rsquo;utilisateur directement vers le formulaire d\u0026rsquo;édition de Github de la page.\nSi vous branche par défaut ne s\u0026rsquo;appelle pas main, alors vous aurez besoin d\u0026rsquo;ajouter votre branche git par défaut dans la section params de votre fichier config.yaml.\ngitBranch: \u0026lt;le nom de votre branche git par défaut\u0026gt; Activer la Newsletter Pour activer la fonctionnalité de newsletter, vous avez besoin de fournir les paramètres nécessaires sous la section params.footer dans votre fichier config.yaml. Actuellement, la fonctionnalité de newsletter supporte seulement le service Mailchip. Ici un exemple de ce à quoi cela doit ressembler:\nnewsletter: enable: true provider: mailchimp mailchimpURL: https://github.us1.list-manage.com/subscribe/post?u=19de52a4603135aae97163fd8\u0026amp;amp;id=094a24c76e Pour désactiver la fonctionnalité de newsletter, vous pouvez paramètrer la configuration suivante:\nnewsletter: enable: false Activer le RAW HTML dans le fichier Markdown Si vous voulez inclure le RAW HTML dans vos fichiers markdown, vous avez besoin d\u0026rsquo;activer le rendu non sécurisé. Sans cette activation, Hugo n\u0026rsquo;affichera pas le rendu HTML. Pour activer le rendu markdown non sécurisé; ajoutez les paramètres goldmark suivants dans la section markup du fichier config.yaml.\nmarkup: goldmark: renderer: unsafe: true Ajouter les informations de l\u0026rsquo;auteur Maintenant, fournissons vos informations de base. Créez un fichier author.yaml dans le répertoire /data et ajoutez-y les informations sur l\u0026rsquo;auteur.\n# Quelques informations sur vous name: \u0026#34;John Doe\u0026#34; nickname: \u0026#34;John\u0026#34; # Un message de bienvenue avant votre nom. Il sera par défaut \u0026#34;Bonjour! Je suis\u0026#34; s\u0026#39;il n\u0026#39;est pas fourni. greeting: \u0026#34;Bonjour, je suis\u0026#34; image: \u0026#34;images/author/john.png\u0026#34; # Donnez quelques informations pour vous contacter. Ils seront utilisés dans le pied de page contactInfo: email: \u0026#34;johndoe@example.com\u0026#34; phone: \u0026#34;+0123456789\u0026#34; github: johndoe linkedin: johndoe # Un sommaire de ce que vous faites summary: - Je suis Développeur - Je suis Devops - J\u0026#39;aime les serveurs - Je travaille sur des projets Open Source - J\u0026#39;adore travailler sur des projets sympas Note: Les paramètres contactInfo utiliseront le paramètre icon pour trouver l\u0026rsquo;icône. Assurez-vous que le champs icon corresponde avec le nom de l\u0026rsquo;icône sur fontawesome. Vous pouvez trouver des exemples ici\nAjouter l\u0026rsquo;avis du droit d\u0026rsquo;auteur On va ajouter un avis de droit d\u0026rsquo;auteur pour votre site. Ca sera affiché en bas du pied de page. Créez un fichier site.yaml dans votre répertoire data et ajoutez-y la section suivante.\ncopyright: © 2024 Copyright. La description du site Pour ajouter une description de votre site qui aidera les moteurs de recherche à trouver votre site. Vous avez besoin d\u0026rsquo;ajouter une section description dans votre votre fichier site.yaml.\n# Meta description de votre site. Ca aidera les moteurs de recherche à trouver votre site. description: Site d\u0026#39;exemple pour hugo theme Toha. Ajout d\u0026rsquo;un menu personnalisé Pour ajouter des menus personnalisé dans la barre de navigation, vous pouvez modifier le fichier site.yaml. Par défaut, les menus personnalisés sont visibles dans la barre de navigation. Pour masquer un menu personnalisé, paramètrez la propriété hideFromNavbar à true. Par défaut, les menus personnalisés sont masqués depuis la zone de navigation du pied de page. Pour afficher un élément de menu personnalisé dans le pied de page, paramètrez sa propriété showOnFooter à true.\ncustomMenus: - name: Notes url: https://hossainemruz.gitbook.io/notes/ hideFromNavbar: false showOnFooter: true Maintenant, vous pouvez lancer votre site et voir les changements. Dans les billets qui suivent, je vous guiderai sur comment ajouter des sections à votre page d\u0026rsquo;accueil et plus loin personnaliser votre site.\n","date":"June 8, 2020","hero":"/posts/configuration/site-parameters/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/site-parameters/","summary":"Après l\u0026rsquo;installation du thème, quand vous lancez le site pour la première fois, cela démarrera avec les paramètres par défaut. Cela devrait avoir l\u0026rsquo;apparence du site d\u0026rsquo;exemple excepté qu\u0026rsquo;il n\u0026rsquo;a pas de sections sur la page d\u0026rsquo;accueil. Ces sections sont ajoutées via quelques fichiers de données. Dans les prochains billets, je vais vous montrer comment vous pouvez ajouter ces sections en fournissant des fichiers de données.\nDans ce billet, je vais vous montrer comment vous pouvez changer les paramètres du site pour modifier l\u0026rsquo;arrière plan, le logo, les informations de l\u0026rsquo;auteur, et activer/désactiver différentes fonctionnalités.","tags":null,"title":"Configuration des paramètres du site"},{"categories":null,"contents":"L\u0026rsquo;objet de la section A propos est de fournir une brève introduction sur vous sur votre site web. Dans ce billet, nous vous guiderons sur la façon de configurer la section A propos. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier about.yaml.\nPour commencer, créez un fichier about.yaml dans le répertoire data/fr/sections de votre site web. Suivez ensuite, les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier about.yaml:\n# section information section: name: A propos # Titre de votre section (default: \u0026#34;\u0026#34;) id: about # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* enable: true # Booléen pour déterminer si la section est activée (par défaut: false) weight: 1 # Ordre d\u0026#39;affichage de la section (par defaut: alphabetique suivi par poids) showOnNavbar: true # Booléen pour déterminer si le lien doit être affiché pour cette section dans la barre de navigation template: sections/about.html # Vous Permet de pointer vers un modèle spécifique. Paramètre du modèle Vous avez la possibilité de personnaliser le partiel utilisé pour cette section en spécifiant la propriété template. Sauvegardez simplement le nouveau modèle dans votre répertoire layout/partials.\nAjouter vos informations de travail Pour inclure des détails à propos de votre emploi actuel, vous pouvez ajouter la section suivante dans votre fichier about.yaml:\n# votre désignation designation: Software Engineer # Les informations de votre compagnie company: name: Example Co. url: \u0026#34;https://www.example.com\u0026#34; Ajouter un résumé sur vous Pour donner un aperçu concis de votre expertise professionnelle, ajoutons une section de résumé. Cela donnera aux visiteurs un aperçu rapide de ce que vous faites. Ajoutez la section suivante à votre fichier about.yaml:\n# un résumé sur vous summary: \u0026#39;I am a passionate software engineer with x years of working experience. I built OSS tools for [Kubernetes](https://kubernetes.io/) using GO. My tools help people to deploy their workloads in Kubernetes. Sometimes, I work on some fun projects such as writing a theme, etc.\u0026#39; Essayez de le rendre aussi bref que possible. Ne soyez pas trop verbeux. Nous avons d\u0026rsquo;autres sections qui donnent plus d\u0026rsquo;informations sur votre expertise.\nVous pouvez utiliser la syntaxe markdown dans le champs summary\nAjouter vos liens sociaux Pour ajouter des liens vers vos différents profils tels que LinkedIn, Twitter, and Github, incluez la section socialLinks dans votre fichier about.yaml:\n# Vos liens sociaux # Mettez en autant que voulez. Utitisez font-awesome pour les icônes. socialLinks: - name: Email icon: \u0026#34;fas fa-envelope\u0026#34; url: \u0026#34;example@gmail.com\u0026#34; - name: Github icon: \u0026#34;fab fa-github\u0026#34; url: \u0026#34;https://www.github.com/example\u0026#34; - name: Stackoverflow icon: \u0026#34;fab fa-stack-overflow\u0026#34; url: \u0026#34;#\u0026#34; - name: LinkedIn icon: \u0026#34;fab fa-linkedin\u0026#34; url: \u0026#34;#\u0026#34; - name: Twitter icon: \u0026#34;fab fa-twitter\u0026#34; url: \u0026#34;#\u0026#34; - name: Facebook icon: \u0026#34;fab fa-facebook\u0026#34; url: \u0026#34;#\u0026#34; Vous pouvez utiliser n\u0026rsquo;importe quelles icônes libres de Font Awesome dans le champs icon.\nAjouter un CV Pour ajouter votre Curriculum Vitae, placez le fichier PDF dans le répertoire files à l\u0026rsquo;intérieur du répertoire static. Ensuite, incluez la section suivante dans votre fichier about.yaml.\n# Votre CV. Le chemin de ce fichier doit être relatif vers votre répertoire \u0026#34;static\u0026#34; resourceLinks: - title: \u0026#34;My Resume\u0026#34; url: \u0026#34;files/resume.pdf\u0026#34; Ajouter des badges Maintenant, ajoutons vos badges et les indicateurs de force pour diverses compétences telles que le leadership, la communication, le travail d\u0026rsquo;équipe, etc. Incluez la section suivante dans votre fichier about.yaml:\n# Afficher vos badges # Vous pouvez afficher vos certifications vérifiée depuis https://www.credly.com. # Vous pouvez aussi afficher des barres circulaires indiquant le niveau d\u0026#39;expertise sur une certaine compétence badges: - type: certification name: Certified Kubernetes Security Specialist url: \u0026#34;https://www.credly.com/org/the-linux-foundation/badge/exam-developer-certified-kubernetes-security-specialist\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/f4bf92ed-8985-40b2-bc07-2f9308780854/kubernetes-security-specialist-logo-examdev.png\u0026#34; - type: certification name: Istio and IBM Cloud Kubernetes Service url: \u0026#34;https://www.credly.com/org/the-linux-foundation/badge/exam-developer-certified-kubernetes-security-specialist\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/8d34d489-84bf-4861-a4a0-9e9d68318c5c/Beyond_basics_of_Istio_on_Cloud_v2.png\u0026#34; - type: certification name: Artificial Intelligence and Machine Learning url: \u0026#34;https://www.credly.com/org/grupo-bancolombia/badge/artificial-intelligence-and-machine-learning\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/e027514f-9d07-4b29-862f-fe21a8aaebf1/ae.png\u0026#34; - type: soft-skill-indicator name: Leadership percentage: 85 color: blue - type: soft-skill-indicator name: Team Work percentage: 90 color: yellow - type: soft-skill-indicator name: Hard Working percentage: 85 color: orange Actuellement, le pourcentage de qualification doit être compris entre 0 et 100, et doit être divisible par 5. Les couleurs suivantes sont disponibles pour l\u0026rsquo;indicateur de pourcentage de qualification.\nbleu jaune rose vert Vous pouvez aussi utiliser n\u0026rsquo;importe quel code couleur hexadécimal dans le champs color.\nL\u0026rsquo;image suivante montre comment le contenu du fichier about.yaml est cartographié dans la section A propos. (La portion de configuration de l\u0026rsquo;image est obsolète et la section des SoftSkills a été remplacée avec des badges)\n","date":"June 8, 2020","hero":"/posts/configuration/sections/about/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/sections/about/","summary":"L\u0026rsquo;objet de la section A propos est de fournir une brève introduction sur vous sur votre site web. Dans ce billet, nous vous guiderons sur la façon de configurer la section A propos. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier about.yaml.\nPour commencer, créez un fichier about.yaml dans le répertoire data/fr/sections de votre site web. Suivez ensuite, les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier about.","tags":null,"title":"Configuration de la section A propos"},{"categories":null,"contents":"La section Compétences est conçue pour mettre en valeur vos compétences et fournir des informations sur votre expertise pour chaque compétence. Dans ce billet, nous vous guiderons sur la façon de configurer la section compétences de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît cet échantillon du fichier skills.yaml.\nPour commencer, créez un fichier skills.yaml dans le répertoire data/fr/sections de votre site. Ensuite, suivez les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section à votre fichier skills.yaml:\n# section information section: name: Compétences # Titre de votre section id: skills # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* enable: true # Booléen pour déterminer si la section est activée (par défaut: false) weight: 2 # Ordre d\u0026#39;affichage de la section (par defaut: alphabetique suivi par poids) showOnNavbar: true # Peut optionnellement masquer les titres de la section # hideTitle: true Ajouter vos compétences Ajoutez une compétence et ses informations sous la section skills dans votre fichier skills.yaml comme ci-dessous:\n# Vos compétences. # Donnez un résumé pour chaque compétence dans la section summary. skills: - name: Kubernetes logo: /images/sections/skills/kubernetes.png summary: \u0026#34;Capable of deploying, managing application on Kubernetes. Experienced in writing Kubernetes controllers for CRDs.\u0026#34; url: \u0026#34;https://kubernetes.io/\u0026#34; Ici, vous renseignez les champs name, logo, et summary pour une compétence. Le champs summary doit fournir une idée du niveau de connaissance sur une compétence particulière.\nVous pouvez utiliser la syntaxe markdown dans le champs summary.\nL\u0026rsquo;image suivante montre comment le contenu du fichier skills.yaml est cartographié dans la section Compétences.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/skills/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/sections/skills/","summary":"La section Compétences est conçue pour mettre en valeur vos compétences et fournir des informations sur votre expertise pour chaque compétence. Dans ce billet, nous vous guiderons sur la façon de configurer la section compétences de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît cet échantillon du fichier skills.yaml.\nPour commencer, créez un fichier skills.yaml dans le répertoire data/fr/sections de votre site. Ensuite, suivez les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section à votre fichier skills.","tags":null,"title":"Configuration Section Compétences"},{"categories":null,"contents":"La section Etude a été conçue pour mettre en valeur votre parcours d\u0026rsquo;étude. Dans ce billet, nous vous guiderons sur la façon de configurer la section Etude de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier education.yaml.\nPour commencer, créez un nouveau fichier nommé education.yaml dans le répertoire data/fr/sections de votre site. Ensuite, suivez les instructions ci-dessous.\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier education.yaml:\n# section information section: name: Etude # Titre de votre section id: education # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* template: sections/education.html # Utilisez \u0026#34;sections/education-alt.html comme modèle alternatif. enable: true weight: 4 showOnNavbar: true # Peut optionnellement masquer les titres de la section # hideTitle: true Ajoutez vos degrés d\u0026rsquo;enseignement Pour ajouter un cycle d\u0026rsquo;étude, inclure les informations correspondantes sous la section degrees dans le fichier education.yaml comme ci-dessous :\ndegrees: - name: Ph.D in Quantum Cryptography icon: fa-microscope timeframe: 2016-2020 institution: name: ABC University of Technology url: \u0026#34;#\u0026#34; logo: /images/education/college.png grade: #(optionnel) scale: CGPA achieved: 3.6 outOf: 4 publications: #(optionnel) - title: Lorem ipsum dolor sit amet, consectetur adipiscing elit. url: \u0026#34;#\u0026#34; - title: Fusce eu augue ut odio porttitor pulvinar. url: \u0026#34;#\u0026#34; - title: Nullam vitae orci tincidunt purus viverra pulvinar. url: \u0026#34;#\u0026#34; extracurricularActivities: #(optionnel) - Lorem ipsum dolor sit amet, consectetur adipiscing elit. - Fusce eu augue ut odio porttitor pulvinar. custonSections: #(optionnel) - name: Thesis content: Lorem ipsum dolor sit amet, consectetur adipiscing elit. - name: Supervisor content: Fusce eu augue ut odio porttitor pulvinar. Assurez-vous que l\u0026rsquo;icône que vous utilisez soit disponible sur Font Awesome.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/education/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/sections/education/","summary":"La section Etude a été conçue pour mettre en valeur votre parcours d\u0026rsquo;étude. Dans ce billet, nous vous guiderons sur la façon de configurer la section Etude de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier education.yaml.\nPour commencer, créez un nouveau fichier nommé education.yaml dans le répertoire data/fr/sections de votre site. Ensuite, suivez les instructions ci-dessous.\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier education.","tags":null,"title":"Configuration de la section Etudes"},{"categories":null,"contents":"La section expériences a été conçue pour mettre en valeur votre carrière et mettre en évidence les responsabilités que vous avez assumées tout au long de votre parcours professionnel. Dans ce billet, nous vous guiderons sur la façon de configurer la section Expériences de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier experiences.yaml.\nPour commencer, créez un nouveau fichier nommé experiences.yaml dans le répertoire data/fr/sections de votre site. Ensuite, suivez les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier experiences.yaml:\n# section information section: name: Experiences # Titre de la section (par défaut: \u0026#34;\u0026#34; ) id: experiences # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* enable: true weight: 3 showOnNavbar: true # Peut optionnellement masquer les titres de la section # hideTitle: true Ajouter vos expériences Pour ajouter une expérience, incluez les informations correspondantes sous la section experiences de votre fichier experiences.yaml comme ci-dessous:\n# Vos expériences experiences: - company: name: Example Co. url: \u0026#34;https://www.example.com\u0026#34; location: Dhaka Branch logo: /images/experiences/company.png # Aperçu de votre compagnie overview: Example Co. is a widely recognized company for cloud-native development. It builds tools for Kubernetes. positions: - designation: Senior Software Engineer start: Nov 2019 # Ne pas fournir de date de fin sur votre poste actuel. Ca sera remplacé par \u0026#34;Aujourd\u0026#39;hui\u0026#34;. # end: Dec 2020 # Donnez quelques points à propos de vos responsabilités dans cette entreprise. responsibilities: - Design and develop XYZ tool for ABC task - Design, develop and manage disaster recovery tool [Xtool](https://www.example.com) that backup Kubernetes volumes, databases, and cluster\u0026#39;s resource definition. - Lead backend team. - designation: Junior Software Engineer start: Nov 2017 end: Oct 2019 responsibilities: - Implement and test xyz feature for abc tool. - Support client for abc tool. - Learn k,d,w technology for xyz. Chaque entrée dans une section expériences devrait avoir les informations suivantes:\ncompany: Quelques informations sur votre entreprise. Vous devez fournir name, url, location, logo, et une brève overview de votre entreprise. positions: Une liste des postes que vous avez occupé dans l\u0026rsquo;entreprise. Vous pouvez fournir plusieurs postes si vous en avez changé au sein de cette entreprise. designation: Indique le rôle que vous jouiez sur ce poste. start: Temps quand vous avez démarré à ce poste. end: Temps quand vous avez quitté ce poste. Si vous occupé actuellement ce poste, ne renseignez pas ce champs. responsibilities: Une liste des responsabilités que vous avez assumée à ce poste. Cette section est très importante car elle donnera aux visiteurs une idée des responsabilités que vous êtes capable de gérer. Vous pouvez utiliser la syntaxe markdown dans le champs overview de la section company et dans le champs responsabilities.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/experiences/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/sections/experiences/","summary":"La section expériences a été conçue pour mettre en valeur votre carrière et mettre en évidence les responsabilités que vous avez assumées tout au long de votre parcours professionnel. Dans ce billet, nous vous guiderons sur la façon de configurer la section Expériences de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier experiences.yaml.\nPour commencer, créez un nouveau fichier nommé experiences.yaml dans le répertoire data/fr/sections de votre site.","tags":null,"title":"Configuration de la section Expériences"},{"categories":null,"contents":"L\u0026rsquo;objet de la section Projets est de présenter efficacement vos projets. Dans ce billet, nous vous guiderons sur la façon de configurer la section Projets de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier projects.yaml.\nPour commencer, créez un nouveau fichier nommé projects.yaml dans le répertoire data/fr/sections de votre site. Ensuite, suivez les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier projects.yaml:\n# section information section: name: Projects # Titre de la section (par défaut: \u0026#34;\u0026#34; ) id: projects # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* enable: true weight: 5 showOnNavbar: true # Peut optionnellement masquer les titres de la section # hideTitle: true Ajouter des boutons de filtrage projet Maintenant, ajoutez une section buttons dans votre fichier projects.yaml comme ci-dessous:\nbuttons: - name: All filter: \u0026#34;all\u0026#34; - name: Professional filter: \u0026#34;professional\u0026#34; - name: Academic filter: \u0026#34;academic\u0026#34; - name: Hobby filter: \u0026#34;hobby\u0026#34; Chaque bouton a deux propriétés. La première propriété est name qui est le texte qui sera affiché sur le bouton et l\u0026rsquo;autre est filter qui spécifie la catégorie des projets que ce bouton doit sélectionner.\nUn bouton n\u0026rsquo;affichera que les projets qui ont un tag correspondant au texte spécifié dans le filter choisi. La valeur du filtre all est traitée spécifiquement. Il correspond à tous les projets même s\u0026rsquo;ils n\u0026rsquo;ont pas all en tant que tag dans leur champs tags.\nAjouter vos projets Maintenant, ajoutez vos projects sous la section projects dans votre fichier projects.yaml comme ci-dessous:\nprojects: - name: Kubernetes logo: images/projects/kubernetes.png role: Contributor timeline: \u0026#34;March 2018 - Present\u0026#34; repo: https://github.com/kubernetes/kubernetes # url: \u0026#34;\u0026#34; summary: Production-Grade Container Scheduling and Management . tags: [\u0026#34;professional\u0026#34;, \u0026#34;kubernetes\u0026#34;, \u0026#34;cloud\u0026#34;] Vous pouvez spécifier les champs suivants pour votre projet:\nname: Le nom du projet. logo: Le log du projet. Si le projet n\u0026rsquo;a pas de logo, le thème y ajoutera automatiquement un espace réservé. role: Votre rôle sur ce projet. timeline: La chronologie quand vous avez travaillé sur ce projet. repo: Si ce projet est projet Open-Source et hébergé sur Github, vous pouvez fournir l\u0026rsquo;URL du dépôt.Il Ca sera utilisé pour montrer le nombre d\u0026rsquo;étoiles pour ce projet. url: Si le projet n\u0026rsquo;est pas open-source ou n\u0026rsquo;est pas hébergé sur Github, vous pouvez fournir une URL de votre projet. Cela créera un bouton avec le lien dans la carte du projet. summary: Une courte description du projet. tags: Une liste de tags pour votre projet. Ca sera utilisé pour sélectionner les projets sous une catégorie avec le bouton de filtrage. Vous pouvez utiliser la syntaxe markdown dans le champs summary.\nL\u0026rsquo;image suivante montre commment les contenus de projects.yaml sont cartographiés dans la section projects.yaml.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/projects/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/sections/projects/","summary":"L\u0026rsquo;objet de la section Projets est de présenter efficacement vos projets. Dans ce billet, nous vous guiderons sur la façon de configurer la section Projets de votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier projects.yaml.\nPour commencer, créez un nouveau fichier nommé projects.yaml dans le répertoire data/fr/sections de votre site. Ensuite, suivez les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier projects.","tags":null,"title":"Configuration de la section Projets"},{"categories":null,"contents":"La section Billets récents est utilisée pour mettre en valeur les derniers billets de votre contenu. Pour activer cette section, créez une fichier recent-posts.yaml dans votre répertoire data/fr/sections et incluez le contenu suivant:\n# section information section: name: Billets récents # Titre de la section (par défaut: \u0026#34;\u0026#34; ) id: recent-posts # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* enable: true # Booléen pour déterminer si la section est activée (par défaut: false) weight: 6 # # Ordre d\u0026#39;affichage de la section (par defaut: alphabetique suivi par poids) showOnNavbar: # true Booléen pour déterminer si le lien doit être affiché pour cette section dans la barre de navigation hideTitle: true # Peut optionnellement masquer les titres de la section (defaut: false) numShow: 4 # Peut optionnellement augmenter le nombre de billets à afficher (defaut: 3) showMoreButton: false # Peu optionnellement afficher le bouton \u0026#39;Plus de billets\u0026#39; (default: false) ","date":"June 8, 2020","hero":"/posts/configuration/sections/recent-posts/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/sections/recent-posts/","summary":"La section Billets récents est utilisée pour mettre en valeur les derniers billets de votre contenu. Pour activer cette section, créez une fichier recent-posts.yaml dans votre répertoire data/fr/sections et incluez le contenu suivant:\n# section information section: name: Billets récents # Titre de la section (par défaut: \u0026#34;\u0026#34; ) id: recent-posts # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* enable: true # Booléen pour déterminer si la section est activée (par défaut: false) weight: 6 # # Ordre d\u0026#39;affichage de la section (par defaut: alphabetique suivi par poids) showOnNavbar: # true Booléen pour déterminer si le lien doit être affiché pour cette section dans la barre de navigation hideTitle: true # Peut optionnellement masquer les titres de la section (defaut: false) numShow: 4 # Peut optionnellement augmenter le nombre de billets à afficher (defaut: 3) showMoreButton: false # Peu optionnellement afficher le bouton \u0026#39;Plus de billets\u0026#39; (default: false) ","tags":null,"title":"Configuration Section Billets Récents"},{"categories":null,"contents":"La section Réalisations a été conçue pour afficher vos réalisations dans le format d\u0026rsquo;une galerie attrayante. Ce guide vous accompagnera à travers le processus de configuration de la section Réalisations sur votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier achievements.yaml.\nPour commencer, créez un nouveau fichier nommé achievements.yaml dans le répertoire data/fr/sections de votre site web. Ensuite, suivez les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier achievements.yaml:\n# section information section: name: Réalisations # Titre de votre section (default: \u0026#34;\u0026#34;) id: achievements # URL id/slug de section *valeur à conserver \u0026amp; obligatoire* enable: true # Booléen pour déterminer si la section est activée (par défaut: false) weight: 9 # Ordre d\u0026#39;affichage de la section (par defaut: alphabetique suivi par poids) showOnNavbar: true # Booléen pour déterminer si le lien doit être affiché pour cette section dans la barre de navigation # Peut optionnellement masquer les titres de la section # hideTitle: true Ajouter les réalisations Pour ajouter vos réalisations, ouvrez le fichier achievements.yaml et incluez les entrées suivantes sous la section achievements:\nachievements: - title: Meilleur présentateur image: images/sections/achievements/presenter.jpg summary: Meilleur présentation de l\u0026#39;année 2020 à la conférence XYZ. Chaque entrée d\u0026rsquo;une réalisation doit avoir les champs suivants:\ntitle: Le titre de la réalisation. image: Une image de la réalisation. summary: Un résumé de la réalisation. Vous pouvez utilisez la syntaxe markdown dans le champs summary.\nL\u0026rsquo;image suivante montre comment les contenus du fichier achievements.yaml sont cartographiés dans la section Réalisations.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/achievements/hero.svg","permalink":"http://localhost:1313/fr/posts/configuration/sections/achievements/","summary":"La section Réalisations a été conçue pour afficher vos réalisations dans le format d\u0026rsquo;une galerie attrayante. Ce guide vous accompagnera à travers le processus de configuration de la section Réalisations sur votre site. Pour une référence complète, consultez s\u0026rsquo;il vous plaît l\u0026rsquo;extrait du fichier achievements.yaml.\nPour commencer, créez un nouveau fichier nommé achievements.yaml dans le répertoire data/fr/sections de votre site web. Ensuite, suivez les instructions ci-dessous:\nAjouter les informations de section Ajoutez les métadonnées de la section suivante dans votre fichier achievements.","tags":null,"title":"Configuration de la section Réalisations"},{"categories":null,"contents":"Article complet à venir\u0026hellip; ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/fr/posts/writing-posts/front-matter/","summary":"Article complet à venir\u0026hellip; ","tags":null,"title":"Front Matter"},{"categories":null,"contents":"Cet article propose un échantillon des syntaxes de base du Markdown qui peut être utilisé dans les fichiers de contenu d\u0026rsquo;Hugo, et montre également des balises HTML de base décorées avec CSS dans un thème Hugo.\nEn-têtes Les éléments HTML suivant \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; représentent six niveaux de titres de section. \u0026lt;h1\u0026gt; est le niveau le plus élevé tandis que le \u0026lt;h6\u0026gt; est le plus bas.\nH1 H2 H3 H4 H5 H6 Paragraphe Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBloc de citation Les éléments blockquote représentent le contenu qui est cité à partir d\u0026rsquo;une autre source, éventuellement avec une citation qui doit être dans un élément footer ou cite, et éventuellement avec des changments en ligne tel que les annotations et les abrévations.\nBloc de citation sans attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Notez que vous pouvez utiliser la syntaxe Markdown à l\u0026rsquo;intérieur d\u0026rsquo;un bloc de citation.\nBloc de citation avec attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTableaux Les tableaux ne font pas partie de la spécification de base du Markdown, mais Hugo les supportent hors-des-clous.\nName Age Bob 27 Alice 23 Markdown en ligne dans les tableaux Inline Markdown In Table italics bold strikethrough code Blocs de code Bloc de code avec backticks \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; bloc de code indenté avec quatre espaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Bloc de code avec code abrégé de mise en évidence d\u0026rsquo;Hugo \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Types de liste Liste ordonnée Première point Second point Troisième point Liste non ordonnée Element de la liste Autre élément Et un autre élément listes imbriquées Fruit Pomme Orange Banane Selle Lait Fromage Autres Elements — abbr, sub, sup, kbd, mark Ici, vous trouverez d\u0026rsquo;autres balises HTML décorées par CSS:\n\u0026lt;abbr title=\u0026#34;Graphics Interchange Format\u0026#34;\u0026gt;GIF\u0026lt;/abbr\u0026gt; est un format d\u0026#39;image bitmap. GIF est un format d\u0026rsquo;image bitmap.\nH\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt;O H2O\nX\u0026lt;sup\u0026gt;n\u0026lt;/sup\u0026gt; + Y\u0026lt;sup\u0026gt;n\u0026lt;/sup\u0026gt; = Z\u0026lt;sup\u0026gt;n\u0026lt;/sup\u0026gt; Xn + Yn = Zn\nPressez \u0026lt;kbd\u0026gt;\u0026lt;kbd\u0026gt;CTRL\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;ALT\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;Delete\u0026lt;/kbd\u0026gt;\u0026lt;/kbd\u0026gt; pour terminer la session. Pressez CTRL+ALT+Delete pour terminer la session.\nLa plupart des \u0026lt;mark\u0026gt;salamandres\u0026lt;/mark\u0026gt; sont nocturnes, et chassent les insectes, les vers, et d\u0026#39;autres petites créatures. La plupart des salamandres sont nocturnes, et chassent les insectes, les vers, et d\u0026rsquo;autres petites créatures.\nLa citation ci-dessus est extraite de la conférence de Rob Pike\u0026rsquo;s lors du Gopherfest, le 18 Novembre 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/fr/posts/writing-posts/markdown-syntax/","summary":"\u003cp\u003eCet article propose un échantillon des syntaxes de base du Markdown qui peut être utilisé dans les fichiers de contenu d\u0026rsquo;Hugo, et montre également des balises HTML de base décorées avec CSS dans un thème Hugo.\u003c/p\u003e","tags":null,"title":"Guide Syntaxique Markdown"},{"categories":null,"contents":"La notation Mathématique dans un projet Hugo peut être activée en utilisant des librairies JavaScript tierces.\nDans cet exemple, nous utiliserons KaTeX\nCréez un partiel sous /layouts/partials/math.html A l\u0026rsquo;intérieur de ce partiel référencez l\u0026rsquo;Auto-render Extension ou hébergez ces scripts localement. Inclure le partiel dans votre template comme suit: {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} Pour activer KaText globalement mettez le paramètre math à true dans la configuration du projet. Pour activer KaTex par page, incluez le paramètre math: true dans le front matter de votre fichier de contenu. Note: Utilisez le référentiel en ligne des Fonctions TeX supportées\nExemples Bloc de math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"June 8, 2020","hero":"/posts/writing-posts/math/hero.svg","permalink":"http://localhost:1313/fr/posts/writing-posts/math/","summary":"\u003cp\u003eLa notation Mathématique dans un projet Hugo peut être activée en utilisant des librairies JavaScript tierces.\u003c/p\u003e","tags":null,"title":"Paramètres de type Maths"},{"categories":null,"contents":"Hugo est livré avec quelques Shortcode intégrés pour du contenu riche, ainsi qu\u0026rsquo;une configuration pour le respect de la vie privée et un ensemble de Shortcode simples qui active des versions statiques et sans JS de différents médias sociaux.\nShortcode simple Instagram Shortcode amélioré de confidentialité YouTube Shortcode simple X (ex-Twiter) Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 Shortcode simple Vimeo ","date":"June 8, 2020","hero":"/posts/writing-posts/rich-content/hero.svg","permalink":"http://localhost:1313/fr/posts/writing-posts/rich-content/","summary":"\u003cp\u003eHugo est livré avec quelques \u003ca href=\"https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes\" target=\"_blank\" rel=\"noopener\"\u003eShortcode intégrés\u003c/a\u003e pour du contenu riche, ainsi qu\u0026rsquo;une \u003ca href=\"https://gohugo.io/about/hugo-and-gdpr/\" target=\"_blank\" rel=\"noopener\"\u003econfiguration pour le respect de la vie privée\u003c/a\u003e et un ensemble de Shortcode simples qui active des versions statiques et sans JS de différents médias sociaux.\u003c/p\u003e","tags":null,"title":"Contenu riche"},{"categories":null,"contents":"Emoji peut être activé dans un projet Hugo de plusieurs façons.\nLa fonction emojify peut être appelée directement dans les templates ou par shortcodes en ligne.\nPour activer globallement Emoji, paramètrez enableEmoji à true dans la configuration de votre site et vous pouvez ensuite taper des codes raccourcis d\u0026rsquo;Emoji directement dans les contenus de vos fichiers; par exemple:\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nL\u0026rsquo;aide mémoire Emoji est une référence utile pour les codes emoji.\nN.B. Les étapes ci-dessus active les caractères Unicode Standard Emoji dans Hugo, cepandant, le rendu de ces glyphes dépend du navigateur et de la plateforme. Pour styler l\u0026rsquo;emoji vous pouvez utiliser une police emoji tierce ou un empilement de polices; par exemple:\n.emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }","date":"June 8, 2020","hero":"/posts/writing-posts/using-emoji/hero.svg","permalink":"http://localhost:1313/fr/posts/writing-posts/using-emoji/","summary":"\u003cp\u003eEmoji peut être activé dans un projet Hugo de plusieurs façons.\u003c/p\u003e","tags":null,"title":"Utilisation d'Emoji"},{"categories":null,"contents":"Analytiques Ce thème a été construit avec le support de divers outils d\u0026rsquo;analyse. Actuellement, il prend en charge les analyses suivantes:\nGoatCounter counter.dev Google Analytics Matomo Pour une liste complète des analytiques supportés, référez-vous au fichier d\u0026rsquo;échantillon config.yaml.\nAvertissement: Lors de l\u0026rsquo;ajout d\u0026rsquo;analyses, vous devriez prendre en considération la législation locale pour voir si une bannière de confidentialité est nécessaire pour informer les visiteurs du suivi de ses données personnelles. En général (pas un conseil juridique), les méthodes anonymes et respectueuses de la vie privée telles que counter.dev et GoatCounter n\u0026rsquo;ont pas besoin d\u0026rsquo;une bannière, car elles ne collectent pas de données personnelles identifiables. Goat Counter GoatCounter est la méthode d\u0026rsquo;analyse la plus complète, simple et respectueuse de la vie privée supportée dans Toha. Ces scripts traquent les pages les plus vues, le nombre total d\u0026rsquo;utilisateur, et plus encore, tout en étant open source !\nPour activer l\u0026rsquo;analyse GoatCounter sur votre site, vous avez deux options: la première est de s\u0026rsquo;inscrire sur goatcounter.com et obtenir un code pour votre site, la seconde est une instance auto-hébergée de GoatCounter. Ensuite, vous avez à ajouter une section analytics sous la section params.features de votre fichier config.yaml comme ci-dessous:\nanalytics: enable: true services: # GoatCounter goatCounter: code: \u0026lt;your GoatCounter code\u0026gt; # Not self-hosted instance: \u0026lt;your GoatCounter instance url\u0026gt; # For self-hosted you should use only one of the two methods counter.dev counter.dev est un site d\u0026rsquo;analytique simple et respectueux de la vie privée qui vous permet de suivre le nombre total d\u0026rsquo;utilisateurs, la première page visitée et quelques autres métriques sur votre site web. Malheureusement, pour que les choses restent simples (et gratuites), elles ne montrent pas un classement des pages les plus visités, mais plutôt celles qui ont été consultées en premier.\nVous pouvez l\u0026rsquo;activer par l\u0026rsquo;ajout de l\u0026rsquo;email avec lequel vous vous êtes inscrit sur la page de counter.dev sous la section params.features dans votre fichier config.yaml comme ci-dessous:\nanalytics: enable: true services: counterDev: id: \u0026lt;votre counter.dev id\u0026gt; Le code de suivi sera automatiquement ajouté à votre site.\nRemarques : Sur certains sites, une erreur a été détectée où seul le répertoire racine (\u0026quot;/\u0026quot;) est passé à counter.dev, donc le suivi n\u0026rsquo;affiche rien sous la section \u0026ldquo;pages\u0026rdquo;. Pour corriger cela, on peut ajouter referrerPolicy: no-referrer-when-downgrade comme paramètre dans la section \u0026ldquo;counterDev\u0026rdquo;, en s\u0026rsquo;assurant que les nouvelles visites de pages sont toujours correctement passées sur counter.dev. Google Analytics Méfiez-vous, d\u0026rsquo;après une récente jurisprudence, Google Analytics pourrait être illégal dans l\u0026rsquo;Union Européenne. Vous pouvez activer Google Analytics sur votre site en ajoutant votre id de suivi sous la section params.features dans votre fichier config.yaml comme ci-dessous:\nanalytics: enable: true services: # Google Analytics google: id: \u0026lt;your Google Analytics tracking id\u0026gt; Vous pouvez utiliser à la fois la V3 ou V4 de l\u0026rsquo;ID de suivi. Le thème détectera automatiquement la version du code de suivi et ajoutera les scripts de suivi correspondants en fonction de votre site.\nPour des paramètres de confidentialité additionnels concernant Google Analytics, vous pouvez fournir une section privacy.googleAnalytics dans votre fichier config.yaml comme décrit ici.\nMatomo Vous pouvez activer Matomo (anciennement Piwik) par l\u0026rsquo;ajout de la configuration Matomo sous la section params.features dans votre fichier config.yaml comme ci-dessous:\nanalytics: enable: true services: # Matomo / Piwik matomo: instance: matomo.example.com siteId: 1 # The number generated after adding a site in your instance ","date":"June 8, 2020","hero":"/posts/analytics/hero.svg","permalink":"http://localhost:1313/fr/posts/analytics/","summary":"Analytiques Ce thème a été construit avec le support de divers outils d\u0026rsquo;analyse. Actuellement, il prend en charge les analyses suivantes:\nGoatCounter counter.dev Google Analytics Matomo Pour une liste complète des analytiques supportés, référez-vous au fichier d\u0026rsquo;échantillon config.yaml.\nAvertissement: Lors de l\u0026rsquo;ajout d\u0026rsquo;analyses, vous devriez prendre en considération la législation locale pour voir si une bannière de confidentialité est nécessaire pour informer les visiteurs du suivi de ses données personnelles. En général (pas un conseil juridique), les méthodes anonymes et respectueuses de la vie privée telles que counter.","tags":null,"title":"Analytiques"}]