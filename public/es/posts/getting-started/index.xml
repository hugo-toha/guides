<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Primeros Pasos on Toha</title>
    <link>http://localhost:1313/es/posts/getting-started/</link>
    <description>Recent content in Primeros Pasos on Toha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Mon, 08 Jun 2020 23:00:20 +0600</lastBuildDate><atom:link href="http://localhost:1313/es/posts/getting-started/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Prepare su sitio web</title>
      <link>http://localhost:1313/es/posts/getting-started/prepare-site/</link>
      <pubDate>Mon, 08 Jun 2020 23:00:20 +0600</pubDate>
      
      <guid>http://localhost:1313/es/posts/getting-started/prepare-site/</guid>
      <description>En esta publicación, vamos a crear un sitio de hugo desde cero. Después, lo configuraremos con el tema Toha, lo haremos plurilingüe, y añadiremos publicaciones de ejemplo. Al final de esta publicación, deberías poder ejecutar un sitio hugo con el tema Toha totalmente funcional localmente.
Si quieres un atajo, puedes simplemente hacer un fork del repositorio hugo-toha/hugo-toha.github.io, renombrarlo y actualizarlo con tus datos. Este repositorio ya está configurado para el despliegue en Github Pages y Netlify.</description>
    </item>
    
    <item>
      <title>Despliegue el sitio en Github Pages</title>
      <link>http://localhost:1313/es/posts/getting-started/github-pages/</link>
      <pubDate>Mon, 08 Jun 2020 22:00:20 +0600</pubDate>
      
      <guid>http://localhost:1313/es/posts/getting-started/github-pages/</guid>
      <description>En esta publicación, vamos a desplegar el sitio que hemos creado en la pasada publicación en Github Pages. Para empezar, debemos asegurarnos que el nombre de su repositorio es &amp;lt;tu usuario&amp;gt;.github.io. Después, haz commit de todos los cambios no publicados y haz push a Github.
Crea una rama gh-pages Para empezar, crea una nueva rama llamada gh-pages. Github automáticamente establecerá las respectivas configuraciones para Github pages cuando vea la rama con este nombre.</description>
    </item>
    
    <item>
      <title>Despliegue el sitio en Netlify</title>
      <link>http://localhost:1313/es/posts/getting-started/netlify/</link>
      <pubDate>Mon, 08 Jun 2020 21:00:15 +0600</pubDate>
      
      <guid>http://localhost:1313/es/posts/getting-started/netlify/</guid>
      <description>Netlify ofrece un excelente y fácil proceso para desplegar un sitio de hugo estático. Puedes desplegar su sitio web en cuestión de unos solos clics. A diferencia de Github Pages, puedes nombrar su repositorio como quieras. También puede personalizar el URL del sitio.
En esta publicación, mostraremos paso a paso el proceso de despliegue de un sitio hugo con netlify.
Añade configuración de Netlify Para empezar, cree un archivo netlify.toml a la raíz de su repositorio y añade las siguientes configuraciones:</description>
    </item>
    
    <item>
      <title>Automatiza las actualizaciones del tema</title>
      <link>http://localhost:1313/es/posts/getting-started/theme-update/</link>
      <pubDate>Mon, 08 Jun 2020 20:00:15 +0600</pubDate>
      
      <guid>http://localhost:1313/es/posts/getting-started/theme-update/</guid>
      <description>Para garantizar que su sitio se beneficie de las funciones y correcciones más recientes, es fundamental mantenerlo actualizado con la última versión del tema. Este artículo te guiará a través del proceso de establecimiento de un GitHub workflow que actualizará automáticamente la versión del tema. Esta acción realizará comprobaciones diarias de cualquier actualización del tema. Si se detecta una actualización, se generará un Pull Request para actualizar su sitio a la versión más reciente del tema.</description>
    </item>
    
    
  </channel>
</rss>
