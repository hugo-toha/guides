[{"categories":null,"contents":"La sección de Publicaciones Destacadas sirve para mostrar las publicaciones que quieras. Para habilitar esta sección, crea un archivo featured-posts.yaml dentro del directorio data/es/sections e incluye el siguiente contenido:\n# Información de la sección section: name: Publicaciones DestacadAS # Título de la sección id: featured-posts # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 6 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación hideTitle: true # Opcionalmente puede ocultar el título del menú (predeterminado: false) # publicaciones a destacar posts: - quickstart - update-v3-to-v4 - prepare-site ","date":"February 6, 2024","hero":"/posts/configuration/sections/featured-posts/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/featured-posts/","summary":"La sección de Publicaciones Destacadas sirve para mostrar las publicaciones que quieras. Para habilitar esta sección, crea un archivo featured-posts.yaml dentro del directorio data/es/sections e incluye el siguiente contenido:\n# Información de la sección section: name: Publicaciones DestacadAS # Título de la sección id: featured-posts # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 6 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación hideTitle: true # Opcionalmente puede ocultar el título del menú (predeterminado: false) # publicaciones a destacar posts: - quickstart - update-v3-to-v4 - prepare-site ","tags":null,"title":"Configurando la sección de Publicaciones Destacadas"},{"categories":null,"contents":"Maneras de contribuir Puedes contribuir a este tema de varias maneras.\nCódigo Los Pull Requests son bienvenidos y estaré encantado de revisarlos. Simplemente siga los siguientes principios:\nManténgalo simple. Manténgalo consistente con el diseño. Utilice la menor cantidad de dependencias posible. Ten paciencia. Testeando y reportando errores Puedes reportar un bug También puedes pedir una característica Dar ideas y sugerencias Documentación También puedes contribuir con la documentación del tema: You can also contribute to the theme documentation by:\nAñadiendo información y secciones. Corrigiendo errores y faltas de ortografía. Actualizando documentación obsoleta. Traduciendo la documentación a un nuevo idioma, esta guía te podría ser útil. Traducción Finalmente, puedes contribuir a la traducción del tema a distintos idiomas, completando palabras que faltan, o añadiendo un nuevo idioma. Puedes seguir la guía Cómo añadir un idioma sin soporte para más información.\nCómo contribuir? Para el desarrollo local, puedes hacer cambios al submódulo del tema y probar los cambios con tu propio sitio o con el sitio de ejemplo localmente.\nFork Para comenzar, haz fork de este repositorio. Después, sigue los siguientes pasos para usar el tema forkeado para el desarrollo local,\nEjecuta el tema forkeado con el sitio de ejemplo Si quieres ejecutar tu desarrollo local con este sitio de ejemplo, sigue los siguientes pasos:\n# va al directorio exampleSite $ cd exampleSite # instala los módulos de hugo $ hugo mod tidy # instala las dependencias $ hugo mod npm pack $ npm install # ejecuta el sitio de ejemplo localmente $ hugo server -w Ahora, puedes hacer cambios en el tema, y se verán reflectados inmediatamente en el sitio. Si necesitas cambiar alguna configuración, lo puedes hacer en el archivo config.yaml dentro del directorio exampleSite. Si necesitas añadir contenido o datos, puedes crear el respectivo directorio dentro de exampleSite y añade tu contenido o datos deseados ahí.\nEjecuta el tema forkeado con tu propio sitio Si quieres ejecutar tu desarrollo local con tu sitio, sigue los siguientes pasos:\nSustituye los módulos del tema:\nAbre el archivo go.mod de tu sitio y sustituye github.com/hugo-toha/toha/v4 por el path de tu repositorio forkeado. Por ejemplo, si tu repositorio forkeado es github.com/\u0026lt;tu-usuario-de-github\u0026gt;/toha, sustituye github.com/hugo-toha/toha/v4 por github.com/\u0026lt;tu-usuario-de-github\u0026gt;/toha/v4.\nmodule github.com/hugo-toha/hugo-toha.github.io go 1.19 require github.com/hugo-toha/toha/v4 v4.0.1-0.20231229170427-d3968ca711ef // indirect replace( github.com/hugo-toha/toha/v4 =\u0026gt; github.com/\u0026lt;your-github-user\u0026gt;/toha/v4 \u0026lt;git branch\u0026gt; ) Para el desarrollo interactivo, puedes sustituir el tema con tu fork clonado localmente. Por ejemplo, si has clonado tu fork en /home/mis-proyectos/toha, sustituye github.com/hugo-toha/toha/v4 por /home/mis-proyectos/toha.\nmodule github.com/hugo-toha/hugo-toha.github.io go 1.19 require github.com/hugo-toha/toha/v4 v4.0.1-0.20231229170427-d3968ca711ef // indirect replace( github.com/hugo-toha/toha/v4 =\u0026gt; /home/my-projects/toha ) Actualizar dependencias:\n# actualiza los módulos de hugo $ hugo mod tidy # instala las dependencias $ hugo mod npm pack $ npm install Ejecuta tu sitio localmente:\n$ hugo server -w Desde aquí ya puedes hacer cambios al código fuente del tema mientras lo pruebas con tu sitio Hugo o con el de ejemplo.\nAbre un Pull Request Cuando ya hayas hecho los cambios, haz commit y haz push a tu fork.\n# añade todos los cambios $ git add . # haz commit de los cambios con un mensaje significativo $ git commit -m \u0026#34;Un mensaje de commit significativo\u0026#34; # haz push del commit a tu fork $ git push my-fork mi-nueva-rama Después, abre un Pull Request en la rama main de hugo-toha/toha desde la rama mi-nueva-rama de tu propio fork.\n","date":"January 19, 2024","hero":"/posts/contributing/hero.png","permalink":"http://localhost:1313/es/posts/contributing/","summary":"Maneras de contribuir Puedes contribuir a este tema de varias maneras.\nCódigo Los Pull Requests son bienvenidos y estaré encantado de revisarlos. Simplemente siga los siguientes principios:\nManténgalo simple. Manténgalo consistente con el diseño. Utilice la menor cantidad de dependencias posible. Ten paciencia. Testeando y reportando errores Puedes reportar un bug También puedes pedir una característica Dar ideas y sugerencias Documentación También puedes contribuir con la documentación del tema: You can also contribute to the theme documentation by:","tags":null,"title":"Cómo contribuir?"},{"categories":null,"contents":"Si desea traducir a un idioma si soporte, puede traducir los elementos de la interfaz de usuario.\nCrea el archivo i18n Para haerlo, debes crear el directorio i18n dentro de la raíz del sitio, el directorio dónde puede encontrar el archivo config.yaml, y directorios como data, content, etc.\nLuego, puedes crear el archivo \u0026lt;código_del_idioma\u0026gt;.toml dentro del directorio i18n. En este directorio puedes encontrar todos los códigos de idiomas con las banderas que aparecerán junto a ese idioma.\nTraduce los elementos de la interfaz Dentro del nuevo archivo, simplemente copia el siguiente contenido, y sustituye el contenido entre comillas con el nombre en tu idioma deseado.\nSi el contenido de abajo es obsoleto, puedes copiar el conteindo del archivo en. # More documentation here: https://github.com/nicksnyder/go-i18n [home] other = \u0026#34;Home\u0026#34; [posts] other = \u0026#34;Posts\u0026#34; [toc_heading] other = \u0026#34;Table of Contents\u0026#34; [tags] other = \u0026#34;Tags\u0026#34; [categories] other = \u0026#34;Categories\u0026#34; [at] other = \u0026#34;at\u0026#34; [resume] other = \u0026#34;My resume\u0026#34; [navigation] other = \u0026#34;Navigation\u0026#34; [contact_me] other = \u0026#34;Contact me:\u0026#34; [email] other = \u0026#34;Email\u0026#34; [phone] other = \u0026#34;Phone\u0026#34; [newsletter_text] other = \u0026#34;Stay up to date with email notification\u0026#34; [newsletter_input_placeholder] other = \u0026#34;Enter email\u0026#34; [newsletter_warning] other = \u0026#34;By entering your email address, you agree to receive the newsletter of this website.\u0026#34; [submit] other = \u0026#34;Submit\u0026#34; [hugoAttributionText] other = \u0026#34;Powered by\u0026#34; [prev] other = \u0026#34;Prev\u0026#34; [next] other = \u0026#34;Next\u0026#34; [share_on] other = \u0026#34;Share on\u0026#34; [improve_this_page] other = \u0026#34;Improve this page\u0026#34; [out_of] other = \u0026#34;out of\u0026#34; [publications] other = \u0026#34;Publications\u0026#34; [taken_courses] other = \u0026#34;Taken Courses\u0026#34; [course_name] other = \u0026#34;Course Name\u0026#34; [total_credit] other = \u0026#34;Total Credit\u0026#34; [obtained_credit] other = \u0026#34;Obtained Credit\u0026#34; [extracurricular_activities] other = \u0026#34;Extracurricular Activities\u0026#34; [show_more] other = \u0026#34;Show More\u0026#34; [show_less] other = \u0026#34;Show Less\u0026#34; [responsibilities] other = \u0026#34;Responsibilities:\u0026#34; [present] other = \u0026#34;Present\u0026#34; [comments_javascript] other = \u0026#34;Please enable JavaScript to view the\u0026#34; [comments_by] other = \u0026#34;comments powered by\u0026#34; [read] other = \u0026#34;Read\u0026#34; [project_star] other = \u0026#34;Star\u0026#34; [project_details] other = \u0026#34;Details\u0026#34; [err_404] other = \u0026#34;The page you are looking for is not there yet.\u0026#34; [more] other = \u0026#34;More\u0026#34; [view_certificate] other = \u0026#34;View Certificate\u0026#34; [notes] other = \u0026#34;Notes\u0026#34; [disclaimer_text] other = \u0026#34;Liability Notice\u0026#34; [search] other = \u0026#34;Search\u0026#34; [minute] one = \u0026#34;minute\u0026#34; other = \u0026#34;minutes\u0026#34; ","date":"January 15, 2024","hero":"/posts/translation/new-language/hero.jpg","permalink":"http://localhost:1313/es/posts/translation/new-language/","summary":"Si desea traducir a un idioma si soporte, puede traducir los elementos de la interfaz de usuario.\nCrea el archivo i18n Para haerlo, debes crear el directorio i18n dentro de la raíz del sitio, el directorio dónde puede encontrar el archivo config.yaml, y directorios como data, content, etc.\nLuego, puedes crear el archivo \u0026lt;código_del_idioma\u0026gt;.toml dentro del directorio i18n. En este directorio puedes encontrar todos los códigos de idiomas con las banderas que aparecerán junto a ese idioma.","tags":null,"title":"Cómo añadir un idioma sin soporte"},{"categories":null,"contents":"Si las secciones, plantillas y componentes existentes no cumplen con tus necesidades, puedes añadir nuevas secciones, plantillas y componentes a tu sitio web. Esta guía te enseñará cómo añadir una nueva sección a tu sitio.\nPaso 1: Cambia el archivo de Disposición Para añadir una nueva sección a tu sitio, necesitarás crear un archivo de disposicion en el directorio layouts/partials/sections. El archivo debería tener el nombre de la sección. Por ejemplo, si quieres añadir una sección contact con un formulario de contacto, crea un archivo llamado contact.html. Usa la siguiente plantilla para el archivo contact.html:\n{{ $sectionID := replace (lower .section.name) \u0026#34; \u0026#34; \u0026#34;-\u0026#34; }} {{ if .section.id }} {{ $sectionID = .section.id }} {{ end }} \u0026lt;div class=\u0026#34;container anchor p-lg-5 about-section\u0026#34; id=\u0026#34;{{ $sectionID }}\u0026#34;\u0026gt; // Tu código de HTML personalizado \u0026lt;/div\u0026gt; Paso 2: Añade estilo CSS Si necesitas añadir CSS adicional en tu archivo layout modificado, lo puedes hacer añadiendo código CSS al archivo assets/styles/override.scss de tu sitio web. Este archivo es automaticamente cargado por el tema, y aplicará tus estilos personalizados. Si quieres añadir CSS en un archivo separado, pon el CSS dentro de un archivo SCSS en el directorio assets/styles, e incluye en el archivo assets/styles/override.scss la siguiente línea:\n@import \u0026#34;nombre-de-tu-archivo-scss\u0026#34;; Paso 3: Añade JavaScript Si tu archivo de disposición modificado requiere de JavaScript adicional, la manera recomendada es añadir el código de JavaScript en el mismo archivo de disposición con la etiqueta \u0026lt;script\u0026gt;-. Si quieres añadir JavaScript en un archivo separado, pon el archivo dentro del directorio assets/scripts e incluyelo en el archivo de disposición de la siguiente forma:\n{{ $script := resources.Get \u0026#34;scripts/tu-archivo-javacript.js\u0026#34; }} \u0026lt;script src=\u0026#34;{{ $script.RelPermalink }}\u0026#34; integrity=\u0026#34;{{ $script.Data.Integrity }}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; ","date":"January 13, 2024","hero":"/posts/customizing/new-section/hero.png","permalink":"http://localhost:1313/es/posts/customizing/new-section/","summary":"Si las secciones, plantillas y componentes existentes no cumplen con tus necesidades, puedes añadir nuevas secciones, plantillas y componentes a tu sitio web. Esta guía te enseñará cómo añadir una nueva sección a tu sitio.\nPaso 1: Cambia el archivo de Disposición Para añadir una nueva sección a tu sitio, necesitarás crear un archivo de disposicion en el directorio layouts/partials/sections. El archivo debería tener el nombre de la sección. Por ejemplo, si quieres añadir una sección contact con un formulario de contacto, crea un archivo llamado contact.","tags":null,"title":"Añadiendo una nueva Sección"},{"categories":null,"contents":"Este tema te permite personalizar la apariencia de tu sitio y sus componentes sobrescribiendo el CSS predeterminado. Esta guía te enseñará cómo sobrescribir el esquema de colores del tema y la personalización de CSS de componentes individuales.\nEste tema usa Sass para generar el CSS. Si no está familiarizado con Sass, puedes aprender más sobre él aquí.\nSobrescribe las variables de los colores Si quieres cambiar los colores por defecto del tema, pueds sobrescribir las variables de los colores. Para sobrescribir las variables de los colores del tema, necesitarás crear un archivo nombrado variables.scss dentro del directorio assets/styles de tu sitio. Después copia el contenido predeterminado del archivo variables.scss, y ponlo en tu archivo variables.scss. Aquí, solo la sección de $theme predeterminada de variables.scss es mostrada:\n// themes $themes: ( \u0026#39;light\u0026#39;: ( // cyan 600 \u0026#39;accent-color\u0026#39;: #0891b2, // cyan 500 \u0026#39;hover-over-accent-color\u0026#39;: #06b6d4, // zinc 200 \u0026#39;text-over-accent-color\u0026#39;: #e4e4e7, // slate 50 \u0026#39;bg-primary\u0026#39;: #f8fafc, // slate 900 \u0026#39;bg-primary-inverse\u0026#39;: #0f172a, // slate 200 \u0026#39;bg-secondary\u0026#39;: #e2e8f0, \u0026#39;bg-card\u0026#39;: #fff, // slate 800 \u0026#39;heading-color\u0026#39;: #1e293b, // slate 700 \u0026#39;text-color\u0026#39;: #334155, // slate 300 \u0026#39;inverse-text-color\u0026#39;: #cbd5e1, // slate 500 \u0026#39;muted-text-color\u0026#39;: #64748b, // red 600 \u0026#39;inline-code-color\u0026#39;: #dc2626, // amber 200 \u0026#39;highlight-color\u0026#39;: #fde68a, // slate 900 \u0026#39;footer-color\u0026#39;: #0f172a, ), \u0026#39;dark\u0026#39;: ( // cyan 600 \u0026#39;accent-color\u0026#39;: #0891b2, // cyan 500 \u0026#39;hover-over-accent-color\u0026#39;: #06b6d4, // zinc 200 \u0026#39;text-over-accent-color\u0026#39;: #e4e4e7, // gray-800 \u0026#39;bg-primary\u0026#39;: #1f2937, // slate 900 \u0026#39;bg-primary-inverse\u0026#39;: #0f172a, // gray 900 \u0026#39;bg-secondary\u0026#39;: #111827, // slate 800 \u0026#39;bg-card\u0026#39;: #1e293b, // slate 100 \u0026#39;heading-color\u0026#39;: #f1f5f9, // slate 300 \u0026#39;text-color\u0026#39;: #cbd5e1, // slate 900 \u0026#39;inverse-text-color\u0026#39;: #0f172a, // slate 500 \u0026#39;muted-text-color\u0026#39;: #64748b, // red 600 \u0026#39;inline-code-color\u0026#39;: #dc2626, // amber 200 \u0026#39;highlight-color\u0026#39;: #fde68a, // slate 900 \u0026#39;footer-color\u0026#39;: #0f172a, ), ); Los campos light y dark representan los esquemas de color para el modo claro y el modo oscuro, respectivamente. Modificando los códigos de color en estos campos, puedes personalizar la apariencia de su sitio.\nOverride Component CSS Para sobrescribir el CSS de un componente, crea un archivo override.scss dentro del directorio assets/styles. Después, allí pon el nuevo código CSS. No necesitarás reescribir toda la componente de CSS. Puedes poner solo los campos que quieras cambiar.\nPor ejemplo, para deshabilitar el efector de difuminado de la imagen de fondo de la página de inicio, puedes añadir el siguiente código SCSS en el archivo override.scss:\n.home{ .background{ filter: none; } } ","date":"January 13, 2024","hero":"/posts/customizing/customize-css/hero.png","permalink":"http://localhost:1313/es/posts/customizing/customize-css/","summary":"Este tema te permite personalizar la apariencia de tu sitio y sus componentes sobrescribiendo el CSS predeterminado. Esta guía te enseñará cómo sobrescribir el esquema de colores del tema y la personalización de CSS de componentes individuales.\nEste tema usa Sass para generar el CSS. Si no está familiarizado con Sass, puedes aprender más sobre él aquí.\nSobrescribe las variables de los colores Si quieres cambiar los colores por defecto del tema, pueds sobrescribir las variables de los colores.","tags":null,"title":"Personalización del CSS"},{"categories":null,"contents":"Toha V4 ha introducido muchos cambios que pueden romper el tema, es decir, cambian cómo se usa y configura el tema. Esta guía ta ayudará a migrar de la versión del tema v3 a v4. Por favor, compruebe estas release notes para el registro de cambios completo.\nEn esta guía, lo guiaré por los pasos para migrar de la versión 3 a la versión 4 del tema Toha. Esta guía se basa en la guía de migración escrita por Alexandre Neto en este issue. ¡Empecemos!\n1. Borra el submódulo de git toha Toha V4 ha introducido unos cambios en el proceso de instalación. Uno de los cambios es que el tema ya no usa los submódulos de git. Por lo tanto, necesitamos eliminar el submódulo git toha. No te preocupes, este paso no eliminará nada de tu contenido.\ngit rm themes/toha/ git commit -m \u0026#34;Remove v3 theme\u0026#34; 2. Borra theme de config.yaml En la nueva versión, ya no necesitamos especificar theme en el archivo config.yaml. En cambio, necesitaremos añadir el tema como módulo. Por lo tanto, borra la siguiente línea del archivo config.yaml.\ntheme: toha 3. Cumple los requerimentos Para ejecutar el tema localmente, debes tener las siguientes herramientas instaladas.\nVersión Hugo v0.118.x (extended) o posterior. Go language versión v1.18.x o posterior. Versión Node v18.x y versión npm 8.x o posterior. Asegérate de que tienes las herramientas requeridas instaladas con la versión adecuada usando los siguientes comandos.\n4. Initialize Hugo Module Toha V4 usa Hugo Module para manejar el tema. Vamos a usar el módulo de hugo para añadir el tema Toha a nuestro sitio web. Inicializa los módulos de hugo usando el siguiente comando:\nhugo mod init github.com/\u0026lt;su usuario\u0026gt;/\u0026lt;su repositorio\u0026gt; Este comando creará un archivo go.mod a la raíz de su repositorio. Compruebe que el archivo se haya creado correctamente.\n5. Añade el tema como módulo Ahora, añade la siguiente sección module en el archivo config.yaml. Esto añadirá el tema como módulo y lo montará en los archivos estáticos del tema.\n# Usa los modules de Hugo para añadir el tema module: imports: - path: github.com/hugo-toha/toha/v4 mounts: - source: static/files target: static/files - source: ./node_modules/flag-icon-css/flags target: static/flags - source: ./node_modules/@fontsource/mulish/files target: static/files - source: ./node_modules/katex/dist/fonts target: static/fonts 6. Actualiza el archivo config.yaml En la nueva versión, la estructura de configuración de las funcionalidades ha sido restructurada. Asimismo, será necesario actualizar el archivo config.yaml. Como referencia, puede consultar el ejemplo del archivo config.yaml. Aquí resaltaremos las configuraciones más comunes que necesitan cambiarse.\nModo oscuro:\nHemos introducido soporte para un nuevo modo oscuro. Como resultado, ya no necesitamos usar servicios de terceros como darkreader. Para habilitar el nuevo modo oscuro, por favor borra las siguientes líneas de tu archivo config.yaml:\ndarkMode: provider: darkreader enable: true default: system Después, añade las siguientes líneas debajo de la sección params.features:\ndarkMode: enable: true Analíticas:\nHemos reestructurado la configuración de las analíticas, comentarios y proveedores de servicio de soporte. Ahora están puestos debajo del campo services de la sección respectiva.\nAsimismo, tus configuraciones previas de analíticas serán actualizadas de:\nanalytics: enabled: true google: id: UA-XXXXXXXXX-X a:\nanalytics: enable: true services: google: id: UA-XXXXXXXXX-X Comentarios:\nDe la misma forma, tus configuraciones de comentarios se transformarán de:\ncomment: enable: true disqus: shortName: \u0026lt;your-disqus-shortname\u0026gt; a:\ncomment: enable: true services: disqus: shortName: \u0026lt;your-disqus-shortname\u0026gt; Soporte:\nY, las siguientes configuraciones de soporte pasarán de:\nsupport: enabled: true kofi: user: \u0026lt;your ko-fi user id\u0026gt; text: Tip Me textColor: \u0026#39;#f9fafc\u0026#39; backgroundColor: \u0026#39;#248aaa\u0026#39; a:\nsupport: enable: false services: kofi: user: hossainemruz text: Tip Me textColor: \u0026#39;#f9fafc\u0026#39; backgroundColor: \u0026#39;#248aaa\u0026#39; Otros Cambios:\nHay otras opciones que han cambiado. Por ejemplo:\nenableToc: true remplazado por:\ntoc: enable: true Similarmente:\nenableTags: true remplazado por:\ntags: enable: true on_card: true Finalmente,\nshowFlags: true remplazado por:\n# Specify whether to show flag in the language selector. Default is true. flags: enable: true # # If you want to use different country flag for a language, specify them here. # flagOverwrites: # - languageCode: en # countryCode: us Ha habido algunos otros cambios. Consulte el archivo de configuración de muestra config.yaml para obtener más detalles.\n7. Ejecuta el sitio Finalmente, estás listo para ejecutar el tema. Por favor, ejecute los siguientes pasos para crear el sitio:\na. Cargar módulos de Hugo\nhugo mod tidy b. Instalar módulos de Node\nhugo mod npm pack npm install c. Ejecuta el sitio\nhugo server -w Espero que esta guía te haya servido de ayuda con la migración del tema de la versión V3 a V4. Si encuentras algun problema, por favor abre una issue en el repositorio en Github.\n","date":"January 5, 2024","hero":"/posts/update-v3-to-v4/hero.png","permalink":"http://localhost:1313/es/posts/update-v3-to-v4/","summary":"Toha V4 ha introducido muchos cambios que pueden romper el tema, es decir, cambian cómo se usa y configura el tema. Esta guía ta ayudará a migrar de la versión del tema v3 a v4. Por favor, compruebe estas release notes para el registro de cambios completo.\nEn esta guía, lo guiaré por los pasos para migrar de la versión 3 a la versión 4 del tema Toha. Esta guía se basa en la guía de migración escrita por Alexandre Neto en este issue.","tags":null,"title":"Migrar de la versión V3 a V4"},{"categories":null,"contents":"¡Saludos! Gracias por decidirte utilizar este tema. En esta guía, te enseñaré cómo puedes empezar con este tema rápidamente.\nAquí asumiré que quieres empezar de cero una página de Hugo utilizando este tema. Si ya estás usando Hugo para tu sitio, entonces ya sabes cómo utilizar un tema. En este caso, por favor, sigue este repositorio de ejemplo para más información.\nRequisitos Para ejecutar el tema localmente, debes tener las siguientes herramientas instaladas.\nVersión Hugo v0.118.x (extended) o posterior. Go language versión v1.18.x o posterior. Versión Node v18.x y versión npm 8.x o posterior. Asegúrate de que tienes las herramientas requeridas instaladas con la versión adecuada usando los siguientes comandos.\n# Comprobar versión de Hugo ➜ hugo version hugo v0.118.2+extended linux/amd64 BuildDate=unknown # Comprobar versión de Go ➜ go version go version go1.19.4 linux/amd64 # Comprobar versión de Node ➜ node -v v18.12.1 # Comprobar versión de npm ➜ npm -v 8.19.2 Empezando Ahora, volvamos a nuestra misión. Simplemente, siga estos 6 pasos para empezar con tu página.\nPaso 1: Haz un fork del repositorio de ejemplo y renómbralo Al principio, haz fork del repositorio de ejemplo en su cuenta. Después, renombra el repositorio al nombre que desee. Si deseas utilizar Github Pages para desplegar su sitio, entonces renómbralo a \u0026lt;tu usuario\u0026gt;.github.io. El repositorio de ejemplo viene con Github Actions preconfiguradas para publicar el sitio en Github Pages y Netlify.\nPaso 2: Clone su repositorio localmente Una vez haya hecho el fork y cambiado el nombre del repositorio, ahora puede clonar su repositorio en su máquina local para realizar vuestros cambios.\ngit clone git@github.com:\u0026lt;su usuario\u0026gt;/\u0026lt;nombre de su repositorio\u0026gt; Paso 3: Actualiza el archivo del módulo Deberías ver los archivos go.mod y go.sum en la raíz de su repositorio. Actualice la primera línea del archivo go.mod como a continuación:\nmodule github.com/\u0026lt;su usuario\u0026gt;/\u0026lt;nombre de su repositorio\u0026gt; Paso 4: Cambie el archivo config.yaml Ahora, abre el repositorio en un editor y, cambie las siguientes configuraciones en tu archivo config.yaml localizado en la raíz de su repositorio.\nCambia la baseURL Primero, cambia la baseURL a la URL de su sitio web. Si quieres utilizar Github Pages para hostear su sitio, entonces establézcalo como a continuación:\nbaseURL: https://\u0026lt;su usuario\u0026gt;.github.io Cambia el gitRepo Ahora, cambia el campo gitRepo debajo de la sección params para apuntar a su repositorio. Por ejemplo,\ngitRepo: https://github.com/\u0026lt;su usuario\u0026gt;/\u0026lt;su repositorio\u0026gt; Deshabilite analíticas o configúralas adecuadamente El repositorio de ejemplo viene con Google Analytics preconfigurado. El id de las analíticas apunta al sitio original. Entonces, deshabilita las analíticas o configúralas adecuadamente de acuerdo a esta guía.\nPuede deshabilitar las analíticas estableciendo el siguiente campo debajo de la sección params.features:\nanalytics: enabled: false Deshabilite la funcionalidad del boletín informativo El repositorio de ejemplo viene con un servicio de boletín informativo mailchimp preconfigurado. Deshabilítelo estableciendo el siguiente campo debajo de la sección params.footer.\nnewsletter: enable: false Paso 5: Ejecuta el sitio localmente Ahora, ejecuta el siguiente comando para ejecutar su sitio web localmente:\na. Cargar módulos de Hugo\nhugo mod tidy b. Instalar módulos de Node\nhugo mod npm pack npm install c. Ejecutar el sitio web\nhugo server -w Si todo ha ido bien, deberías ver un output similar a este. Ahora, dirígete a localhost:1313 en tu navegador y deberías ver su sitio web ejecutándose.\nPaso 6: Haz un push de tus cambios a Github Si has llegado hasta aquí, significa que su sitio está ejecutándose localmente sin ningún fallo. Vamos a hacer un push de estos cambios a Github.\n# añade todos sus cambios git add . # haz commit de los cambios git commit -m \u0026#34;Initial site setup\u0026#34; -s # haz push de los cambios a Github git push origin HEAD Siguientes pasos Customiza el fondo, logo, y algunas otras cosas de su sitio siguiendo esta guía. Añade su información personal siguiendo esta guía. Añade su información sobre habilidades siguiendo esta guía. Añade su información sobre experiencia siguiendo esta guía. Despliega su sitio web en Github Pages siguiendo esta guía. Despliega su sitio web en Netlify siguiendo esta guía. ","date":"August 9, 2022","hero":"/posts/quickstart/hero.png","permalink":"http://localhost:1313/es/posts/quickstart/","summary":"¡Saludos! Gracias por decidirte utilizar este tema. En esta guía, te enseñaré cómo puedes empezar con este tema rápidamente.\nAquí asumiré que quieres empezar de cero una página de Hugo utilizando este tema. Si ya estás usando Hugo para tu sitio, entonces ya sabes cómo utilizar un tema. En este caso, por favor, sigue este repositorio de ejemplo para más información.\nRequisitos Para ejecutar el tema localmente, debes tener las siguientes herramientas instaladas.","tags":null,"title":"Inicio Rápido"},{"categories":null,"contents":"Para habilitar el modo oscuro en Toha v4.0.0, simplemente establece el campo darkMode.enable a true debajo de la sección params.features dentro del archivo config.yaml. Por ejemplo:\nparams: features: darkMode: enable: true ¡Felicidades! Estas listo. Ahora puedes disfrutar del modo oscuro en tu sitio. El modo oscuro obedecerá a las preferencias del sistema del usuario.\n","date":"June 12, 2022","hero":"/posts/customizing/dark-theme/hero.png","permalink":"http://localhost:1313/es/posts/customizing/dark-theme/","summary":"Para habilitar el modo oscuro en Toha v4.0.0, simplemente establece el campo darkMode.enable a true debajo de la sección params.features dentro del archivo config.yaml. Por ejemplo:\nparams: features: darkMode: enable: true ¡Felicidades! Estas listo. Ahora puedes disfrutar del modo oscuro en tu sitio. El modo oscuro obedecerá a las preferencias del sistema del usuario.","tags":null,"title":"Habilitar Tema Oscuro"},{"categories":null,"contents":"Este tema soporta mermaid, desarrollado por mermaid-js. Para habilitar mermaid para una página, tienes que poner mermaid: true en tu página de front-matter. Por ejemplo, esta página tiene el siguiente front-matter:\ntitle: \u0026#34;Soporte Mermaid\u0026#34; date: 2022-03-14T06:15:35+06:00 menu: sidebar: name: Mermaid identifier: writing-post-mermaid parent: writing-post weight: 60 mermaid: true Después, puede usar el shortcode mermaid para añadir contenido de mermaid. Por ejemplo:\n{{\u0026lt; mermaid align=\u0026#34;center\u0026#34;\u0026gt;}} # su contenido de mermaid aquí {{\u0026lt; /mermaid \u0026gt;}} El shortcode de mermaid acepta los siguientes parámetros:\nalign: Permite alinear el diagrama a la izquierda, derecha o centro. La alineación predeterminada es el centro. background: Permite cambiar el color de fondo del diagrama. Además, también puedes personalizar el tema de tus diagramas, por ejemplo:\n{{\u0026lt; mermaid align=\u0026#34;center\u0026#34; \u0026gt;}} %%{init: {\u0026#39;theme\u0026#39;:\u0026#39;default\u0026#39;}}%% # your mermaid content here {{\u0026lt; mermaid \u0026gt;}} El parámetro theme acepta los siguientes valores:\ndefault neutral dark forest base Ejemplos Aquí hay algunos ejemplos de distintos diagramas usando mermaid.\nGrafo {{\u0026lt; mermaid align=\u0026#34;left\u0026#34; \u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Diagrama de secuencia {{\u0026lt; mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! Diagrama de Gantt {{\u0026lt; mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d {{\u0026lt; /mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d Diagrama de Clases {{\u0026lt; mermaid \u0026gt;}} classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label {{\u0026lt; /mermaid \u0026gt;}} classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label Grafo de Git {{\u0026lt; mermaid background=\u0026#34;black\u0026#34; align=\u0026#34;right\u0026#34; \u0026gt;}} gitGraph: options { \u0026#34;nodeSpacing\u0026#34;: 150, \u0026#34;nodeRadius\u0026#34;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u0026lt; /mermaid \u0026gt;}} gitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch Diagrama Entidad-Relación {{\u0026lt; mermaid \u0026gt;}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses {{\u0026lt; /mermaid \u0026gt;}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ","date":"March 14, 2022","hero":"/posts/writing-posts/mermaid/hero.svg","permalink":"http://localhost:1313/es/posts/writing-posts/mermaid/","summary":"Este tema soporta mermaid, desarrollado por mermaid-js. Para habilitar mermaid para una página, tienes que poner mermaid: true en tu página de front-matter. Por ejemplo, esta página tiene el siguiente front-matter:\ntitle: \u0026#34;Soporte Mermaid\u0026#34; date: 2022-03-14T06:15:35+06:00 menu: sidebar: name: Mermaid identifier: writing-post-mermaid parent: writing-post weight: 60 mermaid: true Después, puede usar el shortcode mermaid para añadir contenido de mermaid. Por ejemplo:\n{{\u0026lt; mermaid align=\u0026#34;center\u0026#34;\u0026gt;}} # su contenido de mermaid aquí {{\u0026lt; /mermaid \u0026gt;}} El shortcode de mermaid acepta los siguientes parámetros:","tags":null,"title":"Soporte Mermaid"},{"categories":null,"contents":"Comentarios Este tema tiene soporte para comentarios en las publicaciones. Actualmente, soporta las siguientes extensiones de comentarios:\nDisqus Valine Utterances Giscus Para una lista completa de las extensiones de comentarios soportadas, puede consultar el archivo de ejemplo config.yaml.\nDisqus Disqus es una extensión de comentarios popular. Después de acceder a Disqus necesitarás proveer tu shortname debajo de la sección params.features de tu archivo config.yaml, como a continuación:\ncomment: enable: true services: disqus: shortName: ejemplo-de-sitio-de-toha Valine Valine resulta ser una extensión de comentarios chino. Puedes habilitar la extensión de comentarios valine añadiendo la sección valine debajo de la sección params.features de tu archivo config.yaml, como a continuación:\ncomment: enable: true services: valine: appId: id-de-la-aplicación appKey: clave-de-la-aplicación avatar: retro placeholder: Comparte tu pensamiento. lang: en recordIP: true enableQQ: true Utterances Para habilitar la extensión de comentarios Utterances, necesitarás ir primero a utteranc.es. En la sección de Configuration, provee la información necesaria. Te dará un script para incluir en tu sitio. Solo necesitarás extraer la información respectiva del script, y proveerla debajo de la sección params.features de tu archivo config.yaml, como a continuación:\ncomment: enable: true services: utteranc: repo: tu-repositorio/nombre issueTerm: title theme: github-light Giscus Giscus está basado en Utterances, pero usa GitHub Discussions como backend. Esto requiere tener un repositorio público, y permitir que la aplicación Giscus use tu repositorio. Las instrucciones de configuración se pueden encontrar en Giscus home page.\nPara habilitar la extensión de comentarios Utterances, necesitarás ir primero a giscus.app. En la sección de Configuration, provee la información necesaria. Te dará un script para incluir en tu sitio. Solo necesitarás extraer la información respectiva del script, y proveerla debajo de la sección params.features de tu archivo config.yaml, como a continuación:\ncomment: enable: true services: giscus: repo: tu-repositorio/nombre repoID: ide-de-tu-repositorio category: tu-categoría categoryID: tu-ide-de-categoría theme: light map: url reaction: 1 metadata: 0 inputPosition: bottom crossOrigin: anonymous ","date":"March 14, 2022","hero":"/posts/comments/hero.svg","permalink":"http://localhost:1313/es/posts/comments/","summary":"Comentarios Este tema tiene soporte para comentarios en las publicaciones. Actualmente, soporta las siguientes extensiones de comentarios:\nDisqus Valine Utterances Giscus Para una lista completa de las extensiones de comentarios soportadas, puede consultar el archivo de ejemplo config.yaml.\nDisqus Disqus es una extensión de comentarios popular. Después de acceder a Disqus necesitarás proveer tu shortname debajo de la sección params.features de tu archivo config.yaml, como a continuación:\ncomment: enable: true services: disqus: shortName: ejemplo-de-sitio-de-toha Valine Valine resulta ser una extensión de comentarios chino.","tags":null,"title":"Comentarios"},{"categories":null,"contents":"Este tema soporta la adición de varios enlaces de soporte/donación en su sitio. Actualmente, los enlaces de soporte admitidos son:\nKo-fi Buy Me a Coffee Para una lista completa de los enlaces de soporte admitidos, puede consultar el archivo de ejemplo config.yaml.\nKo-fi Puedes añadir tu botón flotante Ko-fi en tu sitio web. Para añadir el botón flotante, añade la sección support debajo de la sección params.features del archivo config.yaml.\nsupport: enable: true services: kofi: user: \u0026lt;id de tu usuario de ko-fi\u0026gt; text: Tip Me textColor: \u0026#39;#f9fafc\u0026#39; backgroundColor: \u0026#39;#248aaa\u0026#39; Buy Me a Coffee Puedes añadir tu botón flotante \u0026ldquo;Buy Me a Coffee\u0026rdquo; en tu sitio web. Para añadir el botón flotante, añade la sección support debajo de la sección params.features del archivo config.yaml.\nsupport: enable: true services: buymeacoffee: user: \u0026lt;su usuario de buymeacoffee.com\u0026gt; text: Support me on Buy me a coffee! info: Buy me a coffee! color: \u0026#39;#FFDD00\u0026#39; ","date":"March 14, 2022","hero":"/posts/supports/hero.svg","permalink":"http://localhost:1313/es/posts/supports/","summary":"Este tema soporta la adición de varios enlaces de soporte/donación en su sitio. Actualmente, los enlaces de soporte admitidos son:\nKo-fi Buy Me a Coffee Para una lista completa de los enlaces de soporte admitidos, puede consultar el archivo de ejemplo config.yaml.\nKo-fi Puedes añadir tu botón flotante Ko-fi en tu sitio web. Para añadir el botón flotante, añade la sección support debajo de la sección params.features del archivo config.yaml.","tags":null,"title":"Enlaces de Soporte"},{"categories":null,"contents":"","date":"March 14, 2022","hero":"/posts/external-link/hero.svg","permalink":"http://localhost:1313/es/posts/external-link/","summary":"","tags":null,"title":"Link externo en la barra lateral"},{"categories":null,"contents":" Si personalizas la disposición de un componente existente, no recibirás actualizaciones futuras para ese componente una vez el tema sea actualizado. Necesitarás actualizar ese componente en tu repositorio. En este tutorial, te guiaré en cómo personalizar la disposición de un tema. Yo personalmente he pasado por el proceso y compartiré mis ideas para ponértelo más fácil.\nPaso 1: Cambia el archivo de Disposición Para personalizar la disposición de una sección, página o componente existente, necesitarás localizar el archivo correspondiente en el directorio layout del tema. Una vez encuentre el archivo, cópialo y ponlo en la misma estructura de directorio dentro del directorio layouts de tu sitio.\nPor ejemplo, para personalizar la disposición de la sección sobre mi, sigue estos pasos:\nCopia el archivo about.html del directorio layouts/partials/sections del tema. Pega el archivo en el directorio layouts/partials/sections de tu repositorio. Modifica el archivo about.html para realizar los cambios de diseño deseados para la sección sobre mi. Paso 2: Añade estilo CSS Si necesitas añadir CSS adicional en tu archivo layout modificado, lo puedes hacer añadiendo código CSS al archivo assets/styles/override.scss de tu sitio web. Este archivo es automáticamente cargado por el tema, y aplicará tus estilos personalizados. Si quieres añadir CSS en un archivo separado, pon el CSS dentro de un archivo SCSS en el directorio assets/styles, e incluye en el archivo assets/styles/override.scss la siguiente línea:\n@import \u0026#34;nombre-de-tu-archivo-scss\u0026#34;; Paso 3: Añade JavaScript Si tu archivo de disposición modificado requiere de JavaScript adicional, la manera recomendada es añadir el código de JavaScript en el mismo archivo de disposición con la etiqueta \u0026lt;script\u0026gt;-. Si quieres añadir JavaScript en un archivo separado, pon el archivo dentro del directorio assets/scripts e inclúyelo en el archivo de disposición de la siguiente forma:\n{{ $script := resources.Get \u0026#34;scripts/tu-archivo-javacript.js\u0026#34; }} \u0026lt;script src=\u0026#34;{{ $script.RelPermalink }}\u0026#34; integrity=\u0026#34;{{ $script.Data.Integrity }}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; ","date":"August 7, 2021","hero":"/posts/customizing/customize-layout/hero.png","permalink":"http://localhost:1313/es/posts/customizing/customize-layout/","summary":"Si personalizas la disposición de un componente existente, no recibirás actualizaciones futuras para ese componente una vez el tema sea actualizado. Necesitarás actualizar ese componente en tu repositorio. En este tutorial, te guiaré en cómo personalizar la disposición de un tema. Yo personalmente he pasado por el proceso y compartiré mis ideas para ponértelo más fácil.\nPaso 1: Cambia el archivo de Disposición Para personalizar la disposición de una sección, página o componente existente, necesitarás localizar el archivo correspondiente en el directorio layout del tema.","tags":null,"title":"Personalización de la Disposición"},{"categories":null,"contents":"En esta publicación, vamos a crear un sitio de hugo desde cero. Después, lo configuraremos con el tema Toha, lo haremos plurilingüe, y añadiremos publicaciones de ejemplo. Al final de esta publicación, deberías poder ejecutar un sitio hugo con el tema Toha totalmente funcional localmente.\nSi quieres un atajo, puedes simplemente hacer un fork del repositorio hugo-toha/hugo-toha.github.io, renombrarlo y actualizarlo con tus datos. Este repositorio ya está configurado para el despliegue en Github Pages y Netlify.\nCrea el Repositorio Para empezar, crea un repositorio en Github. Si quieres desplegar este sitio en Github Pages, el nombre de tu repositorio debería ser \u0026lt;su usuario\u0026gt;.github.io. Clona el repositorio en tu máquina local y dirígete hacia él.\nCrea el sitio Ahora, asegúrese que tiene Hugo instalado. Este tema debería funcionar con la versión de hugo v0.118.0 o posterior. Ahora, ejecuta el siguiente comando en la raíz de su repositorio para inicializar un sitio web de hugo.\nhugo new site ./ --format=yaml --force Este comando creará una estructura básica de un sitio de hugo. Aquí, el parámetro -f=yaml indica a hugo que cree el archivo de configuración en el formato YAML, y el parámetro --force fuerza a hugo que cree el sitio aunque el directorio destino no esté vacío. Creará un archivo hugo.yaml que contendrá todas las configuraciones necesarias para su sitio.\nAñade el tema Vamos a usar el módulo de hugo para añadir el tema Toha a nuestro sitio web. Para empezar, inicializa los módulos de hugo usando el siguiente comando:\nhugo mod init github.com/\u0026lt;su usuario\u0026gt;/\u0026lt;su repositorio\u0026gt; Este comando creará un archivo go.mod a la raíz de su repositorio.\nDespués, añade la siguiente sección de módulo en el archivo hugo.yaml:\nmodule: imports: - path: github.com/hugo-toha/toha/v4 mounts: - source: ./node_modules/flag-icon-css/flags target: static/flags - source: ./node_modules/@fontsource/mulish/files target: static/files - source: ./node_modules/katex/dist/fonts target: static/fonts Finalmente, ejecuta los siguientes comandos para descargar el tema y sus dependencias:\n# descargar el tema hugo mod get -u # descargar las dependencias del tema hugo mod tidy # genera dependencias de node hugo mod npm pack # instala dependencias npm install Ejecuta el sitio web localmente Ahora, ya puedes ejecutar tu sitio web localmente. Lo ejecutaremos en modo observador con el siguiente comando:\nhugo server -w Si navega hacia http://localhost:1313, debería ver un sitio web básico con el tema Toha. En la siguiente sección, configuraremos el sitio para que se parezca a hugo-toha.github.io. Como hemos ejecutado el server en modo observador, cualquier cambio que hagamos al sitio, será visible instantáneamente en el navegador.\nConfigura el sitio Ahora, ya estamos preparados para configurar nuestro sitio web. En esta sección, añadiremos la información de autor, diferentes secciones, publicaciones de ejemplo, etc.\nActualiza hugo.yaml Cuando ha creado el sitio usando el comando hugo new site, ha creado un archivo hugo.yaml en la raíz de su repositorio. Substituye el contenido por defecto del archivo hugo.yaml por el siguiente:\nbaseURL: https://hugo-toha.github.io languageCode: en-us title: \u0026#34;John\u0026#39;s Blog\u0026#34; # Utiliza Hugo modules para añadir el tema module: imports: - path: github.com/hugo-toha/toha/v4 mounts: - source: static/files target: static/files - source: ./node_modules/flag-icon-css/flags target: static/flags - source: ./node_modules/@fontsource/mulish/files target: static/files - source: ./node_modules/katex/dist/fonts target: static/fonts # Administrar idiomas # Para más detalles, puedes visitar la documentación oficial de hugo: https://gohugo.io/content-management/multilingual/ languages: es: languageName: Español weight: 1 en: languageName: English weight: 2 # Forzar el uso de una configuración regional, ¡realmente útil para desarrollar la aplicación! # DefaultContentLanguage: bn # Autorizar raw html en markdown markup: goldmark: renderer: unsafe: true tableOfContents: startLevel: 2 endLevel: 6 ordered: false # Al menos HTML y JSON son requeridos por el contenido principal de HTML y búsqueda de Javascript en el lado del cliente. outputs: home: - HTML - RSS - JSON # Habilitar soporte global de emojis enableEmoji: true # Parámetros del sitio params: # URL del repositorio de Github de tu sitio web gitRepo: https://github.com/hugo-toha/hugo-toha.github.io features: # Habilitar sección de portfolio portfolio: enable: true # Habilitar publicaciones de Blog blog: enable: true # Habilitar tabla de contenido en la página de lectura toc: enable: true # Configurar pie de págna footer: enable: true Aquí, está viendo la configuración básica del tema de Toha. Puede ver el archivo de configuración usado en el sitio web de ejemplo aquí. Para más detalles en las opciones de configuración, por favor visite esta publicación.\nAñade datos La mayoría del contenido de este tema es manejado por algún archivo YAML dentro del directorio data. En esta sección, vamos a añadir datos de ejemplo. Ya que estamos construyendo un sitio plurilingüe, vamos a mantener los datos de cada idioma separados en su propio directorio de idioma.\nPara empezar, crea el directorio es dentro del directorio data. Aquí vamos a añadir los datos en el idioma Español.\nInformación del sitio Ahora, crea un sitio site.yaml dentro del directorio /data/es/ de tu repositorio. Añade el siguiente contenido:\n# Aviso de copyright copyright: © 2024 Copyright. # Meta descripción de su sitio. Esto ayudará a los motores de búsqueda a encontrar su sitio. description: Página de ejemplo del tema de hugo Toha. Para ver todas las opciones disponibles para la información del sitio, visite este archivo de ejemplo.\nInformación del Autor Ahora, crea un archivo author.yaml dentro del directorio /data/es/ y añade tu información como a continuación:\n# Alguna información sobre ti name: \u0026#34;John Doe\u0026#34; nickname: \u0026#34;John\u0026#34; # mensaje de saludo antes de tu nombre. El valor predeterminado será \u0026#34;Hi!, I am\u0026#34; si no se proporciona. greeting: \u0026#34;Hola, soy\u0026#34; image: \u0026#34;images/author/john.png\u0026#34; # da tu información de contacto. Se utilizará en el pie de página contactInfo: email: \u0026#34;johndoe@example.com\u0026#34; phone: \u0026#34;+0123456789\u0026#34; github: johndoe linkedin: johndoe # Un pequeño resumen de lo que haces summary: - Soy un desarrollador - Soy un Devops - Me gustan los servers - Trabajo en proyectos de código abierto - Me gusta trabajar en proyectos divertidos Añade secciones Ahora, vamos a añadir distintas secciones en nuestra página de inicio. Al principio, crea un directorio sections dentro de tu directorio /data/es. Aquí añadiremos algunas secciones con configuraciones mínimas. Para ver opciones de configuraciones detalladas para las secciones, por favor, visite aquí.\nSección Sobre mi Crea un archivo about.yaml dentro del directorio /data/es/sections/. Después añade el siguiente contenido:\n# Información de la sección section: name: Sobre mi id: about enable: true weight: 1 showOnNavbar: true # Tu designación designation: Ingeniero de Software # Información de tu empresa company: name: Example Co. url: \u0026#34;https://www.example.com\u0026#34; # tu currículum. Este archivo debe ser relativo a tu directorio \u0026#34;static\u0026#34; resume: \u0026#34;files/resume.pdf\u0026#34; # Un resumen sobre ti summary: \u0026#39;Soy un ingeniero de software apsionado con x años de experiencia. He creado herramientas OSS para [Kubernetes](https://kubernetes.io/) utilizando Go. Mis herramientas ayudan a personas a desplegar sus workloads en Kubernetes. A veces trabajo en projectos divertidos como crear un tema, etc.\u0026#39; # tus links de redes sociales # da tantos como quieras. Utilitza font-awesome para los iconos. socialLinks: - name: Email icon: \u0026#34;fas fa-envelope\u0026#34; url: \u0026#34;example@gmail.com\u0026#34; - name: Github icon: \u0026#34;fab fa-github\u0026#34; url: \u0026#34;https://www.github.com/example\u0026#34; - name: Stackoverflow icon: \u0026#34;fab fa-stack-overflow\u0026#34; url: \u0026#34;#\u0026#34; - name: LinkedIn icon: \u0026#34;fab fa-linkedin\u0026#34; url: \u0026#34;#\u0026#34; - name: Twitter icon: \u0026#34;fab fa-twitter\u0026#34; url: \u0026#34;#\u0026#34; - name: Facebook icon: \u0026#34;fab fa-facebook\u0026#34; url: \u0026#34;#\u0026#34; # competencias sociales # Da un percentaje entre 50 y 100, en intervalos de 5 unidades. # colores soportados: blue, yellow, pink, green, sky, orange. softSkills: - name: Liderazgo percentage: 85 color: blue - name: Trabajo en equipo percentage: 90 color: yellow - name: Comunicación percentage: 85 color: pink - name: Trabajo duro percentage: 85 color: green - name: Aprendizaje rápido percentage: 85 color: sky - name: Solucionador de problemas percentage: 85 color: orange # también puede dar códigos de colores en vez de un nombre de color predeterminado # - name: Example 1 # percentage: 75 # color: \u0026#34;#00adb5\u0026#34; # - name: Example 2 # percentage: 65 # color: \u0026#34;#8b8383\u0026#34; pon el archivo resume.pdf dentro del directorio /static/files de tu repositorio. Puedes encontrar el archivo about.yaml usado en el sitio web de ejemplo aquí.\nAñade las otras secciones Para mantener esta publicación breve, la hemos dividido en distintas publicaciones. A continuación hay la lista de publicaciones que te guiará en cómo configurar las otras secciones.\nConfigurando la sección Sobre mi. Configurando la sección de Educación. Configurando la sección de Experiencia. Configurando la sección de Proyectos. Configurando la sección de Publicaciones Recientes. Configurando la sección de Logros. Configurando la sección de Habilidades. Añade Publicaciones Ahora, ya estamos listos para añadir nuestra primera publicación a nuestro sitio. Aquí, añadiremos esta publicación.\nPara empezar, crea un directorio posts dentro del directorio content de tu sitio. Después, crea un archivo _index.md dentro del directorio posts. Copia el contenido de este archivo y pégalo dentro del archivo _index.md creado recientemente. Crea un directorio introduction dentro del directorio posts. Añade el siguiente hero.svg dentro de tu directorio introduction. Ahora, crea un archivo index.md dentro del directorio introduction. Este index.md tendrá el contenido de la publicación. Añade el siguiente contenido de ejemplo dentro del archivo index.md creado recientemente. Ahora, tu publicación debería aparecer en http://localhost:1313/posts y tu sección Publicaciones Recientes también mostrarán esta tarjeta. Para traducir una publicación, simplemente crea un archivo con el nombre index.\u0026lt;código de idioma\u0026gt;.md en el mismo directorio. Después, añade el contenido traducido ahí.\nPara más publicaciones de ejemplo, por favor, visite aquí.\nSiguientes pasos En este punto, tu sitio debería ser similar al de ejemplo. Ahora, es hora de desplegar tu sitio web. Puedes seguir las siguientes guías de despliegue:\nDespliegue en Github Pages Despliegue en Netlify ","date":"June 8, 2020","hero":"/posts/getting-started/prepare-site/hero.jpg","permalink":"http://localhost:1313/es/posts/getting-started/prepare-site/","summary":"En esta publicación, vamos a crear un sitio de hugo desde cero. Después, lo configuraremos con el tema Toha, lo haremos plurilingüe, y añadiremos publicaciones de ejemplo. Al final de esta publicación, deberías poder ejecutar un sitio hugo con el tema Toha totalmente funcional localmente.\nSi quieres un atajo, puedes simplemente hacer un fork del repositorio hugo-toha/hugo-toha.github.io, renombrarlo y actualizarlo con tus datos. Este repositorio ya está configurado para el despliegue en Github Pages y Netlify.","tags":null,"title":"Prepare su sitio web"},{"categories":null,"contents":"En esta publicación, vamos a desplegar el sitio que hemos creado en la pasada publicación en Github Pages. Para empezar, debemos asegurarnos que el nombre de su repositorio es \u0026lt;tu usuario\u0026gt;.github.io. Después, haz commit de todos los cambios no publicados y haz push a Github.\nCrea una rama gh-pages Para empezar, crea una nueva rama llamada gh-pages. Github automáticamente establecerá las respectivas configuraciones para Github pages cuando vea la rama con este nombre.\n# crea la rama gh-pages $ git checkout -b gh-pages # hace push de la rama source a Github $ git push gh-pages gh-pages Habilite Github Action Vamos a automatizar el proceso de despliegue usando Github Actions. En un principio, asegúrese de que Github Action esté habilitado en su repositorio. Vaya a Settings \u0026gt; Actions de su repositorio y asegúrese de que Action permissions esté en modo Allow all actions. Aquí hay una captura de pantalla de la configuración respectiva:\nAñade un Workflow Usaremos la acción peaceiris/actions-hugo para inicializar hugo y peaceiris/actions-gh-pages para desplegar el sitio web. Crea un directorio .github en la raíz de tu repositorio. Después, crea un directorio workflows dentro del directorio .github. Finalmente, crea un archivo deploy-site.yaml dentro del directorio workflows y añade el siguiente contenido:\nname: Deploy to Github Pages # se ejecuta cuando un commit es pusheado a la rama \u0026#34;source\u0026#34; on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: # checkout del commit que ha sido pusheado - uses: actions/checkout@v3 - name: Setup Hugo uses: peaceiris/actions-hugo@v2.6.0 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Update Hugo Modules run: hugo mod tidy - name: Setup Node uses: actions/setup-node@v3 with: node-version: 18 - name: Install node modules run: | hugo mod npm pack npm install - name: Build run: hugo --minify # hace push del contenido generado a la rama `gh-pages`. - name: Deploy uses: peaceiris/actions-gh-pages@v3.9.0 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-pages publish_dir: ./public Esta acción se ejecutará en cada push de la rama main. Se creará el sitio web y hará un commit a la rama gh-pages con el contenido generado.\nDespliegue Si ha seguido la guía adecuadamente, su sitio debería estar listo para el despliegue en Github Pages. Ahora, si haces un push de cualquier commit a tu rama main, se empezará una Github Action y se desplegará su sitio web automáticamente.\nHaz push de un commit a la rama main y vaya a la pestaña Actions de su repositorio para verificar que la acción ha empezado.\nAhora, espere que las acciones se completen. Si se han completado correctamente, debería ver un tick verde indicado que se han ejecutado correctamente.\nUna vez la Github Action se ha completado correctamente, puede navegar a su sitio web en https://\u0026lt;su usuario\u0026gt;.github.io.\nAñade un dominio personalizado Si posee un dominio y desea utilizarlo en este sitio web, vaya al sitio web de su proveedor del dominio. Ahí, añade los siguientes Resource Records:\n@ 3600 IN A 185.199.108.153 @ 3600 IN A 185.199.109.153 @ 3600 IN A 185.199.110.153 @ 3600 IN A 185.199.111.153 WWW 3600 IN A 185.199.108.153 WWW 3600 IN A 185.199.109.153 WWW 3600 IN A 185.199.110.153 WWW 3600 IN A 185.199.111.153 Para verificar que su dominio y asegurarse que nadie de Github pueda usarlo excepto tu, puedes seguir los pasos en esta guía.\nFinalemente, crea un archivo CNAME dentro del directorio /static de tu repositorio. Ahí añade tu dominio:\nexample.com Una vez que la Github Action se haya completado correctamente, puede navegar a su sitio web en https://\u0026lt;su dominio\u0026gt;.\nTen en cuenta que navegando a https://\u0026lt;su usuario\u0026gt;.github.io será redirigido automáticamente a https://\u0026lt;su dominio\u0026gt;.\n","date":"June 8, 2020","hero":"/posts/getting-started/github-pages/hero.jpg","permalink":"http://localhost:1313/es/posts/getting-started/github-pages/","summary":"En esta publicación, vamos a desplegar el sitio que hemos creado en la pasada publicación en Github Pages. Para empezar, debemos asegurarnos que el nombre de su repositorio es \u0026lt;tu usuario\u0026gt;.github.io. Después, haz commit de todos los cambios no publicados y haz push a Github.\nCrea una rama gh-pages Para empezar, crea una nueva rama llamada gh-pages. Github automáticamente establecerá las respectivas configuraciones para Github pages cuando vea la rama con este nombre.","tags":null,"title":"Despliegue el sitio en Github Pages"},{"categories":null,"contents":"Netlify ofrece un excelente y fácil proceso para desplegar un sitio de hugo estático. Puedes desplegar su sitio web en cuestión de unos solos clics. A diferencia de Github Pages, puedes nombrar su repositorio como quieras. También puede personalizar el URL del sitio.\nEn esta publicación, mostraremos paso a paso el proceso de despliegue de un sitio hugo con netlify.\nAñade configuración de Netlify Para empezar, cree un archivo netlify.toml a la raíz de su repositorio y añade las siguientes configuraciones:\n[build] command = \u0026#34;hugo --gc --minify\u0026#34; publish = \u0026#34;public\u0026#34; [context.production.environment] HUGO_ENABLEGITINFO = \u0026#34;true\u0026#34; HUGO_ENV = \u0026#34;production\u0026#34; HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.split1] command = \u0026#34;hugo mod tidy \u0026amp;\u0026amp; hugo mod npm pack \u0026amp;\u0026amp; npm install \u0026amp;\u0026amp; hugo --gc --minify --enableGitInfo\u0026#34; [context.split1.environment] HUGO_ENV = \u0026#34;production\u0026#34; HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.deploy-preview] command = \u0026#34;hugo mod tidy \u0026amp;\u0026amp; hugo mod npm pack \u0026amp;\u0026amp; npm install \u0026amp;\u0026amp; hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL\u0026#34; [context.deploy-preview.environment] HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.branch-deploy] command = \u0026#34;hugo mod tidy \u0026amp;\u0026amp; hugo mod npm pack \u0026amp;\u0026amp; npm install \u0026amp;\u0026amp; hugo --gc --minify -b $DEPLOY_PRIME_URL\u0026#34; [context.branch-deploy.environment] HUGO_VERSION = \u0026#34;0.120.1\u0026#34; NODE_VERSION = \u0026#34;v18.12.1\u0026#34; NPM_VERSION = \u0026#34;8.19.2\u0026#34; [context.next.environment] HUGO_ENABLEGITINFO = \u0026#34;true\u0026#34; Haz commit y haz push del archivo netlify.toml en Github. Ahora, está listo para desplegar su sitio con netlify.\nDespliegue el sitio Ahora, accede a netlify. Después, vaya a la pestaña Sites del panel de netlify y pulsa el botón New site from Git.\nAparecerá una nueva ventana. Seleccione Github y autentificate con tu cuenta de Github.\nDespués de la autentificación, le pedirá que seleccione el repositorio deseado. Seleccione el repositorio que está usando para su sitio web.\nAhora, netlify te llevará a la página de despliegue. Seleccione la rama que quieres desplegar. Netlify debería completar automáticamente los campos obligatorios del archivo netlify.toml que creó anteriormente en esta publicación. Cuando estés satisfecho con las configuraciones, pulse el botón Deploy.\nAhora, netlify empezará a publicar su sitio web inmediatamente. Espera que el proceso de publicación se complete. Una vez el sitio se halla publicado, puede navegar a su sitio en el URL generado automáticamente por netlify. Este URL autogenerado ha sido apuntado por un rectángulo rojo en la captura de pantalla de abajo.\nPersonaliza la URL Puede personalizar fácilmente la URL de tu sitio con unos pocos clics mostrados a continuación.\nPulsa el botón Domain Setting debajo de la pestaña Site Overview. Ahora, puede añadir tu dominio personal pulsando el botón Add custom domain, o puede usar el dominio \u0026lt;su prefijo personalizado\u0026gt;.netlify.app. Aquí vamos con lo último. Haga clic en options y seleccione Edit site name. Después, da el nombre que quieras a tu sitio web. Una vez haya guardado el nombre nuevo, verá que el URL de su sitio web se ha actualizado instantáneamente. Ahora, puede navegar a su sitio web con la nueva URL. ","date":"June 8, 2020","hero":"/posts/getting-started/netlify/hero.png","permalink":"http://localhost:1313/es/posts/getting-started/netlify/","summary":"Netlify ofrece un excelente y fácil proceso para desplegar un sitio de hugo estático. Puedes desplegar su sitio web en cuestión de unos solos clics. A diferencia de Github Pages, puedes nombrar su repositorio como quieras. También puede personalizar el URL del sitio.\nEn esta publicación, mostraremos paso a paso el proceso de despliegue de un sitio hugo con netlify.\nAñade configuración de Netlify Para empezar, cree un archivo netlify.toml a la raíz de su repositorio y añade las siguientes configuraciones:","tags":null,"title":"Despliegue el sitio en Netlify"},{"categories":null,"contents":"Para garantizar que su sitio se beneficie de las funciones y correcciones más recientes, es fundamental mantenerlo actualizado con la última versión del tema. Este artículo te guiará a través del proceso de establecimiento de un GitHub workflow que actualizará automáticamente la versión del tema. Esta acción realizará comprobaciones diarias de cualquier actualización del tema. Si se detecta una actualización, se generará un Pull Request para actualizar su sitio a la versión más reciente del tema.\nConfigurando Github Workflow Ahora, crea un archivo theme-update.yml dentro del directorio .github/workflows de tu repositorio con el siguiente contenido:\nname: \u0026#34;Theme Update\u0026#34; on: schedule: - cron: \u0026#34;0 0 * * *\u0026#34; jobs: update-theme: runs-on: ubuntu-latest steps: - uses: actions/checkout@v4.1.1 with: ref: main - name: Setup Node uses: actions/setup-node@v4 with: node-version: 18 - name: Setup Hugo uses: peaceiris/actions-hugo@v2.6.0 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Update hugo modules run: | # update to latest version of all modules hugo mod get -u # update the npm dependencies hugo mod npm pack # cleanup go.sum file hugo mod tidy - name: Install node modules run: npm install - name: Build run: | # build the site hugo --minify # remove file generated by the build rm -rf public/ - name: Create Pull Request uses: peter-evans/create-pull-request@v5 with: base: main title: Update theme labels: automerge Ahora está listo. De hora en adelante, esta acción se ejecutará diariamente y generará un Pull Request si se detecta alguna actualización del tema.\n","date":"June 8, 2020","hero":"/posts/getting-started/theme-update/hero.svg","permalink":"http://localhost:1313/es/posts/getting-started/theme-update/","summary":"Para garantizar que su sitio se beneficie de las funciones y correcciones más recientes, es fundamental mantenerlo actualizado con la última versión del tema. Este artículo te guiará a través del proceso de establecimiento de un GitHub workflow que actualizará automáticamente la versión del tema. Esta acción realizará comprobaciones diarias de cualquier actualización del tema. Si se detecta una actualización, se generará un Pull Request para actualizar su sitio a la versión más reciente del tema.","tags":null,"title":"Automatiza las actualizaciones del tema"},{"categories":null,"contents":"Enlace de prueba\nEste tema ha sido diseñado desde un punto de preferencia personal. Como desarrollador, quiero organizar mi portfolio de manera que refleje de la mejor manera mis habilidades. Entonces, este tema puede o no satisfacer sus necesidades, pero estaré encantado de tener tu feedback.\nEsta publicación daré una descripción general de las características que este tema incorpora.\nDiseño minimalista Este tema ha sido diseñado con la intención de ser minimalista y hermoso. El esquema de colores ha sido escogido para ser simple pero potente. Esta página de publicación ha sido diseñada para tener las menos distracciones posibles. Gracias a Anup Deb por su guía en el diseño.\nReceptivo El tema es completamente receptivo. Tiene una estética hermosa, y consistente en los dispositivos de Sobremesa, Portátiles, Tablet y Móviles.\nTarjetas diseñadas cuidadosamente Las tarjetas de habilidades y proyectos han sido diseñadas cuidadosamente para dar información significativa. Las tarjetas de habilidades no solo enumeran las habilidades. También dan al visitante una idea sobre el conocimiento de una habilidad particular. Las tarjetas de proyectos dan una idea sobre la popularidad de su proyecto si es un proyecto de código abierto en Github.\nUna cronología de experiencias que realmente representa tus experiencias La cronología de experiencias ha sido diseñada para reflejar su experiencia profesional. Muestra las responsabilidades que ha manejado en las distintas etapas de su carrera.\nUna galería para mostrar sus logros La sección de galería te permite mostrar tus logros al público.\nUna barra lateral con sentido ¿Alguna vez pasaste mucho tiempo buscando una publicación en particular en un blog? Yo también lo hice. Este tema incorpora un menú de barra lateral que clasifica sus publicaciones en varias categorías y subcategorías.\nPersonalización \u0026amp; Extensibilidad Es fácil customizar el tema sin cambiar el código del tema. Ha sido diseñado para ser extensible y personalizado. Puedes añadir fácilmente una nueva sección o sobrescribir el CSS de cualquier sección existente si alterar el tema.\n¿Aún no cumples con tus requisitos? Presenta una solicitud de función aquí.\nSoporte de múltiples idiomas Este tema tiene soporte integrado para varios idiomas. Puede traducir su contenido a varios idiomas fácilmente para una mejor accesibilidad.\n","date":"June 8, 2020","hero":"/posts/features/hero.png","permalink":"http://localhost:1313/es/posts/features/","summary":"Enlace de prueba\nEste tema ha sido diseñado desde un punto de preferencia personal. Como desarrollador, quiero organizar mi portfolio de manera que refleje de la mejor manera mis habilidades. Entonces, este tema puede o no satisfacer sus necesidades, pero estaré encantado de tener tu feedback.\nEsta publicación daré una descripción general de las características que este tema incorpora.\nDiseño minimalista Este tema ha sido diseñado con la intención de ser minimalista y hermoso.","tags":null,"title":"Características"},{"categories":null,"contents":"Esta es una publicación de ejemplo con el objetivo de testear lo siguiente:\nImagen de hero determinada. Los distintos shortcodes. Alerta Las siguientes alertas están disponibles en este tema.\nÉxito Código:\n{{\u0026lt; alert type=\u0026#34;success\u0026#34; \u0026gt;}} Esto es un ejemplo de alerta con `type=\u0026#34;success\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Resultado:\nEsto es un ejemplo de alerta con type=\u0026quot;success\u0026quot;. Peligro Código:\n{{\u0026lt; alert type=\u0026#34;danger\u0026#34; \u0026gt;}} Esto es un ejemplo de alerta con `type=\u0026#34;danger\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Resultado:\nEsto es un ejemplo de alerta con type=\u0026quot;danger\u0026quot;. Advertencia Código:\n{{\u0026lt; alert type=\u0026#34;warning\u0026#34; \u0026gt;}} Esto es un ejemplo de alerta con `type=\u0026#34;warning\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Resultado:\nEsto es un ejemplo de alerta con type=\u0026quot;warning\u0026quot;. Inforamación Código:\n{{\u0026lt; alert type=\u0026#34;info\u0026#34; \u0026gt;}} Esto es un ejemplo de alerta con `type=\u0026#34;info\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Resultado:\nEsto es un ejemplo de alerta con type=\u0026quot;info\u0026quot;. Imagen Una imagen de ejemplo sin ningún atributo. Código:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; title=\u0026#34;Una barca en el mar\u0026#34; \u0026gt;}} Resultado:\nUna imagen de ejemplo con los atributos height y width. Código:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; height=\u0026#34;400\u0026#34; width=\u0026#34;600\u0026#34; title=\u0026#34;Una barca en el mar\u0026#34; \u0026gt;}} Resultado:\nUna imagen de ejemplo centrada con los atributos height y width. Código:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; height=\u0026#34;400\u0026#34; width=\u0026#34;600\u0026#34; align=\u0026#34;center\u0026#34; title=\u0026#34;Una barca en el mar\u0026#34; \u0026gt;}} Resultado:\nUna imagen de ejemplo con el atributo float. Código:\n{{\u0026lt; img src=\u0026#34;/posts/shortcodes/boat.jpg\u0026#34; height=\u0026#34;200\u0026#34; width=\u0026#34;500\u0026#34; float=\u0026#34;right\u0026#34; title=\u0026#34;Una barca en el mar\u0026#34; \u0026gt;}} Resultado:\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nDivisión Este tema soporta dividir la página en tantas columnas como desee.\nDivisión en dos columnas Código:\n{{\u0026lt; split 6 6 \u0026gt;}} ##### Columna Izquierda Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. --- ##### Columna Derecha Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. {{\u0026lt; /split \u0026gt;}} Resultado:\nColumna Izquierda Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nColumna Derecha Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nDivisión en tres columnas Código:\n{{\u0026lt; split 4 4 4 \u0026gt;}} ##### Columna Izquierda Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. --- ##### Columna Central Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum. --- ##### Columna Derecha Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. {{\u0026lt; /split \u0026gt;}} Resultado:\nColumna Izquierda Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nColumna Central Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.\nColumna Derecha Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nEspacio Vertical Da espacio vertical entre dos líneas.\nCódigo:\nEsta es la primera línea. {{\u0026lt; vs 4\u0026gt;}} This is line two. It should have `4rem` vertical space with previous line. Esta es la segunda línea. Debería tener un espacio vertical `4rem` con la línea previa. Resultado:\nEsta es la primera línea. Esta es la segunda línea. Debería tener un espacio vertical 4rem con la línea previa.\nVídeo Código:\n{{\u0026lt; video src=\u0026#34;/videos/sample.mp4\u0026#34; \u0026gt;}} Resultado:\nVideo por Rahul Sharma de Pexels.\n","date":"June 8, 2020","hero":"/posts/shortcodes/boat.jpg","permalink":"http://localhost:1313/es/posts/shortcodes/","summary":"Esta es una publicación de ejemplo con el objetivo de testear lo siguiente:\nImagen de hero determinada. Los distintos shortcodes. Alerta Las siguientes alertas están disponibles en este tema.\nÉxito Código:\n{{\u0026lt; alert type=\u0026#34;success\u0026#34; \u0026gt;}} Esto es un ejemplo de alerta con `type=\u0026#34;success\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Resultado:\nEsto es un ejemplo de alerta con type=\u0026quot;success\u0026quot;. Peligro Código:\n{{\u0026lt; alert type=\u0026#34;danger\u0026#34; \u0026gt;}} Esto es un ejemplo de alerta con `type=\u0026#34;danger\u0026#34;`. {{\u0026lt; /alert \u0026gt;}} Resultado:","tags":null,"title":"Los Shortcodes"},{"categories":null,"contents":"Después de instalar este tema, cuando ejecutas tu sitio web por primera vez, se iniciará con los parámetros predeterminados. Debería parecerse a este sitio de ejemplo, pero sin secciones en la página de inicio. No te preocupes, puede añadir estas secciones proporcionando los archivos de datos necesarios.\nEn las próximas publicaciones, le guiaré sobre cómo añadir estas secciones y personalizar tu sitio web. Pero primero, empezaremos cambiando los parámetros del sitio. Puedes modificar el fondo, el logo, la información del autor y habilitar/deshabilitar varias funcionalidades.\nPara obtener una lista completa de los parámetros de configuración disponibles, consulte el sitio de ejemplo.\nAñade un Fondo Para empezar, vamos a establecer un fondo para tu sitio web. Pon la imagen de fondo que desee en el directorio assets/images. Después, añade lo siguiente en la sección params del archivo config.yaml.\nbackground: \u0026#34;images/nombre_de_tu_imagen_de_fondo.jpg\u0026#34; Añade un Logo Para añadir logos para tu sitio, necesitas dos logos diferentes: uno para la barra de navegación transparente, y otro para la barra de navegación no-transparente. Pon tus logos dentro del directorio assets/images y añade las siguientes líneas debajo de la sección params del archivo config.yaml.\n# El logo invertido será usado para la barra de navegación transparente. # El logo principal será usado para la barra de navegación no-transparente. logo: main: images/logo-principal.png inverted: images/logo-invertido.png favicon: images/favicon.png Habilita publicaciones del Blog Para habilitar publicaciones de blog en tu sitio web, necesitarás aplicar unos cambios en el archivo config.yaml. Localiza la sección params.features y añada el siguiente código.\n# Habilita y configura publicaciones de Blog blog: enable: true showAuthor: true # muestra el autor de la publicación (por defecto: true) Habilita Tabla de Contenido Ahora, si quiere mostrar la sección Tabla de Contenido en tu publicación de blog, tienes que habilitarlo en la sección params.features del archivo config.yaml.\ntoc: enable: true También puedes controlar los niveles de tu Tabla de Contenido añadiendo la siguiente configuración en la sección de markup de tu archivo config.yaml.\nmarkup: tableOfContents: startLevel: 2 endLevel: 6 ordered: false Aquí, hemos configurado nuestra Tabla de Contenido para mostrar todos los encabezados desde h2 hasta h6.\nHabilita el botón \u0026lt;Mejorar esta página\u0026gt; Si quieres permitir que los lectores mejoren fácilmente una publicación haciendo correcciones como faltas de ortografía o identación, puedes habilitar el botón \u0026lt;Mejorar esta página\u0026gt;. Para hacerlo, añada su URL del repositorio de git en la sección params del archivo config.yaml.\ngitRepo: \u0026lt;URL de tu repositorio de Github del sitio\u0026gt; Esto añadirá un botón con la etiqueta Mejorar esta página al final de cada publicación de blog. El botón dirigirá al usuario directamente a la página de edición respectiva en Github.\nSi tu rama por defecto no tiene el nombre de main, necesitarás especificar tu rama por defecto de git en la sección params en el archivo config.yaml.\ngitBranch: \u0026lt;nombre de tu rama por defecto de git\u0026gt; Habilita Boletín Informativo Para habilitar la funcionalidad de boletín informativo, necesitarás proveer los parámetros necesarios debajo de la sección params.footer en el archivo config.yaml. Ahora mismo, el boletín informativo solo es soportado por el proveedor Mailchimp. Aquí hay un ejemplo de cómo debería ser:\nnewsletter: enable: true provider: mailchimp mailchimpURL: https://github.us1.list-manage.com/subscribe/post?u=19de52a4603135aae97163fd8\u0026amp;amp;id=094a24c76e Para deshabilitar la funcionalidad del boletín informativo, puedes establecerlo con la siguiente configuración.\nnewsletter: enable: false Habilita RAW HTML en los archivos de Markdown Si quiere incluir RAW HTML en tus archivos de markdown, necesitarás habilitar el rendering inseguro. Sin habilitarlo, Hugo no podrá renderizar HTML. Para habilitar rendering inseguro de markdown, añade la siguiente configuración de goldmark en la sección markup del archivo config.yaml.\nmarkup: goldmark: renderer: unsafe: true Añade información del autor Ahora, crea un archivo author.yaml dentro del directorio /data/es/ y añade tu información como a continuación:\n# Alguna información sobre ti name: \u0026#34;Jane Doe\u0026#34; nickname: \u0026#34;Jane\u0026#34; image: \u0026#34;images/avatar.png\u0026#34; # mensaje de saludo antes de tu nombre. El valor predeterminado será \u0026#34;Hi!, I am\u0026#34; si no se proporciona. greeting: \u0026#34;Hola, soy\u0026#34; # da tu información de contacto. Se utilizará en el pie de página contactInfo: email: \u0026#34;janedoe@example.com\u0026#34; phone: \u0026#34;+0123456789\u0026#34; stack-overflow: icon: stack-overflow url: \u0026#34;https://stackoverflow.com/users/1/exampleUser\u0026#34; text: \u0026#34;ExampleUser\u0026#34; # Un pequeño resumen de lo que haces summary: - Soy un desarrollador - Trabajo con Go - Me gusta trabajar en proyectos divertidos Nota: Los parámetros de contactInfo usarán el campo icon para buscar el respectivo icono. Asegúrese que el campo icon coincide con los nombres de la fuente awesome. Puedes encontrar ejemplos aquí.\nAñade un aviso de derechos de autor Para añadir un aviso de derechos de autor en tu sitio, crea un archivo site.yaml dentro del directorio /data/es. Añada la siguiente sección al archivo:\ncopyright: © 2024 Copyright. Descripción del sitio Para añadir una descripción de tu sitio web que ayudará a los motores de búsqueda a encontrar tu sitio, necesitarás añadir una sección de description en tu archivo site.yaml.\n# Meta descripción de su sitio. Esto ayudará a los motores de búsqueda a encontrar su sitio. description: Página de ejemplo del tema de hugo Toha. Añade Menús personalizados Para añadir menús personalizados en la barra de navegación, puedes modificar el archivo site.yaml. Por defecto, los menús personalizados son visibles en la barra de navegación. Para esconder un menú personalizado, establece la propiedad hideFromNavbar a true. Por defecto, los menús personalizados están ocultos del área del pie de página. Para mostrar un elemento de menú personalizado en el pie de página, establece la propiedad showOnFooter a true. Esto es particularmente útil cuando desea añadir un enlace a otro sitio en la barra de navegación.\ncustomMenus: - name: Notes url: https://hossainemruz.gitbook.io/notes/ hideFromNavbar: false showOnFooter: true Ahora, puedes ejecutar tu sitio y ver los cambios. En las siguientes publicaciones, te guiaré en cómo añadir secciones a tu página de inicio y personalizar aún más su sitio.\n","date":"June 8, 2020","hero":"/posts/configuration/site-parameters/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/site-parameters/","summary":"Después de instalar este tema, cuando ejecutas tu sitio web por primera vez, se iniciará con los parámetros predeterminados. Debería parecerse a este sitio de ejemplo, pero sin secciones en la página de inicio. No te preocupes, puede añadir estas secciones proporcionando los archivos de datos necesarios.\nEn las próximas publicaciones, le guiaré sobre cómo añadir estas secciones y personalizar tu sitio web. Pero primero, empezaremos cambiando los parámetros del sitio.","tags":null,"title":"Configurando parámetros del sitio web"},{"categories":null,"contents":"El propósito de la sección Sobre mi es proveer una breve introducción sobre ti en tu sitio web. En esta publicación, te guiaré en cómo configurar la sección Sobre mi. Para obtener una referencia completa, consulte el archivo de ejemplo about.yaml.\nPara empezar, crea un archivo about.yaml dentro del directorio data/es/sections de tu sitio web. Después sigue las instrucciones de abajo.\nAñade la información de la sección section: name: Sobre mi # Título de la sección (predeterminado: \u0026#34;\u0026#34;) id: about # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 1 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación template: sections/about.html # Permite apuntar a una plantilla específica Configuración de la plantilla Tienes la opción de personalizar el \u0026ldquo;partial\u0026rdquo; usado para esta sección especificando la propiedad template. Simplemente, guarde la nueva plantilla en el directorio layout/partials.\nAñade tu información de trabajo Para incluir detalles sobre tu trabajo actual, puedes añadir la siguiente sección en el archivo about.yaml:\n# Tu designación designation: Ingeniero de Software # Información de tu empresa company: name: Example Co. url: \u0026#34;https://www.example.com\u0026#34; Añade un resumen sobre ti Para proporcionar una descripción general concisa de su experiencia profesional, añadimos una sección de resumen. Esto les dará a los visitantes una idea rápida de lo que haces. Añade la siguiente sección al archivo about.yaml:\n# Un resumen sobre ti summary: \u0026#39;Soy un ingeniero de software apsionado con x años de experiencia. He creado herramientas OSS para [Kubernetes](https://kubernetes.io/) utilizando Go. Mis herramientas ayudan a personas a desplegar sus workloads en Kubernetes. A veces trabajo en projectos divertidos como crear un tema, etc.\u0026#39; Intenta que sea lo más breve posible. No lo hagas demasiado largo. Tenemos otras secciones que brindan más información sobre su experiencia.\nPuedes usar la sintáctica de markdown en el campo summary.\nAñade tus links de redes sociales Para añadir enlaces de tus perfiles de plataformas como LinkedIn, Twitter y Github, incluye esta sección socialLinks en tu archivo about.yaml.\n# tus links de redes sociales # da tantos como quieras. Utilitza font-awesome para los iconos. socialLinks: - name: Email icon: \u0026#34;fas fa-envelope\u0026#34; url: \u0026#34;example@gmail.com\u0026#34; - name: Github icon: \u0026#34;fab fa-github\u0026#34; url: \u0026#34;https://www.github.com/example\u0026#34; - name: Stackoverflow icon: \u0026#34;fab fa-stack-overflow\u0026#34; url: \u0026#34;#\u0026#34; - name: LinkedIn icon: \u0026#34;fab fa-linkedin\u0026#34; url: \u0026#34;#\u0026#34; - name: Twitter icon: \u0026#34;fab fa-twitter\u0026#34; url: \u0026#34;#\u0026#34; - name: Facebook icon: \u0026#34;fab fa-facebook\u0026#34; url: \u0026#34;#\u0026#34; Puedes usar cualquier icono gratis de Font Awesome en este campo.\nAñade un Currículum Para añadir un currículum, pon tu archivo PDF dentro del directorio files localizado dentro del directorio static. Después incluye la siguiente sección en el archivo about.yaml:\n# tu currículum. Este archivo debe ser relativo a tu directorio \u0026#34;static\u0026#34; resourceLinks: - title: \u0026#34;Mi Curríulum\u0026#34; url: \u0026#34;files/curriculum.pdf\u0026#34; Añade tus competencias sociales Ahora, vamos a añadir tus competencias sociales y un indicador para diversas habilidades sociales como liderazgo, comunicación, trabajo en equipo, etc. Incluye la siguiente sección dentro del archivo about.yaml:\n# Muestra tus certificaciones # Puedes mostrar tus certificaciones verificables de https://www.credly.com. # También puedes mostrar una barra circular indicando el nivel de experiencia en una habilidad determinada badges: - type: certification name: Especialista Certificado de Seguridad de Kubernetes url: \u0026#34;https://www.credly.com/org/the-linux-foundation/badge/exam-developer-certified-kubernetes-security-specialist\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/f4bf92ed-8985-40b2-bc07-2f9308780854/kubernetes-security-specialist-logo-examdev.png\u0026#34; - type: certification name: Istio and IBM Cloud Kubernetes Service url: \u0026#34;https://www.credly.com/org/the-linux-foundation/badge/exam-developer-certified-kubernetes-security-specialist\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/8d34d489-84bf-4861-a4a0-9e9d68318c5c/Beyond_basics_of_Istio_on_Cloud_v2.png\u0026#34; - type: certification name: Inteligencia Artificial y Aprendizaje Automático url: \u0026#34;https://www.credly.com/org/grupo-bancolombia/badge/artificial-intelligence-and-machine-learning\u0026#34; badge: \u0026#34;https://images.credly.com/size/680x680/images/e027514f-9d07-4b29-862f-fe21a8aaebf1/ae.png\u0026#34; - name: Liderazgo percentage: 85 color: blue - name: Trabajo en equipo percentage: 90 color: yellow - name: Comunicación percentage: 85 color: pink Actualmente, el porcentaje de habilidades debe estar entre 0 y 100 y debe ser divisible por 5. Los siguientes colores están disponibles para el indicador de porcentaje de habilidades,\nblue yellow pink green sky orange También puedes usar cualquier código de color HEX en el campo color.\nLa siguiente imagen muestra cómo el contenido de about.yaml está distribuido en la sección Sobre mi. (La porción de configuración de la imagen está obsoleta y la sección de habilidades sociales han sido reemplazadas por certificaciones)\n","date":"June 8, 2020","hero":"/posts/configuration/sections/about/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/about/","summary":"El propósito de la sección Sobre mi es proveer una breve introducción sobre ti en tu sitio web. En esta publicación, te guiaré en cómo configurar la sección Sobre mi. Para obtener una referencia completa, consulte el archivo de ejemplo about.yaml.\nPara empezar, crea un archivo about.yaml dentro del directorio data/es/sections de tu sitio web. Después sigue las instrucciones de abajo.\nAñade la información de la sección section: name: Sobre mi # Título de la sección (predeterminado: \u0026#34;\u0026#34;) id: about # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 1 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación template: sections/about.","tags":null,"title":"Configurando la sección Sobre mi"},{"categories":null,"contents":"La sección de Habilidades ha sido diseñada para mostrar sus habilidades y proporcionar información sobre su experiencia en cada habilidad. Esta guía lo guiará a través del proceso de configuración de la sección de Habilidades en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo skills.yaml.\nPara empezar, crea un nuevo archivo llamado skills.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.\nAñade la información de la sección Añade la siguiente sección de metadatos en el archivo skills.yaml:\nsection: name: Habilidades # Título de la sección (predeterminado: \u0026#34;\u0026#34;) id: skills # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 2 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación # Opcionalmente puede ocultar el título del menú # hideTitle: true Añade tus habilidades Para añadir una habilidad añada su información debajo de la sección skills dentro del archivo skills.yaml, como a continuación:\n# Tus habilidades # Haz un resumen de cada habilidad. skills: - name: Kubernetes icon: \u0026#34;images/sections/skills/kubernetes.png\u0026#34; summary: \u0026#34;Capaz de implementar y administrar aplicaciones en Kubernetes. Con experiencia en escribir controladores de Kubernetes para CRD.\u0026#34; url: https://kubernetes.io/ Aquí, debes proveer los campos name, log, y summary para cada habilidad. El campo summary debe proveer una idea sobre su profundo conocimiento de esta habilidad en particular.\nPuedes usar la sintáctica de markdown en el campo summary.\nLa siguiente imagen muestra cómo el contenido de skills.yaml está distribuido en la sección de Habilidades.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/skills/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/skills/","summary":"La sección de Habilidades ha sido diseñada para mostrar sus habilidades y proporcionar información sobre su experiencia en cada habilidad. Esta guía lo guiará a través del proceso de configuración de la sección de Habilidades en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo skills.yaml.\nPara empezar, crea un nuevo archivo llamado skills.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.","tags":null,"title":"Configurando la sección de Habilidades"},{"categories":null,"contents":"La sección de Educación ha sido diseñada para mostrar su formación académica. En esta publicación, le guiaré a través del proceso de configuración de la sección de Educación en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo education.yaml.\nPara empezar, crea un nuevo archivo llamado education.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.\nAñade la información de la sección Añade la siguiente sección de metadatos en el archivo education.yaml:\nsection: name: Educación # Título de la sección (predeterminado: \u0026#34;\u0026#34;) id: education # id del url de la sección *se requiere* template: sections/education.html # Usa \u0026#34;sections/education-alt.html\u0026#34; para una plantilla alterna enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 4 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación # Opcionalmente puede ocultar el título del menú # hideTitle: true Añade sus grados académicos Para añadir una educación, incluya la información respectiva en la sección degrees en el archivo education.yaml como se muestra a continuación:\ndegrees: - name: Doctorado en Criptografía Cuántica icon: fa-microscope timeframe: 2016-2020 institution: name: Universidad de Teconología ABC url: \u0026#34;#\u0026#34; logo: /images/education/college.png # Ruta del logo grade: #(opcional) scale: CGPA achieved: 3.6 outOf: 4 publications: #(opcional) - title: Lorem ipsum dolor sit amet, consectetur adipiscing elit. url: \u0026#34;#\u0026#34; - title: Fusce eu augue ut odio porttitor pulvinar. url: \u0026#34;#\u0026#34; - title: Nullam vitae orci tincidunt purus viverra pulvinar. url: \u0026#34;#\u0026#34; extracurricularActivities: #(opcional), suporta markdown - Lorem ipsum dolor sit amet, consectetur adipiscing elit. - Fusce eu augue ut odio porttitor pulvinar. custonSections: #(opcional) - name: Tesis content: Lorem ipsum dolor sit amet, consectetur adipiscing elit. - name: Supervisor content: Fusce eu augue ut odio porttitor pulvinar. Asegúrese que el icono que utilices esté disponible en Font Awesome.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/education/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/education/","summary":"La sección de Educación ha sido diseñada para mostrar su formación académica. En esta publicación, le guiaré a través del proceso de configuración de la sección de Educación en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo education.yaml.\nPara empezar, crea un nuevo archivo llamado education.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.\nAñade la información de la sección Añade la siguiente sección de metadatos en el archivo education.","tags":null,"title":"Configurando la sección de Educación"},{"categories":null,"contents":"La sección de Experiencia ha sido diseñada para mostrar su trayectoria profesional y resalte las responsabilidades que ha asumido a lo largo de su trayectoria profesional. En esta publicación, le guiaré a través del proceso de configuración de la sección de Experiencia en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo experiences.yaml.\nPara empezar, crea un nuevo archivo llamado experiences.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.\nAñade la información de la sección Añade la siguiente sección de metadatos en el archivo experiences.yaml:\nsection: name: Experiencia # Título de la sección (predeterminado: \u0026#34;\u0026#34;) id: experiences # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 3 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación # Opcionalmente puede ocultar el título del menú # hideTitle: true Añade tu experiencia Para añadir una experiencia, añade la respectiva información debajo de la sección experiences dentro del archivo experiences.yaml, como a continuación:\n# Tu experiencia experiences: - company: name: Example Co. url: \u0026#34;https://www.example.com\u0026#34; location: Dhaka Branch logo: /images/experiences/company.png # resumen de la empresa overview: Example Co. es una empresa ampliamente reconocida de cloud-native development. Crea herramientas para Kubernetes. positions: - designation: Ingeniero de Software Sénior start: Nov 2019 # No des una fecha de finalización si aún trabajas ahí. Será sustituida \u0026#34;Presente\u0026#34; # end: Dec 2020 # Da unos puntos sobre tus responsablildades en la empresa. responsibilities: - Diseñar y desarollar la herramienta XYZ para la tarea ABC - Diseñar, desarollar y administrar herramienta de recuperación de desastres [Xtool](https://www.example.com) que hace copias de seguridad de volúmenes de Kubernetes, Bases de Datos y definición de recursos del clúster. - Líder del equipo de backend. - designation: Ingeniero de Software Júnior start: Nov 2017 end: Oct 2019 responsibilities: - Implementar y testear la funcionalidad xyz de la herramienta abc. - Dar soporte al cliente de la herramienta abc. - Aprender tecnología k,d,w de xyz. Cada entrada de la sección experiences debería tener la siguiente información,\ncompany: Información sobre tu empresa. Deberías proveer name, url, location, logo, y un breve overview de la empresa. positions: Lista de posiciones que has tenido en la empresa. Puedes proveer múltiples posiciones si has cambiado de posición en la empresa. designation: Representa los roles que has tenido en la posición correspondiente. start: Fecha en que te uniste en la respectiva posición. end: Fecha en que dejaste la posición. Si aún está trabajando en esa posición, no llenes este campo. responsibilities: Lista de responsabilidades que tuviste en esa posición. Esta sección es muy importante, ya que el visitante podrá tener una idea sobre las responsabilidades profesionales que eres capaz de manejar. Puedes usar la sintáctica de markdown en el campo overview de la sección company y el campo de responsibilities.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/experiences/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/experiences/","summary":"La sección de Experiencia ha sido diseñada para mostrar su trayectoria profesional y resalte las responsabilidades que ha asumido a lo largo de su trayectoria profesional. En esta publicación, le guiaré a través del proceso de configuración de la sección de Experiencia en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo experiences.yaml.\nPara empezar, crea un nuevo archivo llamado experiences.yaml dentro del directorio data/es/sections de tu sitio web.","tags":null,"title":"Configurando la sección de Experiencia"},{"categories":null,"contents":"El propósito de la sección Proyectos es mostrar eficazmente sus proyectos. En esta publicación, le guiaré a través del proceso de configuración de la sección de Proyectos en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo projects.yaml.\nPara empezar, crea un nuevo archivo llamado projects.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.\nAñade la información de la sección Añade la siguiente sección de metadatos en el archivo projects.yaml:\nsection: name: Proyectos # Título de la sección (predeterminado: \u0026#34;\u0026#34;) id: projects # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 5 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación # Opcionalmente puede ocultar el título del menú # hideTitle: true Añade los botones de filtrado de proyectos Ahora, añade una sección buttons dentro del archivo projects.yaml, como a continuación,\nbuttons: - name: Todos filter: \u0026#34;all\u0026#34; - name: Professional filter: \u0026#34;professional\u0026#34; - name: Académico filter: \u0026#34;academic\u0026#34; - name: Hobby filter: \u0026#34;hobby\u0026#34; Cada botón tiene dos propiedades. La primera propiedad es name, que es el texto que se mostrará en el botón, y la otra es filter que especifica la categoría de los proyectos que el botón debe seleccionar.\nUn botón solo mostrará los proyectos que tengan una etiqueta que coincida con el texto especificado en el campo filter. El filtro del valor all es tratado especialmente. Selecciona todos los proyectos aunque no tengan la etiqueta all en su campo tags.\nAñade tus proyectos Ahora, añade tus proyectos debajo de la sección projects del archivo, projects.yaml como a continuación,\nprojects: - name: Kubernetes logo: images/sections/projects/kubernetes.png role: Contribuidor timeline: \u0026#34;Marzo 2018 - Presente\u0026#34; repo: https://github.com/kubernetes/kubernetes #url: \u0026#34;\u0026#34; summary: Programación y gestión de contenedores de nivel de producción. tags: [\u0026#34;professional\u0026#34;, \u0026#34;kubernetes\u0026#34;, \u0026#34;cloud\u0026#34;] Puedes especificar los siguientes campos en cada proyecto,\nname: Nombre del proyecto. logo: Logo del proyecto. Si el proyecto no tiene logo, el tema automáticamente añadirá un marcador de posición allí. role: Tu rol en el proyecto. timeline: Intervalo de tiempo que has trabajado en el proyecto. repo: Si tu proyecto tiene un repositorio público de Github, entonces provee el enlace. Mostrará el contador de estrellas. url: Si tu proyecto no tiene un repositorio público, pero tiene una página web u otra url de detalles externos, proveelo aquí. No provees \u0026ldquo;repo\u0026rdquo; y \u0026ldquo;url\u0026rdquo; a la vez. Esto creará un botón con un enlace en la tarjeta del proyecto. summary: Breve descripción del proyecto. tags: Lista de etiquetas de tu proyecto. Se usarán para seleccionar el proyecto debajo de una categoría con los botones de filtrado. Puedes usar la sintáctica de markdown en el campo summary.\nLa siguiente imagen muestra cómo el contenido de projects.yaml está distribuido en la sección de Proyectos.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/projects/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/projects/","summary":"El propósito de la sección Proyectos es mostrar eficazmente sus proyectos. En esta publicación, le guiaré a través del proceso de configuración de la sección de Proyectos en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo projects.yaml.\nPara empezar, crea un nuevo archivo llamado projects.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.\nAñade la información de la sección Añade la siguiente sección de metadatos en el archivo projects.","tags":null,"title":"Configurando la sección de Proyectos"},{"categories":null,"contents":"La sección de Publicaciones Recientes sirve para mostrar las últimas publicaciones de tu contenido. Para habilitar esta sección, crea un archivo recent-posts.yaml dentro del directorio data/en/sections e incluye el siguiente contenido:\n# Información de la sección section: name: Publicaciones Recientes # Título de la sección id: recent-posts # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 6 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación hideTitle: true # Opcionalmente puede ocultar el título del menú (predeterminado: false) numShow: 4 # Opcionalmente puede incrementar el número de publicaciones para mostrar (predeterminado: 3) showMoreButton: false # Opcionalmente puede mostrar el botón `Más publicaciones` (predeterminado: false) ","date":"June 8, 2020","hero":"/posts/configuration/sections/recent-posts/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/recent-posts/","summary":"La sección de Publicaciones Recientes sirve para mostrar las últimas publicaciones de tu contenido. Para habilitar esta sección, crea un archivo recent-posts.yaml dentro del directorio data/en/sections e incluye el siguiente contenido:\n# Información de la sección section: name: Publicaciones Recientes # Título de la sección id: recent-posts # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 6 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación hideTitle: true # Opcionalmente puede ocultar el título del menú (predeterminado: false) numShow: 4 # Opcionalmente puede incrementar el número de publicaciones para mostrar (predeterminado: 3) showMoreButton: false # Opcionalmente puede mostrar el botón `Más publicaciones` (predeterminado: false) ","tags":null,"title":"Configurando la sección de Publicaciones Recientes"},{"categories":null,"contents":"La sección de Logros ha sido diseñada para mostrar sus logros en un formato de galería visualmente atractivo. Esta guía lo guiará a través del proceso de configuración de la sección de Logros en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo achievements.yaml.\nPara empezar, crea un nuevo archivo llamado achievements.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.\nAñade la información de la sección Añade la siguiente sección de metadatos en el archivo achievements.yaml:\nsection: name: Logros # Título de la sección (predeterminado: \u0026#34;\u0026#34;) id: achievements # id del url de la sección *se requiere* enable: true # Booleano que determina si la sección está activada (predeterminado: false) weight: 9 # Orden de la sección (predeterminado: alfabeticamente seguida del peso) showOnNavbar: true # Booleano que determina si el enlace de esta sección debe aparecer en la barra de navegación # Opcionalmente puede ocultar el título del menú # hideTitle: true Añade tus logros Para añadir tus logros, abre el archivo achievements.yaml e incluye las siguientes entradas debajo de la sección achievements:\nachievements: - title: Mejor presentador image: images/sections/achievements/presenter.jpg summary: Mejor presentador en la conferencia XYZ 2020. Cada entrada de logro, debe tener los siguientes campos,\ntitle: El título del logro. image: La imagen del logro. summary: Un resumen del logro. Puedes usar la sintáctica de markdown en el campo summary.\nLa siguiente imagen muestra cómo el contenido de achievements.yaml está distribuido en la sección de Logros.\n","date":"June 8, 2020","hero":"/posts/configuration/sections/achievements/hero.svg","permalink":"http://localhost:1313/es/posts/configuration/sections/achievements/","summary":"La sección de Logros ha sido diseñada para mostrar sus logros en un formato de galería visualmente atractivo. Esta guía lo guiará a través del proceso de configuración de la sección de Logros en su sitio web. Para obtener una referencia completa, puede consultar el archivo de ejemplo achievements.yaml.\nPara empezar, crea un nuevo archivo llamado achievements.yaml dentro del directorio data/es/sections de tu sitio web. Después, sigue las instrucciones de abajo.","tags":null,"title":"Configurando la sección de Logros"},{"categories":null,"contents":"Primero, necesitamos entender cómo crear una publicación para poder crear categorías.\nCrear una Publicación Para crear una publicación en tu primer blog, primero necesitas ir al directorio posts. Ahí crea un archivo _index.md (el nombre tiene que ser exactamente el mismo). Después, abre el archivo y añade las siguientes líneas: --- title: Posts --- Ahora, guarda y cierra el archivo. Ahora, supone que quieres escribir una publicación. Primero, crea un archivo y nómbralo con la extensión de markdown al final. Por ejemplo: hemos creado el archivo nombrado analytics-and-comments.md y hemos añadido las siguientes líneas: --- title: \u0026quot;Analytics and Comments\u0026quot; date: 2020-06-08T06:00:23+06:00 hero: /images/posts/writing-posts/analytics.svg description: Adding analytics and disquss comment in hugo theme: Toha menu: sidebar: name: Analytics \u0026amp; Comments identifier: analytics-and-comments weight: 500 --- ### Complete Post Coming Soon... Como sabemos, el encabezado de este archivo empieza y acaba con tres guiones horizontales (---) es nombrado front-matter, y todos los posts que escribamos necesitan tener el front-matter incluido ahí. Vamos a entender cuáles son los parámetros, y para qué sirven: title: Este es el título de tu publicación. date: Esta es la fecha y hora que muestra la fecha y hora de publicación de tu blog. La primera porción está en el formato year-month-date. Puedes editar la fecha y hora como quieras. hero: Aquí, necesitarás incluir la ruta de la imagen de portada de tu publicación. Vaya al directorio static y crea un directorio nombrado images (únicamente si no lo tienes). Después, dentro de este directorio crea un nuevo directorio nombrado posts, y dentro de este, hemos creado un directorio nombrado writing-posts, donde hemos puesto el archivo de imagen analytics.svg. Ahora copia la ruta, y añádalo al parámetro hero. description: Añade la descripción que te convenga. menu: Esta sección contiene otros parámetros nombrados sidebar que configurarán cómo se mostrará la estructura del archivo en la barra lateral. Debajo de este, tenemos: name: Este define cual será el nombre del documento en la barra lateral. identifier: Este ayuda a identificar el archivo con otros archivos en términos de la categoría. weight: Se asigna un valor a este parámetro como valor de peso y, para varios archivos, los documentos aparecerán en la jerarquía de archivos según este valor de peso en orden ascendente.\nDespués del front-matter, puedes escribir cualquier contenido siguiendo la sintaxis de markdown.\nLa siguiente imagen muestra cómo el contenido de analytics-and-comments.md está distribuido en la sección de la barra lateral.\nEn la figura de arriba, Features, Installation, Configuration, Writing Posts, Customizing, Short Codes, etc., son directorios creados para otras publicaciones.\nCrear una Categoría Como hemos creado un archivo _index.md y una publicación anteriormente, ahora, para crear una categoría, necesitamos crear un directorio. Hemos creado un directorio nombrado getting-started, y dentro de este, hemos creado otro archivo _index.md, que tendrá el siguiente contenido front-matter:\n--- title: Deploy Site menu: sidebar: name: Deploy Site identifier: getting-started weight: 300 --- El significado de cada parámetro ha sido explicado anteriormente. Ahora, ten en cuenta que vamos a crear el nombre de la categoría como getting-started, por eso lo incluimos como identificador en este archivo \u0026ldquo;_index.md\u0026rdquo;, pero puede darle el nombre que desee. Después, vamos a crear un archivo markdown nombrado github-pages.md que será nuestra publicación en este directorio. Nuestro archivo github-pages.md tiene las siguientes líneas:\n--- title: \u0026#34;Deploy site in Github Pages\u0026#34; date: 2020-06-08T06:00:20+06:00 hero: /images/posts/writing-posts/git.svg menu: sidebar: name: Github Pages identifier: getting-started-github parent: getting-started weight: 10 --- ### Próximamente... Ya conocemos los parámetros usados aquí, pero tenemos uno nuevo incluido, que es parent. Si nos damos cuenta, entenderemos que el valor de este parámetro y el valor del parámetro identifier en el archivo _index.md dentro de este directorio son ambos iguales. Debemos tener cuidado de que el valor de ambos parámetros coincida. Ahora puedes agregar tantas publicaciones y categorías como quieras siguiendo el procedimiento mencionado anteriormente. Así es cómo creamos las categorías.\nLa siguiente imagen muestra cómo el contenido está distribuido en la sección de la barra lateral.\nPersonalizando la información del auto de la publicación Por defecto, la publicación usa la información de autor del archivo config.yaml. Si quieres sobrescribir la información predeterminada, simplemente añade la siguiente sección en el front-matter:\nauthor: name: Md.Habibur Rahman image: /images/authors/habib.jpg El front-matter debería parecerse a:\ntitle: \u0026#34;Creando una Categoría\u0026#34; date: 2020-06-08T06:15:55+06:00 # hero: images/background/flower.jpg author: name: Md.Habibur Rahman image: /images/authors/habib.jpg menu: sidebar: name: Creando una Categoría identifier: writing-post-category-create parent: writing-post-category weight: 10 ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/es/posts/writing-posts/organizing/category/","summary":"Primero, necesitamos entender cómo crear una publicación para poder crear categorías.\nCrear una Publicación Para crear una publicación en tu primer blog, primero necesitas ir al directorio posts. Ahí crea un archivo _index.md (el nombre tiene que ser exactamente el mismo). Después, abre el archivo y añade las siguientes líneas: --- title: Posts --- Ahora, guarda y cierra el archivo. Ahora, supone que quieres escribir una publicación. Primero, crea un archivo y nómbralo con la extensión de markdown al final.","tags":null,"title":"Creando una Categoría"},{"categories":null,"contents":"Próximamente\u0026hellip; ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/es/posts/writing-posts/organizing/sub-category/example/","summary":"Próximamente\u0026hellip; ","tags":null,"title":"Creando una Sub-Categoría"},{"categories":null,"contents":"Próximamente\u0026hellip; ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/es/posts/writing-posts/front-matter/","summary":"Próximamente\u0026hellip; ","tags":null,"title":"Front-matter"},{"categories":null,"contents":"Este artículo ofrece un ejemplo de las bases de la sintaxis de Markdown que se pueden usar en los archivos de contenido de Hugo. También muestra cómo los elementos básicos de HTML están decorados con CSS en un tema Hugo.\nEncabezados Los siguientes elementos de HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; representan seis niveles de encabezados de secciones. \u0026lt;h1\u0026gt; es el mayor nivel, mientras \u0026lt;h6\u0026gt; es el menor.\nH1 H2 H3 H4 H5 H6 Parágrafo Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nCitas en bloque El elemento de citas en bloque representa contenido citado de otra fuente, opcionalmente con una cita que debe estar dentro de un elemento pie de página o cita, y opcionalmente con cambios en línea, como anotaciones y abreviaturas.\nCitas en bloque sin atribución Tiam, ad mint andaepu dandae nostion secatur sequo quae. Nota puede usar sintaxis de markdown dentro de una cita en bloque.\nCitas en bloque con atribución Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTablas Las tablas no son parte de la especificación principal de Markdown, pero Hugo las admite.\nNombre Edad Bob 27 Alice 23 Markdown en línea dentro de tablas Markdown en línea dentro de tablas cursiva negrita tachado código Bloques de código Bloques de código con comillas inveridas html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Ejemplo de documento de HTML5\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Prueba\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Bloques de código identado con cuatro espacios \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Ejemplo de documento de HTML5\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Prueba\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Bloques de código con el shortcode de resalto interno de Hugo \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Ejemplo de documento de HTML5\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Prueba\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Tipos de Lista Lista Ordenada Primer elemento Segundo elemento Tercer elemento Lista Desordenada Elemento de la lista Otro elemento Y otro elemento Lista Anidada Fruta Manzana Naranja Plátano Lácteos Leche Queso Otros Elementos — abbr, sub, sup, kbd, mark GIF es un formato de imagen de mapa de bits.\nH2O\nXn + Yn = Zn\nPresione CTRL+ALT+Delete para finalizar la sesión.\nLa mayoría de las salamandras son nocturnas y cazan insectos, gusanos y otras criaturas pequeñas.\nLa cita anterior está extraída de la charla de Rob Pike durante el Gopherfest, el 18 de noviembre de 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/es/posts/writing-posts/markdown-syntax/","summary":"\u003cp\u003eEste artículo ofrece un ejemplo de las bases de la sintaxis de Markdown que se pueden usar en los archivos de contenido de Hugo. También muestra cómo los elementos básicos de HTML están decorados con CSS en un tema Hugo.\u003c/p\u003e","tags":null,"title":"Guía de Sintxis de Markdown"},{"categories":null,"contents":"La notación matemática en un proyecto Hugo se puede habilitar mediante el uso de librerías JavaScript de terceros.\nEn este ejemplo usaremos KaTeX\nCrea un partial debajo de /layouts/partials/math.html Dentro de esta referencia del partial, se hace referencia a la Auto-render Extension o al host de estos scripts localmente. Incluye el partial en tus plantillas de la siguiente forma: {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} Para habilitar Katex globalmente establece el parámetro math a true en la configuración del proyecto en el archivo config.yaml. Para habilitar Katex en publicaciones concretas, incluye el parámetro math: true en los archivos de contenido correspondientes. Nota: Usa la referencia online de Supported TeX Functions Ejemplos Bloque matemático: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"June 8, 2020","hero":"/posts/writing-posts/math/hero.svg","permalink":"http://localhost:1313/es/posts/writing-posts/math/","summary":"\u003cp\u003eLa notación matemática en un proyecto Hugo se puede habilitar mediante el uso de librerías JavaScript de terceros.\u003c/p\u003e","tags":null,"title":"Configuración del tipado de Matemáticas"},{"categories":null,"contents":"Hugo viene con unos cuantos Built-in Shortcodes para el contenido enriquecido, junto con una configuración de privacidad y un conjunto de shortcodes simples que permiten versiones estáticas y sin varios embeds de redes sociales de JavaSrcipt.\nShortcode simple de Instagram Shortcode de privacidad mejorada de Youtube Shortcode simple de Twitter Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 Shortcode simple de Vimeo ","date":"June 8, 2020","hero":"/posts/writing-posts/rich-content/hero.svg","permalink":"http://localhost:1313/es/posts/writing-posts/rich-content/","summary":"\u003cp\u003eHugo viene con unos cuantos \u003ca href=\"https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes\" target=\"_blank\" rel=\"noopener\"\u003eBuilt-in Shortcodes\u003c/a\u003e para el contenido enriquecido, junto con una \u003ca href=\"https://gohugo.io/about/hugo-and-gdpr/\" target=\"_blank\" rel=\"noopener\"\u003econfiguración de privacidad\u003c/a\u003e y un conjunto de shortcodes simples que permiten versiones estáticas y sin varios embeds de redes sociales de JavaSrcipt.\u003c/p\u003e","tags":null,"title":"Contenido Enriquecido"},{"categories":null,"contents":"Los emojis se pueden habilitar a un proyecto de Hugo de distintas formas.\nLa función emojify se puede llamar directamente a las plantillas o a los Inline Shortcodes.\nPara habilitar los emojis globalmente, establece enableEmoji a true en el archivo config.yaml y después puedes escribir los códigos de los emojis directamente en archivos de contenido; por ejemplo. Más información aquí.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nEl Emoji cheat sheet es una referencia útil para códigos de emojis.\nNÓTESE BIEN. Los pasos anteriores habilitan secuencias y caracteres emoji estándar Unicode en Hugo; sin embargo, la representación de estos glifos depende del navegador y la plataforma. Para darle estilo al emoji, puedes usar una fuente de emoji de terceros o una pila de fuentes; por ejemplo.\n.emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }","date":"June 8, 2020","hero":"/posts/writing-posts/using-emoji/hero.svg","permalink":"http://localhost:1313/es/posts/writing-posts/using-emoji/","summary":"\u003cp\u003eLos emojis se pueden habilitar a un proyecto de Hugo de distintas formas.\u003c/p\u003e","tags":null,"title":"Usando Emojis"},{"categories":null,"contents":"Analíticas Este tema tiene soporte para varias herramientas de analíticas. Actualmente, soporta las siguientes analíticas:\nGoatCounter counter.dev Google Analytics Matomo Para una lista completa de las analíticas soportadas, puede consultar el archivo de ejemplo config.yaml.\nAdvertencia: Al añadir analíticas, debe considerar la legislación local para ver si se requiere un banner de privacidad para informar a los usuarios sobre el seguimiento de los datos personales. En general (no asesoramiento legal), los métodos anónimos y respetuosos de la privacidad, como counter.dev y GoatCounter, no necesitan un banner, ya que no recopilan datos de identificación personal. Goat Counter GoatCounter son las analíticas que soporta Toha más completas, simples y respetuosas con la privacidad. Su script rastrea las páginas más vistas, el número total de usuarios, dispositivos y mucho más, ¡todo mientras es de código abierto!\nPara habilitar las analíticas de GoatCounter en tu sitio, tienes dos opciones: acceder a goatcounter.com y obtener un código para tu sitio web, y el segundo es self-hostear una instancia de GoatCounter. Después, tienes que añadir la sección analytics debajo de la sección params.features de tu archivo config.yaml, como a continuación:\nanalytics: enable: true services: # GoatCounter goatCounter: code: \u0026lt;tu código de GoatCounter\u0026gt; # Sin self-hostear (Primera opción) instance: \u0026lt;your GoatCounter instance url\u0026gt; ## Para self-hosteat (Segunda opción). Sólo uses un método counter.dev counter.dev es un sitio web de análisis de código abierto, sencillo y respetuoso con la privacidad que le permite realizar un seguimiento del recuento total de usuarios, la primera página visitada y algunas otras métricas de su sitio web. Desafortunadamente, para simplificar las cosas (y gratis), no muestran una clasificación de las páginas más visitadas, sino de aquellas a las que se accede primero.\nPuedes habilitarlo añadiendo el email que te has registrado a la página de counter.dev debajo de la sección params.features de tu archivo config.yaml, como a continuación:\nanalytics: enable: true services: counterDev: id: \u0026lt;su id de counter.dev\u0026gt; El código de seguimiento automáticamente será añadido a tu sitio web.\nNota: En algunos sitios, aparece an error has been detected, donde solo el directorio raíz (\u0026quot;/\u0026quot;) se pasa a counter.dev, por lo que el seguimiento no mostrará nada en la sección \u0026ldquo;pages\u0026rdquo;. Para solucionar este problema, se puede añadir referrerPolicy: no-referrer-when-downgrade como parámetro en la sección \u0026ldquo;counterDev\u0026rdquo;, asegurando que las nuevas visitas a la página siempre se pasen correctamente a counter.dev. Google Analytics Tenga en cuenta que, según la jurisprudencia reciente, Google Analytics podría ser ilegal en la Unión Europea Puedes habilitar Google Analytics en tu sitio añadiendo tu id de rastreo debajo de la sección params.features de tu archivo config.yaml, como a continuación:\nanalytics: enable: true services: # Google Analytics google: id: \u0026lt;tu id de rastreo de Google Analytics\u0026gt; Puede utilizar el ID de seguimiento tanto V3 como V4. El tema detectará automáticamente la versión de seguimiento, y añadirá los scripts respectivos de acuerdo a tu sitio web.\nPara configuraciones de privacidad adicionales de Google Analytics, puedes proveer la sección privacy.googleAnalytics dentro del archivo config.yaml descrito aquí.\nMatomo Puedes habilitar Matomo (antes Piwik) en tu sitio añadiendo tu configuración de matomo debajo de la sección params.features de tu archivo config.yaml, como a continuación:\nanalytics: enable: true services: # Matomo / Piwik matomo: instance: matomo.example.com siteId: 1 # Número generado después de agregar tu sitio a tu instancia ","date":"June 8, 2020","hero":"/posts/analytics/hero.svg","permalink":"http://localhost:1313/es/posts/analytics/","summary":"Analíticas Este tema tiene soporte para varias herramientas de analíticas. Actualmente, soporta las siguientes analíticas:\nGoatCounter counter.dev Google Analytics Matomo Para una lista completa de las analíticas soportadas, puede consultar el archivo de ejemplo config.yaml.\nAdvertencia: Al añadir analíticas, debe considerar la legislación local para ver si se requiere un banner de privacidad para informar a los usuarios sobre el seguimiento de los datos personales. En general (no asesoramiento legal), los métodos anónimos y respetuosos de la privacidad, como counter.","tags":null,"title":"Analíticas"},{"categories":null,"contents":"Este tema tiene soporte integrado para varios idiomas.\nAntes de empezar la traducción de la publicación, asegúrese de haber habilitado el idioma en su sitio. Si ese no es el caso, puedes seguir la sección Añade el idioma en el sitio de la guía Cómo traducir los datos de la página de inicio.\nCreando la publicación Una vez que haya agregado el idioma deseado a su sitio web, sepa que puede traducir publicaciones a ese idioma. Asumiremos que deseas traducir una publicación existente.\nCreado el archivo index El primer paso es localizar el archivo index.md del post que deseas traducir. Después, crea un archivo en el mismo directorio (o simplemente copia el archivo index.md), y nómbralo index.\u0026lt;código_del_idioma\u0026gt;.md, dónde \u0026lt;código_del_idioma\u0026gt; es el código que encontrará en la tabla de idiomas de Cómo traducir los datos de la página de inicio.\nTraduce la publicación Ahora ya puede empezar traduciendo la publicación, de la misma forma que escribes una publicación nueva.\nINFORMACIÓN: Si está tratando con referencias internas, necesitarás añadir el prefijo /\u0026lt;código_del_idioma\u0026gt; delante del path relativo. Por ejemplo, si quieres crear un link que apunta a /posts/translation/site-data/, el link de la publicación traducida será /\u0026lt;language_code\u0026gt;/posts/translation/site-data/.\n","date":"June 7, 2020","hero":"/posts/translation/content/hero.jpg","permalink":"http://localhost:1313/es/posts/translation/content/","summary":"Este tema tiene soporte integrado para varios idiomas.\nAntes de empezar la traducción de la publicación, asegúrese de haber habilitado el idioma en su sitio. Si ese no es el caso, puedes seguir la sección Añade el idioma en el sitio de la guía Cómo traducir los datos de la página de inicio.\nCreando la publicación Una vez que haya agregado el idioma deseado a su sitio web, sepa que puede traducir publicaciones a ese idioma.","tags":null,"title":"Cómo traducir las publicaciones"},{"categories":null,"contents":"Este tema tiene soporte integrado para varios idiomas.\nAñade el idioma en el sitio Añadiendo el idioma a su sitio traducirá la interfaz de usuario a ese idioma (por ejemplo, los botones, las barras de navegación, etc.).\nObtener el código del idioma Para traducir su sitio, necesitará el código de su idioma. La siguiente tabla contiene los idiomas soportados junto con sus códigos:\nIdioma Código English en / none বাংলা bn Français fr Indonesian id Deutsch de Español es 简体中文 zh-cn / zh-tw हिन्दी hi Italiano it 日本語 jp 한국어 ko русский ru suomi fi Tiếng Việt vn Turkish tr Arabic (العربية) ar Português Europeu pt-pt Català ad Português Brasileiro pt-br Dutch nl Para una lista completa de los idiomas soportados, por favor, consulte el archivo README de toha repository.\nSi el idioma al que desea traducir el contenido no está disponible, consulte la guía Cómo añadir un idioma sin soporte.\nAñade el idioma a config.yaml Después de conocer el código para el idioma al que desea traducir su sitio, abra el archivo config.yaml y, debajo de la sección language, añade lo siguiente:\nlanguages: en: languageName: English weight: 1 \u0026lt;código_del_idioma\u0026gt;: languageName: \u0026lt;nombre_del_idioma\u0026gt; weight: 2 # Puedes establecer el orden de los idiomas con este valor Por ejemplo, si deseas establecer el francés como segundo idioma, la sección debería ser similar a:\nlanguages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 # Puedes establecer el orden de los idiomas con este valor Traduciendo la página de inicio Puedes traducir la página de inicio creando un nuevo directorio dentro de data. El nombre del nuevo directorio debería ser \u0026lt;código_del_idioma\u0026gt;. Por ejemplo, si queremos traducirlo al francés, crearemos el directorio fr dentro de data.\nAfterwards you can create your usual data file like about.yaml or education.yaml files, keeping the same file structure and maintaining the same file names. Inside those files, you can just translate the content of the fields into your desired language. Luego, puede crear sus archivos de datos habituales, como about.yaml o education.yaml, manteniendo la misma estructura y los mismos nombres de archivos. Dentro de esos archivos, puede traducir el contenido de los campos al idioma que desee.\nA continuación Puedes consultar la siguiente guía Cómo traducir las publicaciones.\n","date":"June 7, 2020","hero":"/posts/translation/site-data/hero.jpg","permalink":"http://localhost:1313/es/posts/translation/site-data/","summary":"Este tema tiene soporte integrado para varios idiomas.\nAñade el idioma en el sitio Añadiendo el idioma a su sitio traducirá la interfaz de usuario a ese idioma (por ejemplo, los botones, las barras de navegación, etc.).\nObtener el código del idioma Para traducir su sitio, necesitará el código de su idioma. La siguiente tabla contiene los idiomas soportados junto con sus códigos:\nIdioma Código English en / none বাংলা bn Français fr Indonesian id Deutsch de Español es 简体中文 zh-cn / zh-tw हिन्दी hi Italiano it 日本語 jp 한국어 ko русский ru suomi fi Tiếng Việt vn Turkish tr Arabic (العربية) ar Português Europeu pt-pt Català ad Português Brasileiro pt-br Dutch nl Para una lista completa de los idiomas soportados, por favor, consulte el archivo README de toha repository.","tags":null,"title":"Cómo traducir los datos de la página de inicio"}]