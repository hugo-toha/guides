<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting Started on Toha</title>
    <link>http://localhost:1313/posts/getting-started/</link>
    <description>Recent content in Getting Started on Toha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 08 Jun 2020 23:00:20 +0600</lastBuildDate><atom:link href="http://localhost:1313/posts/getting-started/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Prepare Your Site</title>
      <link>http://localhost:1313/posts/getting-started/prepare-site/</link>
      <pubDate>Mon, 08 Jun 2020 23:00:20 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/prepare-site/</guid>
      <description>In this post, we are going to create a hugo site from scratch. Then, we will configure it with Toha theme, make it multilingual, add some example posts. At the end of this post, you should be able to run a fully functional hugo site with Toha theme locally.
If you want a head start, you can just fork hugo-toha/hugo-toha.github.io repo, rename it and update with your own data. This repo has already been configured to deploy in Github Pages and Netlify.</description>
    </item>
    
    <item>
      <title>Deploy site in Github Pages</title>
      <link>http://localhost:1313/posts/getting-started/github-pages/</link>
      <pubDate>Mon, 08 Jun 2020 22:00:20 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/github-pages/</guid>
      <description>In this post, we are going to deploy the site we have created in previous post in Github Pages. At first, make sure that your repository name is &amp;lt;your username&amp;gt;.github.io. Then, commit any local uncommitted changes and push into Github.
Create gh-pages Branch At first, create a new branch named gh-pages. Github will automatically set respective configurations for Github Pages when it see a branch with this name.
# create the gh-pages branch $ git checkout -b gh-pages # push the source branch into Github $ git push gh-pages gh-pages Enable Github Action We are going to automate the deploying process using Github Actions.</description>
    </item>
    
    <item>
      <title>Deploy site in Netlify</title>
      <link>http://localhost:1313/posts/getting-started/netlify/</link>
      <pubDate>Mon, 08 Jun 2020 21:00:15 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/netlify/</guid>
      <description>Netlify offers an excellent and easy process for deploying hugo static site. You can deploy your site in matter of few clicks. Unlike Github Pages, you can name your repository whatever you want. You can also customize the site URL.
In this post, we will show the step-by-step process of deploying a hugo site with netlify.
Add Netlify Configuration At first, create a netlify.toml file at the root of your repository and add the following configuration there:</description>
    </item>
    
    <item>
      <title>Automate Theme Update</title>
      <link>http://localhost:1313/posts/getting-started/theme-update/</link>
      <pubDate>Mon, 08 Jun 2020 20:00:15 +0600</pubDate>
      
      <guid>http://localhost:1313/posts/getting-started/theme-update/</guid>
      <description>To ensure your site benefits from the most recent features and corrections, it&amp;rsquo;s crucial to keep it updated with the latest theme version. This article will guide you through the process of establishing a GitHub workflow that will automatically update the theme version. This action will perform daily checks for any updates to the theme. If an update is detected, it will generate a PR to update your site to the most recent theme version.</description>
    </item>
    
    
  </channel>
</rss>
